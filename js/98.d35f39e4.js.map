{"version":3,"file":"js/98.d35f39e4.js","mappings":"g5DAqKA,MAAM,EAAEA,IAAMC,EAAAA,EAAAA,MAERC,GAAQC,EAyBRC,IAAmBC,EAAAA,EAAAA,KAAS,IAC5BH,GAAMI,WAAWC,WACZ,CACLC,WAAY,2BAA2BN,GAAMI,WAAWC,eAAeE,GAAaP,GAAMI,WAAWC,WAAY,OACjHG,MAAO,WAGJ,CAAC,IAIV,SAASD,GAAaC,EAAOC,GAC3B,MAAMC,EAAMC,SAASH,EAAMI,QAAQ,IAAK,IAAK,IACvCC,EAAMC,KAAKC,MAAM,KAAON,GACxBO,GAAKN,GAAO,IAAMG,EAClBI,GAAKP,GAAO,EAAI,KAAUG,EAC1BK,GAAW,IAANR,GAAkBG,EAC7B,MAAO,KAAO,SAA8C,OAAjCG,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,KACjB,KAAjCC,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAC1BC,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAAMC,SAAS,IAAIC,MAAM,EACxD,CAGA,SAASC,GAAeC,GACtB,YAAcC,IAAVD,GAAiC,OAAVA,GAAkBE,MAAMF,GAC1C,MAEF,IAAIG,KAAKC,aAAa,QAAS,CACpCC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOP,EACV,CAGF,SAASQ,GAAmBC,GAC1B,OAAOjB,KAAKkB,IAAID,GAAOE,QAAQ,EACjC,CAEA,MAAMC,GAAOC,EAIPC,IAAeC,EAAAA,EAAAA,IAAI,IAGnBC,GAAcA,KAClB,IAEEJ,GAAK,eAAgBlC,GAAMI,YAE3B8B,GAAK,qBAAqB,EAC5B,CAAE,MAAOK,IACPC,EAAAA,EAAAA,IAAYD,GAAQE,GAAQL,GAAad,MAAQmB,GACnD,G,y8KC/OF,MAAMC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://my-new-project/./src/domains/budget/components/SharedBudgetDetailModal.vue","webpack://my-new-project/./src/domains/budget/components/SharedBudgetDetailModal.vue?d44f"],"sourcesContent":["<template>\n  <teleport to=\"body\">\n    <transition name=\"modal\" appear>\n      <div v-if=\"modelValue\" class=\"shared-budget-modal\" \n           aria-modal=\"true\" role=\"dialog\" \n           tabindex=\"-1\">\n        <!-- Modal Backdrop -->\n        <div \n          class=\"modal-backdrop\"\n          @click=\"$emit('update:modelValue', false)\"\n        ></div>\n        \n        <!-- Modal Container -->\n        <div class=\"modal-container\">\n          <!-- Modal Header with optional party color styling -->\n          <div class=\"modal-header\" :style=\"partyHeaderStyle\">\n            <h2 class=\"modal-title\">{{ budgetData.title || t('simulator.sharedBudgetDetailModal.title') }}</h2>\n            <button \n              @click=\"$emit('update:modelValue', false)\"\n              class=\"close-button\"\n              :aria-label=\"t('simulator.sharedBudgetDetailModal.ariaLabels.closeModal', 'Close modal')\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n          \n          <!-- Modal Body -->\n          <div class=\"modal-body\">\n            <!-- Detailed Card Preview -->\n            <BudgetSentimentBadgeCard :budget-data=\"budgetData\" />\n                <div class=\"metric-card\" :class=\"budgetData.surplus >= 0 ? 'positive' : 'negative'\">\n                  <div class=\"metric-icon\">\n                    <span class=\"material-icons\">{{ budgetData.surplus >= 0 ? 'trending_up' : 'trending_down' }}</span>\n                  </div>\n                  <div class=\"metric-content\">\n                    <div class=\"metric-label\">{{ budgetData.surplus >= 0 ? t('simulator.sharedBudgetDetailModal.metrics.surplus') : t('simulator.sharedBudgetDetailModal.metrics.deficit') }}</div>\n                    <div class=\"metric-value\">\n                      {{ budgetData.surplus >= 0 ? '+' : '' }}${{ formatCurrency(budgetData.surplus) }}B\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"metric-card\">\n                  <div class=\"metric-icon\">\n                    <span class=\"material-icons\">payments</span>\n                  </div>\n                  <div class=\"metric-content\">\n                    <div class=\"metric-label\">{{ t('simulator.sharedBudgetDetailModal.metrics.revenue') }}</div>\n                    <div class=\"metric-value\">${{ formatCurrency(budgetData.revenue) }}B</div>\n                  </div>\n                </div>\n                \n                <div class=\"metric-card\">\n                  <div class=\"metric-icon\">\n                    <span class=\"material-icons\">account_balance</span>\n                  </div>\n                  <div class=\"metric-content\">\n                    <div class=\"metric-label\">{{ t('simulator.sharedBudgetDetailModal.metrics.debtToGdp') }}</div>\n                    <div class=\"metric-value\">{{ budgetData.debt.toFixed(1) }}%</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Party Budget Description & Highlights (if available) -->\n            <div v-if=\"budgetData.description || budgetData.highlights?.length\" class=\"budget-highlights-section\">\n              <div v-if=\"budgetData.description\" class=\"budget-description\">\n                <p>{{ budgetData.description }}</p>\n              </div>\n              \n              <div v-if=\"budgetData.highlights?.length\" class=\"budget-highlights\">\n                <h3 class=\"highlights-title\">{{ t('simulator.sharedBudgetDetailModal.highlights.title') }}</h3>\n                <ul class=\"highlights-list\">\n                  <li v-for=\"(highlight, index) in budgetData.highlights\" :key=\"index\" class=\"highlight-item\">\n                    <span class=\"highlight-bullet\">â€¢</span>\n                    <span class=\"highlight-text\">{{ highlight }}</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            \n            <!-- Sentiment Analysis Section -->\n            <div class=\"sentiment-section\">\n              <h3 class=\"section-title\">{{ t('simulator.sharedBudgetDetailModal.sentiment.title') }}</h3>\n              \n              <!-- Positive Segments -->\n              <div v-if=\"budgetData.positiveSegments.length > 0\" class=\"sentiment-group\">\n                <div class=\"sentiment-header positive\">\n                  <span class=\"material-icons\">trending_up</span>\n                  <h4>{{ t('simulator.sharedBudgetDetailModal.sentiment.mostPositive') }}</h4>\n                </div>\n                <div class=\"segments-grid\">\n                  <div v-for=\"segment in budgetData.positiveSegments\" :key=\"segment.name\" \n                       class=\"segment-card positive\">\n                    <div class=\"segment-score\">+{{ formatSegmentScore(segment.score) }}</div>\n                    <div class=\"segment-name\">{{ segment.name }}</div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Negative Segments -->\n              <div v-if=\"budgetData.negativeSegments.length > 0\" class=\"sentiment-group\">\n                <div class=\"sentiment-header negative\">\n                  <span class=\"material-icons\">trending_down</span>\n                  <h4>{{ t('simulator.sharedBudgetDetailModal.sentiment.mostNegative') }}</h4>\n                </div>\n                <div class=\"segments-grid\">\n                  <div v-for=\"segment in budgetData.negativeSegments\" :key=\"segment.name\" \n                       class=\"segment-card negative\">\n                    <div class=\"segment-score\">{{ formatSegmentScore(segment.score) }}</div>\n                    <div class=\"segment-name\">{{ segment.name }}</div>\n                  </div>\n                </div>\n              </div>\n              \n              <div v-if=\"budgetData.positiveSegments.length === 0 && budgetData.negativeSegments.length === 0\" \n                   class=\"no-data-message\">\n                {{ t('simulator.sharedBudgetDetailModal.sentiment.noData') }}\n              </div>\n            </div>\n            \n            <!-- Badges Section -->\n            <div class=\"badges-section\">\n              <h3 class=\"section-title\">{{ t('simulator.sharedBudgetDetailModal.badges.title') }}</h3>\n              \n              <div v-if=\"budgetData.badges.length > 0\" class=\"badges-grid\">\n                <div v-for=\"badge in budgetData.badges\" :key=\"badge.name\" \n                     class=\"badge-card\">\n                  <div class=\"badge-icon\">{{ badge.icon }}</div>\n                  <div class=\"badge-content\">\n                    <div class=\"badge-name\">{{ badge.name }}</div>\n                    <div class=\"badge-description\">{{ badge.explanation || t('simulator.sharedBudgetDetailModal.badges.fallbackDescription') }}</div>\n                  </div>\n                </div>\n              </div>\n              \n              <div v-if=\"budgetData.badges.length === 0\" class=\"no-data-message\">\n                {{ t('simulator.sharedBudgetDetailModal.badges.noBadges') }}\n              </div>\n            </div>\n            \n            <!-- Action Buttons -->\n            <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n            <div class=\"action-buttons\">\n              <button @click=\"applyBudget\" class=\"apply-button\">\n                <span class=\"material-icons\">play_arrow</span>\n                {{ t('simulator.sharedBudgetDetailModal.buttons.apply') }}\n              </button>\n              <button @click=\"$emit('update:modelValue', false)\" class=\"cancel-button\">\n                {{ t('simulator.sharedBudgetDetailModal.buttons.createCustom') }}\n              </button>\n            </div>\n          </div>\n        </transition>\n      </teleport>\n</template>\n\n<script setup>\nimport { computed, ref } from 'vue';\nimport { handleError } from '@/utils/errorHandler.js';\nimport BudgetSentimentBadgeCard from '@/domains/badges/components/BudgetSentimentBadgeCard.vue';\nimport { useI18n } from '@/i18n';\n\nconst { t } = useI18n();\n\nconst props = defineProps({\n  modelValue: {\n    type: Boolean,\n    default: false\n  },\n  budgetData: {\n    type: Object,\n    default: () => ({\n      surplus: 0,\n      revenue: 0,\n      debt: 0,\n      badges: [],\n      positiveSegments: [],\n      negativeSegments: [],\n      title: '',\n      description: '',\n      partyId: null,\n      partyColor: '',\n      highlights: [],\n      sliders: {}\n    })\n  }\n});\n\n// Create a dynamic style for the header based on party color\nconst partyHeaderStyle = computed(() => {\n  if (props.budgetData.partyColor) {\n    return {\n      background: `linear-gradient(135deg, ${props.budgetData.partyColor}, ${lightenColor(props.budgetData.partyColor, 20)})`,\n      color: '#ffffff'\n    };\n  }\n  return {};\n});\n\n// Helper function to lighten a color for the gradient\nfunction lightenColor(color, percent) {\n  const num = parseInt(color.replace(\"#\", \"\"), 16);\n  const amt = Math.round(2.55 * percent);\n  const R = (num >> 16) + amt;\n  const G = (num >> 8 & 0x00FF) + amt;\n  const B = (num & 0x0000FF) + amt;\n  return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +\n    (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +\n    (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n}\n\n// Format currency for display\nfunction formatCurrency(value) {\n  if (value === undefined || value === null || isNaN(value)) {\n    return '0.0';\n  }\n  return new Intl.NumberFormat('en-US', {\n    minimumFractionDigits: 1,\n    maximumFractionDigits: 1,\n  }).format(value);\n  }\n\n// Format segment score for display\nfunction formatSegmentScore(score) {\n  return Math.abs(score).toFixed(1);\n}\n\nconst emit = defineEmits(['update:modelValue', 'apply-budget']);\n\n// Removed unused budgetStore variable\n\nconst errorMessage = ref('');\n\n// Apply the shared budget to the simulator\nconst applyBudget = () => {\n  try {\n    // Emit event to parent component to handle the budget application\n    emit('apply-budget', props.budgetData);\n    // Close the modal\n    emit('update:modelValue', false);\n  } catch (error) {\n    handleError(error, (msg) => errorMessage.value = msg);\n  }\n};\n</script>\n\n<style scoped>\n/* Modal Styles */\n.shared-budget-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n}\n\n.modal-backdrop {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(4px);\n}\n\n.modal-container {\n  position: relative;\n  width: 90%;\n  max-width: 800px;\n  max-height: 90vh;\n  background-color: white;\n  border-radius: 12px;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.25rem 1.5rem;\n  background: linear-gradient(135deg, #4f46e5, #7c3aed);\n  color: white;\n}\n\n.modal-title {\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin: 0;\n}\n\n.close-button {\n  background: transparent;\n  border: none;\n  color: white;\n  width: 2rem;\n  height: 2rem;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.close-button:hover {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.modal-body {\n  padding: 1.5rem;\n  overflow-y: auto;\n  max-height: calc(90vh - 4rem);\n}\n\n/* Section Styles */\n.section-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  margin-bottom: 1rem;\n  color: #1a202c;\n}\n\n/* Budget Summary Styles */\n.budget-summary {\n  margin-bottom: 2rem;\n}\n\n.metrics-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 1rem;\n}\n\n.metric-card {\n  background-color: #f7fafc;\n  border-radius: 8px;\n  padding: 1rem;\n  display: flex;\n  align-items: center;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.metric-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.metric-card.positive {\n  background-color: #f0fff4;\n  border-left: 4px solid #48bb78;\n}\n\n.metric-card.negative {\n  background-color: #fff5f5;\n  border-left: 4px solid #f56565;\n}\n\n.metric-icon {\n  margin-right: 1rem;\n  width: 2.5rem;\n  height: 2.5rem;\n  background-color: #e2e8f0;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.metric-card.positive .metric-icon {\n  background-color: #c6f6d5;\n  color: #38a169;\n}\n\n.metric-card.negative .metric-icon {\n  background-color: #fed7d7;\n  color: #e53e3e;\n}\n\n.metric-content {\n  flex: 1;\n}\n\n.metric-label {\n  font-size: 0.875rem;\n  color: #4a5568;\n  margin-bottom: 0.25rem;\n}\n\n.metric-value {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #1a202c;\n}\n\n.metric-card.positive .metric-value {\n  color: #38a169;\n}\n\n.metric-card.negative .metric-value {\n  color: #e53e3e;\n}\n\n/* Sentiment Section Styles */\n.sentiment-section {\n  margin-bottom: 2rem;\n}\n\n.sentiment-group {\n  margin-bottom: 1.5rem;\n}\n\n.sentiment-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.75rem;\n}\n\n.sentiment-header.positive {\n  color: #38a169;\n}\n\n.sentiment-header.negative {\n  color: #e53e3e;\n}\n\n.sentiment-header .material-icons {\n  margin-right: 0.5rem;\n}\n\n.sentiment-header h4 {\n  font-size: 1.125rem;\n  font-weight: 500;\n  margin: 0;\n}\n\n.segments-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n  gap: 0.75rem;\n}\n\n.segment-card {\n  padding: 0.75rem;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n}\n\n.segment-card.positive {\n  background-color: #f0fff4;\n  border: 1px solid #c6f6d5;\n}\n\n.segment-card.negative {\n  background-color: #fff5f5;\n  border: 1px solid #fed7d7;\n}\n\n.segment-score {\n  font-weight: 600;\n  margin-right: 0.75rem;\n  min-width: 3rem;\n  text-align: center;\n}\n\n.segment-card.positive .segment-score {\n  color: #38a169;\n}\n\n.segment-card.negative .segment-score {\n  color: #e53e3e;\n}\n\n.segment-name {\n  font-size: 0.875rem;\n  color: #4a5568;\n}\n\n/* Badges Section Styles */\n.badges-section {\n  margin-bottom: 2rem;\n}\n\n.badges-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 1rem;\n}\n\n.badge-card {\n  background-color: #f7fafc;\n  border-radius: 8px;\n  padding: 1rem;\n  display: flex;\n  align-items: flex-start;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.badge-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.badge-icon {\n  font-size: 2rem;\n  margin-right: 1rem;\n}\n\n.badge-content {\n  flex: 1;\n}\n\n.badge-name {\n  font-weight: 600;\n  margin-bottom: 0.25rem;\n  color: #1a202c;\n}\n\n.badge-description {\n  font-size: 0.875rem;\n  color: #4a5568;\n}\n\n/* Action Buttons Styles */\n.action-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  justify-content: center;\n  margin-top: 1rem;\n}\n\n.apply-button {\n  padding: 0.75rem 1.5rem;\n  background: linear-gradient(135deg, #4f46e5, #7c3aed);\n  color: white;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.apply-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.apply-button .material-icons {\n  margin-right: 0.5rem;\n}\n\n.cancel-button {\n  padding: 0.75rem 1.5rem;\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.cancel-button:hover {\n  background-color: #cbd5e0;\n}\n\n.no-data-message {\n  text-align: center;\n  padding: 1.5rem;\n  color: #718096;\n  font-style: italic;\n  background-color: #f7fafc;\n  border-radius: 8px;\n}\n\n/* Budget Highlights Styles */\n.budget-highlights-section {\n  background-color: #f8fafc;\n  border-radius: 8px;\n  padding: 1.25rem;\n  margin: 1.5rem 0;\n  border-left: 4px solid #4f46e5;\n}\n\n.budget-description {\n  font-size: 0.95rem;\n  line-height: 1.5;\n  color: #4b5563;\n  margin-bottom: 1rem;\n}\n\n.highlights-title {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #1f2937;\n  margin-bottom: 0.75rem;\n}\n\n.highlights-list {\n  padding-left: 0.25rem;\n  list-style-type: none;\n}\n\n.highlight-item {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 0.5rem;\n}\n\n.highlight-bullet {\n  color: #4f46e5;\n  font-size: 1.25rem;\n  margin-right: 0.5rem;\n  line-height: 1.2;\n}\n\n.highlight-text {\n  font-size: 0.95rem;\n  line-height: 1.4;\n  color: #374151;\n}\n\n/* Animation */\n.modal-enter-active,\n.modal-leave-active {\n  transition: opacity 0.3s, transform 0.3s;\n}\n\n.modal-enter-from,\n.modal-leave-to {\n  opacity: 0;\n  transform: scale(0.95);\n}\n\n/* Dark Mode Support */\n@media (prefers-color-scheme: dark) {\n  .modal-container {\n    background-color: #1a202c;\n  }\n  \n  .section-title {\n    color: #e2e8f0;\n  }\n  \n  .metric-card {\n    background-color: #2d3748;\n  }\n  \n  .metric-card.positive {\n    background-color: rgba(56, 161, 105, 0.2);\n  }\n  \n  .metric-card.negative {\n    background-color: rgba(229, 62, 62, 0.2);\n  }\n  \n  .metric-label {\n    color: #a0aec0;\n  }\n  \n  .metric-value {\n    color: #e2e8f0;\n  }\n  \n  .segment-card {\n    background-color: #2d3748;\n    border-color: #4a5568;\n  }\n  \n  .segment-card.positive {\n    background-color: rgba(56, 161, 105, 0.2);\n    border-color: rgba(56, 161, 105, 0.4);\n  }\n  \n  .segment-card.negative {\n    background-color: rgba(229, 62, 62, 0.2);\n    border-color: rgba(229, 62, 62, 0.4);\n  }\n  \n  .segment-name {\n    color: #a0aec0;\n  }\n  \n  .badge-card {\n    background-color: #2d3748;\n  }\n  \n  .badge-name {\n    color: #e2e8f0;\n  }\n  \n  .badge-description {\n    color: #a0aec0;\n  }\n  \n  .cancel-button {\n    background-color: #4a5568;\n    color: #e2e8f0;\n  }\n  \n  .cancel-button:hover {\n    background-color: #2d3748;\n  }\n  \n  .no-data-message {\n    background-color: #2d3748;\n    color: #a0aec0;\n  }\n}\n\n/* Responsive Adjustments */\n@media (max-width: 640px) {\n  .metrics-grid,\n  .segments-grid,\n  .badges-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .action-buttons {\n    flex-direction: column;\n  }\n  \n  .apply-button,\n  .cancel-button {\n    width: 100%;\n  }\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n</style>\n","import script from \"./SharedBudgetDetailModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SharedBudgetDetailModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SharedBudgetDetailModal.vue?vue&type=style&index=0&id=84d7d5e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-84d7d5e2\"]])\n\nexport default __exports__"],"names":["t","useI18n","props","__props","partyHeaderStyle","computed","budgetData","partyColor","background","lightenColor","color","percent","num","parseInt","replace","amt","Math","round","R","G","B","toString","slice","formatCurrency","value","undefined","isNaN","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","formatSegmentScore","score","abs","toFixed","emit","__emit","errorMessage","ref","applyBudget","error","handleError","msg","__exports__"],"sourceRoot":""}