{"version":3,"file":"js/charts-bf2cd571.70256285.js","mappings":"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","sources":["webpack://my-new-project/./node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","Object","keys","d","animation","animatedProps","getOwnPropertyNames","key","option","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","s","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","v","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_","sort","a","computeMinSampleSize","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","grouped","numbers","_index_","offset","grid","_value_","beginAtZero","obj","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","T","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","DoughnutController","animateRotate","animateScale","spacing","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_datasetIndex","_decimated","segment","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","controllers","__proto__","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","result","distanceToDefinedLo","slice","lo","findIndex","distanceToDefinedHi","hi","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","title","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","defaults","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","PI","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","formatters","numeric","log10Floor","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sourceRoot":""}