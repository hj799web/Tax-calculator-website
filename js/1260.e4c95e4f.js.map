{"version":3,"file":"js/1260.e4c95e4f.js","mappings":"8mBA6DA,MAAM,EAAEA,IAAMC,EAAAA,EAAAA,MACRC,EAAWA,CAACC,EAAKC,EAAW,MAChC,MAAMC,EAAQL,EAAEG,GAChB,OAAOE,IAAUF,EAAMC,EAAWC,CAAK,EAGnCC,GAAWC,EAAAA,EAAAA,KACXC,GAAiBC,EAAAA,EAAAA,IAAI,IAE3B,SAASC,IACsB,iBAAzBF,EAAeH,OACjBC,EAASK,SAASC,QAAU,IAC5BN,EAASK,SAASE,UAAY,IAC9BP,EAASK,SAASG,aAAe,KACC,aAAzBN,EAAeH,OACxBC,EAASK,SAASC,QAAU,EAC5BN,EAASK,SAASE,UAAY,EAC9BP,EAASK,SAASG,aAAe,GACC,eAAzBN,EAAeH,QACxBC,EAASK,SAASC,QAAU,IAC5BN,EAASK,SAASE,UAAY,IAC9BP,EAASK,SAASG,aAAe,IAErC,CAEA,SAASC,IACPT,EAASU,SAASC,UAAW,IAAIC,MAAOC,cACxCb,EAASU,SAASI,aAAe,GACjCd,EAASK,SAASC,QAAU,EAC5BN,EAASK,SAASE,UAAY,EAC9BP,EAASK,SAASG,aAAe,EACjCN,EAAeH,MAAQ,EACzB,C,kyHCvFA,MAAMgB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://my-new-project/./src/domains/budget/components/AssumptionsPanel.vue","webpack://my-new-project/./src/domains/budget/components/AssumptionsPanel.vue?58f5"],"sourcesContent":["<template>\n  <div class=\"assumptions-panel\">\n    <div class=\"row\">\n      <label>{{ i18nText('assumptions.labels.baseYear', 'Base year') }}</label>\n      <input type=\"number\" v-model.number=\"settings.planning.baseYear\" min=\"2020\" max=\"2030\" />\n    </div>\n    <div class=\"row\">\n      <label>{{ i18nText('assumptions.labels.horizon', 'Horizon (years)') }}</label>\n      <input type=\"number\" v-model.number=\"settings.planning.horizonYears\" min=\"1\" max=\"20\" />\n    </div>\n    <div class=\"row\">\n      <label>{{ i18nText('assumptions.labels.gdpGrowth', 'GDP growth (%)') }}</label>\n      <input type=\"number\" step=\"0.1\" v-model.number=\"settings.economic.gdpReal\" min=\"-5\" max=\"10\" />\n    </div>\n    <div class=\"row\">\n      <label>{{ i18nText('assumptions.labels.inflation', 'Inflation (%)') }}</label>\n      <input type=\"number\" step=\"0.1\" v-model.number=\"settings.economic.inflation\" min=\"-2\" max=\"10\" />\n    </div>\n    <div class=\"row\">\n      <label>{{ i18nText('assumptions.labels.interestRate', 'Interest rate (%)') }}</label>\n      <input type=\"number\" step=\"0.1\" v-model.number=\"settings.economic.interestRate\" min=\"0\" max=\"15\" />\n    </div>\n    <div class=\"row preset\">\n      <label>{{ i18nText('assumptions.labels.preset', 'Preset') }}</label>\n      <select v-model=\"selectedPreset\" @change=\"applyPreset()\">\n        <option value=\"\">{{ i18nText('assumptions.presets.custom', 'Custom') }}</option>\n        <option value=\"conservative\">{{ i18nText('assumptions.presets.conservative', 'Conservative') }}</option>\n        <option value=\"moderate\">{{ i18nText('assumptions.presets.moderate', 'Moderate') }}</option>\n        <option value=\"optimistic\">{{ i18nText('assumptions.presets.optimistic', 'Optimistic') }}</option>\n      </select>\n      <button class=\"btn\" @click=\"reset()\">{{ i18nText('assumptions.buttons.reset', 'Reset') }}</button>\n    </div>\n\n    <details class=\"planning-controls\" open>\n      <summary>{{ i18nText('assumptions.sections.programSpendingControls', 'Program Spending Controls') }}</summary>\n      <div class=\"controls-grid\">\n        <div class=\"row\">\n          <label :title=\"i18nText('assumptions.tooltips.programSpendingBoost', 'One-time adjustment to all program spending levels')\">{{ i18nText('assumptions.labels.programSpendingBoost', 'Program spending boost (%)') }}\n            <span class=\"info-icon\" :title=\"i18nText('assumptions.tooltips.programSpendingBoostInfo', 'Applies a one-time level change to program spending in the base year (and carried through).')\">info</span>\n          </label>\n          <input type=\"number\" step=\"0.5\" :min=\"-15\" :max=\"15\" v-model.number=\"settings.spendingGlobal.levelPct\" />\n        </div>\n        <div class=\"row\">\n          <label :title=\"i18nText('assumptions.tooltips.speedUpSpendingGrowth', 'Adjusts how fast program spending grows each year. +0.5 means all categories grow 0.5 percentage points faster annually.')\">{{ i18nText('assumptions.labels.speedUpSpendingGrowth', 'Speed up spending growth (pp)') }}\n            <span class=\"info-icon\" :title=\"i18nText('assumptions.tooltips.speedUpSpendingGrowthInfo', 'Adds or subtracts percentage points to the annual growth rate applied to all categories.')\">info</span>\n          </label>\n          <input type=\"number\" step=\"0.1\" v-model.number=\"settings.spendingGlobal.growthDeltaPct\" />\n        </div>\n      </div>\n      <SpendingGrowthControls />\n    </details>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useMultiYearSettingsStore } from '@/domains/budget/store/multiYearSettings.js';\nimport SpendingGrowthControls from '@/domains/budget/components/SpendingGrowthControls.vue';\nimport { useI18n } from '@/i18n';\n\n// i18n setup\nconst { t } = useI18n();\nconst i18nText = (key, fallback = '') => {\n  const value = t(key);\n  return value === key ? fallback : value;\n};\n\nconst settings = useMultiYearSettingsStore();\nconst selectedPreset = ref('');\n\nfunction applyPreset() {\n  if (selectedPreset.value === 'conservative') {\n    settings.economic.gdpReal = 1.5;\n    settings.economic.inflation = 1.8;\n    settings.economic.interestRate = 3.5;\n  } else if (selectedPreset.value === 'moderate') {\n    settings.economic.gdpReal = 2.0;\n    settings.economic.inflation = 2.0;\n    settings.economic.interestRate = 3.0;\n  } else if (selectedPreset.value === 'optimistic') {\n    settings.economic.gdpReal = 2.8;\n    settings.economic.inflation = 2.2;\n    settings.economic.interestRate = 2.5;\n  }\n}\n\nfunction reset() {\n  settings.planning.baseYear = new Date().getFullYear();\n  settings.planning.horizonYears = 10;\n  settings.economic.gdpReal = 2.0;\n  settings.economic.inflation = 2.0;\n  settings.economic.interestRate = 3.0;\n  selectedPreset.value = '';\n}\n</script>\n\n<style scoped>\n.assumptions-panel { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 12px; }\n.row { display: grid; gap: 6px; }\nlabel { font-size: .85rem; color: #6b7280; }\ninput, select { width: 100%; padding: 8px 10px; border: 1px solid #d1d5db; border-radius: 10px; }\n.row.preset { grid-template-columns: 1fr 1fr auto; align-items: end; gap: 10px; }\n\ndetails.planning-controls { grid-column: 1 / -1; border: 1px solid #e5e7eb; border-radius: 12px; background: linear-gradient(180deg, #fafbff 0%, #ffffff 60%); padding: 10px 12px; box-shadow: 0 2px 10px rgba(0,0,0,0.04); }\ndetails.planning-controls > summary { font-weight: 700; color: #111827; cursor: pointer; }\n.controls-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 12px; margin: 10px 0 6px; }\n.controls-grid input { padding: 8px 10px; border: 1px solid #d1d5db; border-radius: 10px; transition: border-color .15s, box-shadow .15s; }\n.controls-grid input:focus { border-color: #3b82f6; box-shadow: 0 0 0 3px rgba(59,130,246,0.15); outline: none; }\n.info-icon { font-family: 'Material Icons'; font-size: 16px; line-height: 1; color: #6b7280; border: 1px solid #e5e7eb; border-radius: 50%; width: 16px; height: 16px; display: inline-grid; place-items: center; margin-left: 6px; cursor: help; }\n.info-icon:hover { color: #1d4ed8; border-color: #c7d2fe; }\n\n.btn {\n  padding: 8px 16px;\n  border: 1px solid #3b82f6;\n  border-radius: 8px;\n  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);\n  color: #374151;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 2px 8px rgba(107, 114, 128, 0.15);\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  position: relative;\n  overflow: hidden;\n}\n\n.btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n  transition: left 0.5s;\n}\n\n.btn:hover {\n  background: linear-gradient(135deg, #e5e7eb 0%, #d1d5db 100%);\n  box-shadow: 0 4px 16px rgba(107, 114, 128, 0.2);\n  transform: translateY(-1px);\n  border-color: #6b7280;\n}\n\n.btn:hover::before {\n  left: 100%;\n}\n\n.btn:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 8px rgba(107, 114, 128, 0.15);\n}\n\n@media (max-width: 420px) { .assumptions-panel { grid-template-columns: 1fr; } .row.preset { grid-template-columns: 1fr 1fr; } }\n</style>\n","import script from \"./AssumptionsPanel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AssumptionsPanel.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AssumptionsPanel.vue?vue&type=style&index=0&id=0932cebb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0932cebb\"]])\n\nexport default __exports__"],"names":["t","useI18n","i18nText","key","fallback","value","settings","useMultiYearSettingsStore","selectedPreset","ref","applyPreset","economic","gdpReal","inflation","interestRate","reset","planning","baseYear","Date","getFullYear","horizonYears","__exports__"],"sourceRoot":""}