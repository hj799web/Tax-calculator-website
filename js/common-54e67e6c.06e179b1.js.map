{"version":3,"file":"js/common-54e67e6c.06e179b1.js","mappings":"mQAGA,MAAMA,EAAc,EAEpB,O,wyEC2UA,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MAERC,GAAaC,EAAAA,EAAAA,KAAI,GAEjBC,GAAcC,EAAAA,EAAAA,KAIdC,IAAoBC,EAAAA,EAAAA,KAAS,KAC/B,IAEYH,EAAYI,wBAEXJ,EAAYK,yBAEXL,EAAYM,WACxB,OAAON,EAAYO,YACrB,CAAE,MAAOC,GAEP,OADAC,EAAAA,EAAAA,IAAqBD,EAAO,8BACrB,CACT,KAGEE,IAAqBP,EAAAA,EAAAA,KAAS,KAChC,IAEYH,EAAYM,WACtB,OAAON,EAAYW,aACrB,CAAE,MAAOH,GAEP,OADAC,EAAAA,EAAAA,IAAqBD,EAAO,+BACrB,CACT,KAGEI,IAAeT,EAAAA,EAAAA,KAAS,KAC1B,IAEYH,EAAYI,wBAEXJ,EAAYK,yBAEXL,EAAYM,WACxB,OAAON,EAAYa,OACrB,CAAE,MAAOL,GAEP,OADAC,EAAAA,EAAAA,IAAqBD,EAAO,yBACrB,CACT,KAIEM,IAAeX,EAAAA,EAAAA,KAAS,KAC1B,IAEYH,EAAYe,gBAEXf,EAAYM,WACvB,OAAON,EAAYc,cAAgB,EACrC,CAAE,MAAON,GAEP,OADAC,EAAAA,EAAAA,IAAqBD,EAAO,8BACrB,EACT,KAIEQ,IAAejB,EAAAA,EAAAA,IAAIkB,OAAOC,WAAa,KACvCC,IAAYpB,EAAAA,EAAAA,IAAI,WAGhBqB,IAAmBrB,EAAAA,EAAAA,KAAI,GACvBsB,IAAkBtB,EAAAA,EAAAA,KAAI,GAG5B,SAASuB,KACHV,GAAaW,MAAQ,IACvBH,GAAiBG,OAAQ,EAE7B,EAGAC,EAAAA,EAAAA,IAAMZ,IAAc,KAClBa,QAAQC,IAAI,mDACZJ,IAAqB,KAIvBK,EAAAA,EAAAA,KAAU,KAERL,KAGAL,OAAOW,iBAAiB,SAAUC,IAGlCA,IAAc,KAGhBC,EAAAA,EAAAA,KAAY,KACVb,OAAOc,oBAAoB,SAAUF,GAAa,IAIpD,MAAMG,IAAsB7B,EAAAA,EAAAA,KAAS,IAC/BiB,GAAiBG,OAGjBX,GAAaW,OAAS,GAAKX,GAAaW,OAAS,GAHlB,OAQ/BX,GAAaW,QAAU,GAClB,OAILX,GAAaW,QAAU,IAClB,OAIF,aAGHU,IAAwB9B,EAAAA,EAAAA,KAAS,KACrC,OAAQ6B,GAAoBT,OAC1B,IAAK,OACH,OAAO3B,EAAE,mCACX,IAAK,OACH,OAAOA,EAAE,mCACX,IAAK,WACH,OAAOA,EAAE,uCACX,QACE,MAAO,GACX,IAGIsC,IAAsB/B,EAAAA,EAAAA,KAAS,KAC5B,CACL,eAA8C,SAA9B6B,GAAoBT,MACpC,eAA8C,SAA9BS,GAAoBT,MACpC,mBAAkD,aAA9BS,GAAoBT,UAI5C,SAASY,KACPf,GAAiBG,OAAQ,CAC3B,CAGA,SAASM,KACPb,GAAaO,MAAQN,OAAOC,WAAa,GAC3C,CAGA,SAASkB,GAAcC,GACrB,MAAMC,EAAUC,SAASC,cAAc,0BAAwC,YAAdH,EAA0B,EAAI,MAC1FC,GAELG,IAAYH,GAASI,MAAKC,IACxB,MAAMC,EAAOL,SAASM,cAAc,KACpCD,EAAKE,SAAW,UAAUT,cAC1BO,EAAKG,KAAOJ,EAAOK,UAAU,aAC7BJ,EAAKK,OAAO,GAEhB,CAGA,SAASC,GAAiB3B,EAAO4B,GAC/B,OAAKA,GAAmB,IAAVA,EACP,GAAGC,KAAKC,MAAO9B,EAAQ4B,EAAS,QADL,IAEpC,CAGA,MAgCMG,GAAOC,EAEPC,GAAuBC,KAAS,KACpCH,GAAK,eAAe,GACnB,KAEGI,GAAuBD,KAAS,KACpCH,GAAK,eAAe,GACnB,KAEGK,GAAsBF,KAAS,KACnCH,GAAK,cAAc,GAClB,KAGH,SAASM,GAAerC,GACtB,YAAcsC,IAAVtC,GAAiC,OAAVA,GAAkBuC,MAAMvC,GAC1C,QAEF,IAAIwC,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAO9C,GAAS,GACrB,CAEA,MAAM+C,IAAgBvE,EAAAA,EAAAA,IAAI,IAE1B,SAASwE,GAAYC,GACnBF,GAAc/C,MAAQiD,CACxB,CAEA,SAASC,KACPH,GAAc/C,MAAQ,EACxB,CAGA,MAAMmD,GAAyBjB,IAASrB,GAAe,K,i9PC7jBvD,MAAMzC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S,qKCLA,MAAMA,EAAc,EAEpB,O,ibC0CA,MAAMgF,EAAQC,EAmBRtB,EAAOC,EAEb,SAASsB,EAAgBC,GACnBA,GAAOA,EAAMC,kBACjBzB,EAAK,SAAUqB,EAAMK,QACvB,CAEA,SAASpB,EAAerC,GACtB,MAAO,IAAMA,EAAM0D,QAAQ,GAAK,GAClC,C,myBCrEA,MAAMtF,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,20GC+cA,MAAMgF,EAAQC,EAgERtB,EAAOC,EAYPvD,GAAcC,EAAAA,EAAAA,MACd,EAAEL,IAAMC,EAAAA,EAAAA,MAERqF,EAAgBA,CAACC,EAAIC,EAAO,WAAYC,EAAW,MACvDC,EAAAA,EAAAA,IAAgBH,EAAIC,IAASC,GAAYF,EACrCI,EAAuBA,CAACJ,EAAIC,EAAO,WAAYC,EAAW,MAC9DG,EAAAA,EAAAA,IAAuBL,EAAIC,IAASC,EAEhCI,EAAWA,CAACC,EAAKL,EAAW,MAChC,MAAM9D,EAAQ3B,EAAE8F,GAChB,OAAOnE,GAASmE,EAAML,EAAW9D,CAAI,EAIjCoE,GAAa5F,EAAAA,EAAAA,KAAI,GAGjB6F,IAA0BC,EAAAA,EAAAA,KAAwB,CAACC,EAAYvE,KACnEoE,EAAWpE,OAAQ,EACnB,IACE,MAAMwE,EAASxE,EAAQ,IACvBvB,EAAYgG,qBAAqBF,EAAYC,GAG7CzC,EAAK,yBAA0BwC,EAAYvE,EAC7C,CAAE,QACAoE,EAAWpE,OAAQ,CACrB,IACC,KAGG0E,IAAuB9F,EAAAA,EAAAA,KAAS,KACpC,MAAM+F,EAAS,IAAKvB,EAAMwB,iBAsC1B,OAnCAC,GAAmB7E,MAAM8E,SAAQC,SACHzC,IAAxBqC,EAAOI,EAASnB,MAClBe,EAAOI,EAASnB,IAAM,IACxB,IAIER,EAAM4B,uBACR5B,EAAM4B,sBAAsBF,SAAQG,SACT3C,IAArBqC,EAAOM,EAAMrB,MACfe,EAAOM,EAAMrB,IAAM,KAKrB,MAAMsB,EAAW9B,EAAM+B,iBAAiBF,EAAMrB,IAC1CsB,GACFA,EAASJ,SAAQM,SACU9C,IAArBqC,EAAOS,EAAMxB,MACfe,EAAOS,EAAMxB,IAAM,IACrB,GAEJ,IAKAR,EAAMiC,sBACRjC,EAAMiC,qBAAqBP,SAAQM,SACR9C,IAArBqC,EAAOS,EAAMxB,MACfe,EAAOS,EAAMxB,IAAM,IACrB,IAIGe,CAAM,IAITW,IAAuB1G,EAAAA,EAAAA,KAAS,KAEpCsB,QAAQC,IAAI,wCAAyCiD,EAAMmC,iBAGtDnC,EAAMmC,iBAAiE,IAA9CC,OAAOC,KAAKrC,EAAMmC,iBAAiBG,OAK1DF,OAAOG,OAAOvC,EAAMmC,kBAJzBrF,QAAQC,IAAI,yCACLqF,OAAOG,OAAOlH,EAAY8G,qBAO/BV,IAAqBjG,EAAAA,EAAAA,KAAS,KAClC,IAAIgH,EAAaxC,EAAMyC,gBAAkBzC,EAAMyC,eAAeH,OAAS,EACnEtC,EAAMyC,eACNL,OAAOG,OAAOlH,EAAYqH,oBAAoBC,QAAOhB,GAA+B,SAAnBA,EAASE,QAG9E,OAAOW,EAAWG,QAAOhB,GACP,qBAAhBA,EAASnB,IACO,yBAAhBmB,EAASnB,IAA8B,KAIfhF,EAAAA,EAAAA,KAAS,IAC5BwE,EAAM4B,uBAAyB5B,EAAM4B,sBAAsBU,OAAS,EACvEtC,EAAM4B,sBACNQ,OAAOG,OAAOlH,EAAYqH,oBAAoBC,QAAOhB,GAA+B,UAAnBA,EAASE,UAIhF,SAASe,GAAYvC,GACnB1B,EAAK,yBAA0B0B,EACjC,CAGA,SAASwC,GAAyB1B,EAAYvE,GAC5CE,QAAQC,IAAI,yDAA0DoE,EAAYvE,GAGlFvB,EAAYM,WAAamH,KAAKC,MAG9B9B,GAAwBE,EAAYvE,EACtC,CAEA,SAASoG,KACPlG,QAAQC,IAAI,iDAEZqF,OAAOG,OAAOlH,EAAYqH,oBACvBC,QAAOhB,GAA+B,UAAnBA,EAASE,QAAsBF,EAASsB,UAC3DvB,SAAQC,IACPtG,EAAYgG,qBAAqBM,EAASnB,GAAI,EAAE,IAIpD4B,OAAOG,OAAOlH,EAAYqH,oBACvBC,QAAOhB,GAAYA,EAASsB,SAA2B,yBAAhBtB,EAASnB,KAChDkB,SAAQG,IACHA,EAAMC,UACRM,OAAOG,OAAOV,EAAMC,UAAUJ,SAAQM,IACpC3G,EAAYgG,qBAAqBW,EAAMxB,GAAI,EAAE,GAEjD,IAIJ7B,EAAK,yBACP,CAEA,SAASuE,KACPpG,QAAQC,IAAI,sDAEZ,MAAMoG,EAAS9H,EAAYqH,mBAAmBU,qBAC1CD,GAAUA,EAAOrB,UACnBM,OAAOG,OAAOY,EAAOrB,UAAUJ,SAAQM,IACrC3G,EAAYgG,qBAAqBW,EAAMxB,GAAI,EAAE,IAKjD7B,EAAK,gBACP,CAEA,SAAS0E,GAA2BC,EAAe1G,GACjDE,QAAQC,IAAI,2DAA4DuG,EAAe1G,GAEvFvB,EAAYkI,+BAA+BD,EAAe1G,EAC5D,CAEA,SAAS4G,GAAoBF,GAC3BxG,QAAQC,IAAI,oDAAqDuG,GAEjEjI,EAAYkI,+BAA+BD,EAAe,EAC5D,CAEA,SAASG,KACP3G,QAAQC,IAAI,oDAEZ1B,EAAYqI,sBACd,CAEA,SAASzE,GAAerC,GACtB,MAAO,IAAMA,EAAM0D,QAAQ,GAAK,GAClC,CAEA,SAASqD,GAAaC,GAEpB,YAAe1E,IAAX0E,GAAmC,OAAXA,GAAmBzE,MAAMyE,GAC5C,MAEFA,EAAOtD,QAAQ,EACxB,CAEA,SAASuD,GAAgBC,GAEvB,OAAQ,EAAIA,EAAYC,WAAaD,EAAYE,iBAAmB,IACtE,CAEA,SAASC,GAAeH,GAEtB,OAAOA,EAAYE,kBAAoB,EAAI,kBAAoB,iBACjE,CAEA,SAASE,GAAgBJ,GAEvB,OAAOA,EAAYE,kBAAoB,EAAI,IAAM,GACnD,CAEA,SAASG,GAAoBL,GAE3B,MAAMM,EAASP,GAAgBC,GACzBO,EAAc5F,KAAK6F,IAAItE,EAAMuE,6BAEnC,OAAoB,IAAhBF,EAA0B,EAGtBD,EAASC,EAAe,KAAOD,GAAU,EAAI,GAAK,EAC5D,CAEA,SAASI,KAEP,OAAOnJ,EAAYkJ,6BAA+B,EAAI,kBAAoB,iBAC5E,CAEA,SAASE,KAEP,OAAOpJ,EAAYkJ,6BAA+B,EAAI,IAAM,GAC9D,CAEA,MAAM5E,IAAgBvE,EAAAA,EAAAA,IAAI,IAE1B,SAASwE,GAAYC,GACnBF,GAAc/C,MAAQiD,CACxB,CAEA,SAASC,KACPH,GAAc/C,MAAQ,EACxB,C,ohYCvwBA,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S,qPCcA,MAAM,EAAE3B,IAAMC,EAAAA,EAAAA,MASRyD,EAAOC,EAEb,SAAS8F,EAAWC,GAClBhG,EAAK,gBAAiBgG,EACxB,C,qYC7BA,MAAM3J,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,qrCC0NA,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MACR4F,EAAWA,CAACC,EAAKL,EAAW,MAChC,MAAM9D,EAAQ3B,EAAE8F,GAChB,OAAOnE,IAAUmE,EAAML,EAAW9D,CAAK,EAGzCgI,EAAAA,GAAQC,SAASC,EAAAA,GAAeC,EAAAA,GAAaC,EAAAA,GAAYC,EAAAA,GAAOC,EAAAA,GAASC,EAAAA,IAEzE,MAAM9J,GAAcC,EAAAA,EAAAA,KAGd8J,GAAoBhK,EAAAA,EAAAA,KAAI,GACxBiK,IAAqBjK,EAAAA,EAAAA,KAAI,GACzBkK,IAAclK,EAAAA,EAAAA,IAAI,UAClBmK,IAAiBnK,EAAAA,EAAAA,IAAI,GACrBoK,IAAWpK,EAAAA,EAAAA,IAAIkB,OAAOC,WAAa,KACnCkJ,IAAcjK,EAAAA,EAAAA,KAAS,IAAOgK,GAAS5I,MAAQ,QAAU,UACzD8I,IAAalK,EAAAA,EAAAA,KAAS,IAAM,SAC5BmK,IAAevK,EAAAA,EAAAA,IAAI,KAGzByB,EAAAA,EAAAA,KAAM,IAAMxB,EAAYuK,iBAAgB,KACtCL,GAAe3I,OAAS,CAAC,GACxB,CAAEiJ,MAAM,KAGXhJ,EAAAA,EAAAA,IAAMyI,IAAa,KACjBC,GAAe3I,OAAS,CAAC,IAI3B,MAAMgJ,IAAiBpK,EAAAA,EAAAA,KAAS,IACvB4G,OAAOG,OAAOlH,EAAYuK,gBAAkB,CAAC,GACjDjD,QACCmD,GACEA,GACAA,EAAOtF,IACPsF,EAAOC,OACN5G,MAAM6G,OAAOF,EAAOG,mBAExBC,MAAK,CAACC,EAAGC,KAAOJ,OAAOI,EAAEH,iBAAmB,IAAMD,OAAOG,EAAEF,iBAAmB,OAInF,SAASI,KACP,IACE,MAAMC,EAAWN,OAAO3K,EAAYuK,gBAAgBW,mBAAmBN,iBAAmB,EACpFO,EAAYR,OAAO3K,EAAYuK,gBAAgBa,oBAAoBR,iBAAmB,EACtFzH,EAAQ8H,EAAWE,EACzB,OAAOrH,MAAMX,GAAS,EAAIA,CAC5B,CAAE,MAAOkI,GAEP,OADAC,EAAAA,EAAAA,IAAYD,GAAIE,GAAQjB,GAAa/I,MAAQgK,IACtC,CACT,CACF,CAEA,SAASC,KACP,IACE,MAAMC,EAAMd,OAAO3K,EAAYuK,gBAAgBkB,KAAKb,iBAAmB,EACjEc,EAASf,OAAO3K,EAAYuK,gBAAgBoB,aAAaf,iBAAmB,EAC5EzH,EAAQsI,EAAMC,EACpB,OAAO5H,MAAMX,GAAS,EAAIA,CAC5B,CAAE,MAAOkI,GAEP,OADAC,EAAAA,EAAAA,IAAYD,GAAIE,GAAQjB,GAAa/I,MAAQgK,IACtC,CACT,CACF,CAEA,SAASK,KACP,IACE,MAAMC,EAAe9E,OAAOG,OAAOlH,EAAYuK,gBAAkB,CAAC,GAC/DjD,QAAOwE,GAAKA,GAAKA,EAAE3G,KAAO,CAAC,oBAAqB,qBAAsB,MAAO,eAAe4G,SAASD,EAAE3G,MACpGhC,EAAQ0I,EAAaG,QAAO,CAACC,EAAKxB,KACtC,MAAMyB,EAAMvB,OAAOF,EAAOG,iBAAmB,EAC7C,OAAOqB,EAAMC,CAAG,GACf,GACH,OAAOpI,MAAMX,GAAS,EAAIA,CAC5B,CAAE,MAAOkI,GAEP,OADAC,EAAAA,EAAAA,IAAYD,GAAIE,GAAQjB,GAAa/I,MAAQgK,IACtC,CACT,CACF,CAEA,SAASY,KACP,IACE,MAAMhJ,EAAQwH,OAAO3K,EAAYO,eAAiB,EAClD,OAAO4C,EAAQ,EAAIA,EAAQ,CAC7B,CAAE,MAAOkI,GAEP,OADAC,EAAAA,EAAAA,IAAYD,GAAIE,GAAQjB,GAAa/I,MAAQgK,IACtC,CACT,CACF,CAGA,MAAMa,IAAmBjM,EAAAA,EAAAA,KAAS,IACzBoK,GAAehJ,MAAM+F,QAAOwE,GACjC,CAAC,oBAAqB,sBAAsBC,SAASD,EAAE3G,QAIrDkH,IAAwBlM,EAAAA,EAAAA,KAAS,IAC9BoK,GAAehJ,MAAM+F,QAAOwE,GACjC,CAAC,MAAO,eAAeC,SAASD,EAAE3G,QAIhCmH,IAAsBnM,EAAAA,EAAAA,KAAS,IAC5BoK,GAAehJ,MAAM+F,QAAOwE,IAChC,CAAC,oBAAqB,qBAAsB,MAAO,eAAeC,SAASD,EAAE3G,QAK5EoH,IAAmBpM,EAAAA,EAAAA,KAAS,KAChC,MAAMqM,EAAUjC,GAAehJ,MACzBkL,EAASD,EAAQE,KAAIjC,IAAUnF,EAAAA,EAAAA,IAAgBmF,EAAOtF,GAAI,aAC1DhC,EAAQgJ,KAEd,IAAIQ,EASJ,OAPEA,EADwB,WAAtB1C,GAAY1I,MACPiL,EAAQE,KAAIjC,GAAUE,OAAOF,EAAOG,iBAAmB,IAEvD4B,EAAQE,KAAIjC,GACjBE,OAAOF,EAAOG,iBAAmBzH,EAASwH,OAAOF,EAAOG,gBAAkBzH,EAAS,IAAM,IAItF,CACLsJ,SACAG,SAAU,CACR,CACED,OACAE,gBAAiBL,EAAQE,KAAIjC,GAAUA,EAAOqC,OAAS,YACvDC,YAAaP,EAAQE,KAAIjC,GAAUA,EAAOqC,OAAS,YACnDE,YAAa,IAGlB,IAIGC,IAAsB9M,EAAAA,EAAAA,KAAS,KAC5B,CACL+M,UAAW,IACXC,YAAY,EACZC,qBAAqB,EACrBC,UAAW,CACTC,SAAU,KAEZC,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,QAAS,CACPC,UAAW,CACTC,MAAO,SAASC,GACd,MAAMpD,EAASF,GAAehJ,MAAMsM,EAAQC,WAC5C,IAAKrD,EAAQ,MAAO,GACpB,MAAMyB,EAAMvB,OAAOF,EAAOG,iBAAmB,EACvCzH,EAAQgJ,KACR5K,GAASoJ,OAAOuB,IAAQ,GAAGjH,QAAQ,GACnC8I,EAAa5K,GAAU+I,EAAM/I,EAAS,KAAK8B,QAAQ,GAAK,EAE9D,MAA6B,WAAtBgF,GAAY1I,MACf,IAAIA,OAAWwM,eACf,GAAGA,QAAiBxM,KAC1B,KAINyM,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,KAAM,CACJV,SAAS,EACTW,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXxB,MAAO,sBAETyB,MAAO,CACLC,SAAU,SAASjN,GACjB,MAA6B,WAAtB0I,GAAY1I,MAAqB,IAAIA,KAAW,GAAGA,IAC5D,EACAkN,KAAM,CACJC,KAAMvE,GAAS5I,MAAQ,GAAK,GAC5BoN,OAAQ,uBAEVC,YAAa,EACbC,QAAS,GACT/B,MAAO,WAETgC,MAAO,CACLrB,SAAS,EACTjJ,KAA4B,WAAtByF,GAAY1I,MACd3B,EAAE,gCACFA,EAAE,oCACN6O,KAAM,CACJC,KAAMvE,GAAS5I,MAAQ,GAAK,GAC5BoN,OAAQ,uBAEVE,QAAS,CAAEE,IAAK,GAAIC,OAAQ,IAC5BlC,MAAO,YAGXmC,EAAG,CACDd,KAAM,CAAEV,SAAS,GACjBc,MAAO,CACLE,KAAM,CACJC,KAAMvE,GAAS5I,MAAQ,GAAK,GAC5BoN,OAAQ,uBAEVE,QAAS,GACT/B,MAAO,UACP0B,SAAU,SAASjN,EAAO2N,GACxB,MAAMtB,EAAQuB,KAAKC,iBAAiBF,GACpC,OAAOtB,EAAM3G,OAAS,GAAK2G,EAAMyB,UAAU,EAAG,IAAM,MAAQzB,CAC9D,KAIN0B,OAAQ,CACNT,QAAS,CACPU,KAAM,GACNC,MAAO,GACPT,IAAK,GACLC,OAAQ,SAOVnN,IAAe4N,EAAAA,EAAAA,MAAS,KAC5BtF,GAAS5I,MAAQN,OAAOC,WAAa,IACrCgJ,GAAe3I,OAAS,CAAC,GACxB,K,OAEHI,EAAAA,EAAAA,KAAU,KACRV,OAAOW,iBAAiB,SAAUC,GAAa,KAGjDC,EAAAA,EAAAA,KAAY,KACVb,OAAOc,oBAAoB,SAAUF,GAAa,I,+qLC7cpD,MAAMlC,IAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S,yjOCsOA,MAAMgF,EAAQC,GAcR,EAAEhF,IAAMC,EAAAA,EAAAA,MACR6P,IAAWC,EAAAA,EAAAA,MACXC,GAAUF,IAAUG,YAAYC,QAAQC,kBAAkBC,IAAMpQ,EAEhE6F,GAAWA,CAACC,EAAKL,EAAW,MAChC,MAAM9D,EAAQqO,GAAQlK,GACtB,OAAOnE,IAAUmE,EAAML,EAAW9D,CAAK,EAGnC0O,GAAc,IAAIxI,KAClByI,IAAgB/P,EAAAA,EAAAA,KAAS,IAAM8P,GAAYE,uBAC3CC,IAAgBjQ,EAAAA,EAAAA,KAAS,IAAM8P,GAAYI,uBAC3CC,IAAiBnQ,EAAAA,EAAAA,KAAS,KAC9B,MAAMuF,EAAM,0CACN6K,EAAcX,GAAQlK,EAAK,CAAE8K,KAAMN,GAAc3O,MAAOkP,KAAML,GAAc7O,QAClF,OAAIgP,IAAgB7K,EACX,gBAAgBwK,GAAc3O,YAAY6O,GAAc7O,QAE1DgP,CAAW,IAGdG,IAAkBvQ,EAAAA,EAAAA,KAAS,IAAMwE,EAAMgM,aAAelL,GAAS,4CAA6C,oBAG5GmL,GAA4BrP,IAChC,MAAMwM,GAAsB,IAARxM,GAAa0D,QAAQ,GACzC,MAAO,GAAG8I,EAAa,EAAI,IAAM,KAAKA,IAAa,EAI/C8C,GAA4BA,CAACC,EAAYlG,IACxCkG,GAA6B,IAAfA,GACXlG,EAAiBkG,GAAcA,EADK,EAKxCC,GAAwBA,CAACC,EAAQC,EAAQ,KAC7C,MAAMC,EAAUnK,OAAOmK,QAAQF,GACzBG,EAASD,EAAQrG,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,KAC/C,MAAO,CACLsG,SAAUD,EAAOE,MAAM,EAAGJ,GAC1BK,SAAUH,EAAOE,OAAOJ,GAAOM,UAChC,EAIGC,IAAoBrR,EAAAA,EAAAA,KAAS,IAC5BwE,EAAM8M,iBAAiBC,UACrBX,GAAsBpM,EAAM8M,gBAAgBC,WADL,CAAEN,SAAU,GAAIE,SAAU,MAIpEK,IAAkBxR,EAAAA,EAAAA,KAAS,IAC1BwE,EAAM8M,iBAAiBG,QACrBb,GAAsBpM,EAAM8M,gBAAgBG,SADP,CAAER,SAAU,GAAIE,SAAU,MAIlEO,IAAuB1R,EAAAA,EAAAA,KAAS,IAC/BwE,EAAM8M,iBAAiBK,aACrBf,GAAsBpM,EAAM8M,gBAAgBK,cADF,CAAEV,SAAU,GAAIE,SAAU,MAKvES,IAA0B5R,EAAAA,EAAAA,KAAS,IAClCwE,EAAMqN,QAAQzH,eAEZxD,OAAOG,OAAOvC,EAAMqN,OAAOzH,gBAC/BmC,KAAIjC,IACH,MAAMqG,EAAarG,EAAOwH,KAAOxH,EAAOyH,KAClCtH,EAAiBH,EAAOG,eACxBuH,EAAStB,GAA0BC,EAAYlG,GACrD,MAAO,IACFH,EACHqG,aACAlG,iBACAuH,SACAxJ,iBAAkB,EAAIwJ,EACvB,IAEFtH,MAAK,CAACC,EAAGC,IAAM3H,KAAK6F,IAAI8B,EAAEpC,iBAAmB,GAAKvF,KAAK6F,IAAI6B,EAAEnC,iBAAmB,KAfzC,KAmBtCyJ,IAA8BjS,EAAAA,EAAAA,KAAS,KAC3C,IAAKwE,EAAMqN,QAAQ3K,mBAAoB,MAAO,GAE9C,MAAMF,EAAa,GAsCnB,OAnCAJ,OAAOG,OAAOvC,EAAMqN,OAAO3K,oBAAoBhB,SAAQC,IACjDA,EAASsB,QAEPtB,EAASG,UACXM,OAAOG,OAAOZ,EAASG,UAAUJ,SAAQM,SACd9C,IAArB8C,EAAMmK,YACR3J,EAAWkL,KAAK,IACX1L,EACHmK,WAAYnK,EAAMmK,WAClBlG,eAAgBjE,EAAMmK,YAAcnK,EAAMgC,kBAAoB,GAC9DwJ,QAASxL,EAAMgC,kBAAoB,GAAK,EACxCA,iBAAkBhC,EAAMgC,kBAAoB,EAC5C2J,aAA8B,qBAAhBhM,EAASnB,GAA4B,QACtB,yBAAhBmB,EAASnB,GAAgC,aACzB,oBAAhBmB,EAASnB,GAA2B,MAAQ,QAE7D,IAGMmB,EAASnB,GAAG4G,SAAS,WAEHlI,IAAxByC,EAASwK,YACX3J,EAAWkL,KAAK,IACX/L,EACHwK,WAAYxK,EAASwK,WACrBlG,eAAgBtE,EAASwK,YAAcxK,EAASqC,kBAAoB,GACpEwJ,QAAS7L,EAASqC,kBAAoB,GAAK,EAC3CA,iBAAkBrC,EAASqC,kBAAoB,EAC/C2J,aAAc,QAGpB,IAIKnL,EAAW0D,MAAK,CAACC,EAAGC,KAEzB,MAAMwH,EAAY,CAAEC,KAAM,EAAGC,MAAO,EAAGC,WAAY,EAAGC,IAAK,GACrDC,EAAWL,EAAUzH,EAAEwH,cAAgBC,EAAUxH,EAAEuH,cACzD,OAAiB,IAAbM,EAAuBA,EAGpBxP,KAAK6F,IAAI8B,EAAEpC,iBAAmB,GAAKvF,KAAK6F,IAAI6B,EAAEnC,iBAAmB,EAAE,GAC1E,I,82PCzXJ,MAAMhJ,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S,i0DCkMA,MAAMgF,EAAQC,EAoBRtB,EAAOC,EAGPsP,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,OAGR,EAAEpT,IAAMC,EAAAA,EAAAA,MACR4F,EAAWA,CAACC,EAAKL,EAAW,MAChC,MAAM9D,EAAQ3B,EAAE8F,GAChB,OAAOnE,IAAUmE,EAAML,EAAW9D,CAAK,EAInC0R,GAAalT,EAAAA,EAAAA,IAAI,CACrBmT,QAASvO,EAAMwO,aAAaD,UAAW,EACvCE,cAAezO,EAAMwO,aAAaC,eAAiB,KACnDC,cAAe1O,EAAMwO,aAAaE,eAAiB,OAI/CC,GAAqBvT,EAAAA,EAAAA,KAAI,GACzBwT,GAAqBxT,EAAAA,EAAAA,IAAI,IAEzBC,GAAcC,EAAAA,EAAAA,KAGduT,GAAiBrT,EAAAA,EAAAA,KAAS,IACvBwE,EAAM8O,gBAAkB9O,EAAM+O,iBAIjCC,GAAuBxT,EAAAA,EAAAA,KAAS,IAC/B8S,EAAW1R,MAAM6R,cACdzO,EAAM+O,eAAiBT,EAAW1R,MAAM6R,cAAiB,IADrB,MAIxCQ,GAAoBzT,EAAAA,EAAAA,KAAS,IAC7BwT,EAAqBpS,OAAS,IAAMoS,EAAqBpS,OAAS,IAC7D,IACGoS,EAAqBpS,OAAS,IAAMoS,EAAqBpS,MAAQ,IACjEoS,EAAqBpS,MAAQ,KAAOoS,EAAqBpS,OAAS,IACrE,KAEA,MAILsS,GAAqB1T,EAAAA,EAAAA,KAAS,IAC9BwT,EAAqBpS,OAAS,IAAMoS,EAAqBpS,OAAS,IAC7D,iBACGoS,EAAqBpS,OAAS,IAAMoS,EAAqBpS,MAAQ,IACjEoS,EAAqBpS,MAAQ,KAAOoS,EAAqBpS,OAAS,IACrE,kBAEA,iBAILuS,IAAqB3T,EAAAA,EAAAA,KAAS,IAC9BwT,EAAqBpS,OAAS,IAAMoS,EAAqBpS,OAAS,IAC7D,UACGoS,EAAqBpS,OAAS,IAAMoS,EAAqBpS,MAAQ,IACjEoS,EAAqBpS,MAAQ,KAAOoS,EAAqBpS,OAAS,IACrE,UAEA,YAILwS,IAAoB5T,EAAAA,EAAAA,KAAS,IAC7BwT,EAAqBpS,OAAS,IAAMoS,EAAqBpS,OAAS,IAC7DkE,EAAS,kCAAmC,aAC1CkO,EAAqBpS,MAAQ,GAC/BkE,EAAS,qCAAsC,gBAE/CA,EAAS,oCAAqC,iBAInDuO,IAAoB7T,EAAAA,EAAAA,KAAS,KACjC,IAAK8S,EAAW1R,MAAM6R,cAAe,MAAO,GAE5C,MAAMa,EAAMtP,EAAM+O,eAAiBT,EAAW1R,MAAM6R,cAC9Cc,EAAcD,EAAMhB,EAAW1R,MAAM6R,cAAiB,IAE5D,OAAIhQ,KAAK6F,IAAIiL,GAAc,EAClBzO,EAAS,2CAA4C,oCACnDwO,EAAM,EACRrU,EAAE,6CAA8C,CACrD2I,OAAQ0L,EAAIhP,QAAQ,GACpBkP,QAASD,EAAWjP,QAAQ,KAGvBrF,EAAE,8CAA+C,CACtD2I,OAAQnF,KAAK6F,IAAIgL,GAAKhP,QAAQ,GAC9BkP,QAAS/Q,KAAK6F,IAAIiL,GAAYjP,QAAQ,IAE1C,IAIImP,IAAuBjU,EAAAA,EAAAA,KAAS,KACpC,IAAK8S,EAAW1R,MAAM8R,eAAoD,IAAnCJ,EAAW1R,MAAM8R,cAAqB,OAAO,IAEpF,MAAMgB,EAAsB1P,EAAM8O,gBAAkB9O,EAAM+O,eAC1D,OAAQW,EAAsBjR,KAAK6F,IAAIgK,EAAW1R,MAAM8R,eAAkB,GAAG,IAGzEiB,IAAoBnU,EAAAA,EAAAA,KAAS,KACjC,IAAK8S,EAAW1R,MAAM8R,cAAe,MAAO,GAE5C,MAAMgB,EAAsB1P,EAAM8O,gBAAkB9O,EAAM+O,eACpDa,EAAanR,KAAKoR,KAAKH,KAAyBjR,KAAKoR,KAAKvB,EAAW1R,MAAM8R,gBAC5B,IAAnCJ,EAAW1R,MAAM8R,cAEnC,OAAKkB,EAIDnR,KAAK6F,IAAImL,GAAqB7S,MAAQ,MAAQ,EACzC,IACE6B,KAAK6F,IAAImL,GAAqB7S,MAAQ,MAAQ,GAChD,KAEA,IARA,GAST,IAGIkT,IAAqBtU,EAAAA,EAAAA,KAAS,KAClC,IAAK8S,EAAW1R,MAAM8R,cAAe,MAAO,GAE5C,MAAMgB,EAAsB1P,EAAM8O,gBAAkB9O,EAAM+O,eACpDa,EAAanR,KAAKoR,KAAKH,KAAyBjR,KAAKoR,KAAKvB,EAAW1R,MAAM8R,gBAC5B,IAAnCJ,EAAW1R,MAAM8R,cAEnC,OAAKkB,EAIDnR,KAAK6F,IAAImL,GAAqB7S,MAAQ,MAAQ,EACzC,iBACE6B,KAAK6F,IAAImL,GAAqB7S,MAAQ,MAAQ,GAChD,kBAEA,eARA,cAST,IAGImT,IAAqBvU,EAAAA,EAAAA,KAAS,KAClC,IAAK8S,EAAW1R,MAAM8R,cAAe,MAAO,UAE5C,MAAMgB,EAAsB1P,EAAM8O,gBAAkB9O,EAAM+O,eACpDa,EAAanR,KAAKoR,KAAKH,KAAyBjR,KAAKoR,KAAKvB,EAAW1R,MAAM8R,gBAC5B,IAAnCJ,EAAW1R,MAAM8R,cAEnC,OAAKkB,EAIDnR,KAAK6F,IAAImL,GAAqB7S,MAAQ,MAAQ,EACzC,UACE6B,KAAK6F,IAAImL,GAAqB7S,MAAQ,MAAQ,GAChD,UAEA,UARA,SAST,IAGIoT,IAAoBxU,EAAAA,EAAAA,KAAS,KACjC,IAAK8S,EAAW1R,MAAM8R,cAAe,MAAO,GAE5C,MAAMgB,EAAsB1P,EAAM8O,gBAAkB9O,EAAM+O,eACpDa,EAAanR,KAAKoR,KAAKH,KAAyBjR,KAAKoR,KAAKvB,EAAW1R,MAAM8R,gBAC5B,IAAnCJ,EAAW1R,MAAM8R,cAEnC,OAAKkB,EAMDnR,KAAK6F,IAAImL,GAAqB7S,MAAQ,MAAQ,EACzCkE,EAAS,kCAAmC,aAC1C2O,GAAqB7S,MAAQ,GAC/B0R,EAAW1R,MAAM8R,eAAiB,EACrC5N,EAAS,yCAA0C,wBACnDA,EAAS,yCAA0C,wBAEhDwN,EAAW1R,MAAM8R,eAAiB,EACrC5N,EAAS,yCAA0C,wBACnDA,EAAS,yCAA0C,wBAdhDwN,EAAW1R,MAAM8R,eAAiB,EACrC5N,EAAS,iDAAkD,2CAC3DA,EAAS,iDAAkD,0CAajE,IAGImP,IAAoBzU,EAAAA,EAAAA,KAAS,KACjC,IAAK8S,EAAW1R,MAAM8R,cAAe,MAAO,GAE5C,MAAMgB,EAAsB1P,EAAM8O,gBAAkB9O,EAAM+O,eACpDO,EAAMI,EAAsBpB,EAAW1R,MAAM8R,cAEnD,OAAIjQ,KAAK6F,IAAIgL,GAAO,EACXxO,EAAS,0CAA2C,mCAClDwO,EAAM,EACRhB,EAAW1R,MAAM8R,eAAiB,EACrCzT,EAAE,yCAA0C,CAAE2I,OAAQ0L,EAAIhP,QAAQ,KAClErF,EAAE,wCAAyC,CAAE2I,OAAQnF,KAAK6F,IAAIgL,GAAKhP,QAAQ,KAExEgO,EAAW1R,MAAM8R,eAAiB,EACrCzT,EAAE,wCAAyC,CAAE2I,OAAQnF,KAAK6F,IAAIgL,GAAKhP,QAAQ,KAC3ErF,EAAE,yCAA0C,CAAE2I,OAAQ0L,EAAIhP,QAAQ,IACxE,IAIF,SAAS4P,KACPvR,EAAK,eAAgB,IAAK2P,EAAW1R,QAEjC0R,EAAW1R,MAAM2R,QACnB4B,KAEAC,KAGFzR,EAAK,oBAAqB,CACxB0R,QAAS,CACPC,OAAQpB,EAAmBtS,MAC3B2T,KAAMtB,EAAkBrS,MACxBiD,KAAMuP,GAAkBxS,MACxB4T,QAASnB,GAAkBzS,OAE7B6T,QAAS,CACPH,OAAQR,GAAmBlT,MAC3B2T,KAAMZ,GAAkB/S,MACxBiD,KAAMmQ,GAAkBpT,MACxB4T,QAASP,GAAkBrT,QAGjC,CAEA,SAAS8T,KAKP,GAHA/R,EAAK,qBAAsBgQ,EAAmB/R,OAG1C+R,EAAmB/R,MACrB,GAAuC,OAAnC0R,EAAW1R,MAAM6R,cAAwB,CAC3C,MAAM7K,EAAS0K,EAAW1R,MAAM6R,cAAcnO,QAAQ,GACtDsO,EAAmBhS,MAAQ3B,EAAE,8CAA+C,CAAE2I,WAG9EvI,EAAYsV,YAAYlC,cAAgBH,EAAW1R,MAAM6R,cACzDpT,EAAYsV,YAAYpC,SAAU,EAClClT,EAAYuV,mBAAkB,EAChC,MAAO,GAAuC,OAAnCtC,EAAW1R,MAAM8R,cAAwB,CAClD,MAAMmC,EAAYvC,EAAW1R,MAAM8R,eAAiB,EAC9C9K,EAASiN,EACbvC,EAAW1R,MAAM8R,cAAcpO,QAAQ,GACvC7B,KAAK6F,IAAIgK,EAAW1R,MAAM8R,eAAepO,QAAQ,GAEnDsO,EAAmBhS,MACjB3B,EADyB4V,EACvB,8CACA,8CAD+C,CAAEjN,WAIrDvI,EAAYsV,YAAYjC,cAAgBJ,EAAW1R,MAAM8R,cACzDrT,EAAYsV,YAAYpC,SAAU,EAClClT,EAAYuV,mBAAkB,EAChC,MACEhC,EAAmBhS,MAAQkE,EAAS,wCAAyC,0FAC7E6N,EAAmB/R,OAAQ,OAG7BgS,EAAmBhS,MAAQ,GAC3BvB,EAAYuV,mBAAkB,EAElC,CAGA,SAAST,KACP,IAAK7B,EAAW1R,MAAM2R,QAAS,OAE/B,MAAMuC,EAAQ,IAAK1C,EAAM0C,OAEc,OAAnCxC,EAAW1R,MAAM6R,cACnBqC,EAAMC,YAAczC,EAAW1R,MAAM6R,cAAcuC,kBAE5CF,EAAMC,YAGwB,OAAnCzC,EAAW1R,MAAM8R,cACnBoC,EAAMG,YAAc3C,EAAW1R,MAAM8R,cAAcsC,kBAE5CF,EAAMG,YAGf/C,EAAOgD,QAAQ,CAAEJ,SACnB,CAEA,SAASV,KACP,MAAMU,EAAQ,IAAK1C,EAAM0C,cAClBA,EAAMC,mBACND,EAAMG,YACb/C,EAAOgD,QAAQ,CAAEJ,SACnB,CAEA,SAASK,KACP,MAAM,YAAEJ,EAAW,YAAEE,GAAgB7C,EAAM0C,MAE3C,QAAoB5R,IAAhB6R,QAA6C7R,IAAhB+R,EAA2B,CAC1D,MAAMG,EAAe,IAAK9C,EAAW1R,MAAO2R,SAAS,QAEjCrP,IAAhB6R,IACFK,EAAa3C,cAAgB4C,WAAWN,SAGtB7R,IAAhB+R,IACFG,EAAa1C,cAAgB2C,WAAWJ,IAG1C3C,EAAW1R,MAAQwU,EACnBlB,IACF,CACF,C,OAGArT,EAAAA,EAAAA,KAAM,IAAMmD,EAAMwO,eAAe8C,IAC3BA,IACFhD,EAAW1R,MAAQ,IAAK0U,GAC1B,GACC,CAAEzL,MAAM,KAEXhJ,EAAAA,EAAAA,KAAM,IAAMuR,EAAM0C,QAAQS,SACKrS,IAAzBqS,EAASR,kBAAsD7R,IAAzBqS,EAASN,aACjDE,IACF,GACC,CAAEtL,MAAM,KAGX7I,EAAAA,EAAAA,KAAU,KACRmU,IAAmB,I,4xIC5iBrB,MAAMnW,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://my-new-project/./src/domains/budget/components/BudgetPanelHost.vue","webpack://my-new-project/./src/domains/budget/components/BudgetResults.vue","webpack://my-new-project/./src/domains/budget/components/BudgetResults.vue?e0a4","webpack://my-new-project/./src/domains/budget/components/BudgetRevenueSliders.vue","webpack://my-new-project/./src/domains/budget/components/CategoryGroup.vue","webpack://my-new-project/./src/domains/budget/components/CategoryGroup.vue?88f9","webpack://my-new-project/./src/domains/budget/components/BudgetSpendingControls.vue","webpack://my-new-project/./src/domains/budget/components/BudgetSpendingControls.vue?b52d","webpack://my-new-project/./src/domains/budget/components/BudgetYearSelector.vue","webpack://my-new-project/./src/domains/budget/components/BudgetYearSelector.vue?9fe2","webpack://my-new-project/./src/domains/budget/components/ChartsPanel.vue","webpack://my-new-project/./src/domains/budget/components/ChartsPanel.vue?900d","webpack://my-new-project/./src/domains/budget/components/ExportCard.vue","webpack://my-new-project/./src/domains/budget/components/ExportCard.vue?4bc1","webpack://my-new-project/./src/domains/budget/components/GoalTracker.vue","webpack://my-new-project/./src/domains/budget/components/GoalTracker.vue?ad81"],"sourcesContent":["import script from \"./BudgetPanelHost.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BudgetPanelHost.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <section class=\"simulator-card results-card\">\n    <h2 class=\"card-title\">\n      <span class=\"material-icons icon\">analytics</span>\n      {{ t('simulator.results.title') }}\n    </h2>\n    \n    <!-- Deficit Warning Banner -->\n    <div\n      v-if=\"deficitWarningLevel !== 'none'\" \n      class=\"deficit-warning-banner\" \n      :class=\"deficitWarningClass\"\n      aria-live=\"polite\"\n    >\n      <div class=\"warning-content\">\n        <span\n          v-if=\"deficitWarningLevel === 'mild'\"\n          class=\"warning-icon\"\n        >🟡</span>\n        <span\n          v-if=\"deficitWarningLevel === 'high'\"\n          class=\"warning-icon\"\n        >🟠</span>\n        <span\n          v-if=\"deficitWarningLevel === 'critical'\"\n          class=\"warning-icon\"\n        >🔴</span>\n        <span class=\"warning-message\">{{ deficitWarningMessage }}</span>\n        <button\n          class=\"dismiss-button\"\n          :aria-label=\"t('simulator.results.warnings.dismiss')\"\n          @click=\"dismissWarning\"\n        >\n          <span class=\"material-icons\">close</span>\n        </button>\n      </div>\n      <div\n        class=\"warning-info-button\"\n        @click=\"showDeficitInfo = !showDeficitInfo\"\n      >\n        <span class=\"material-icons\">info</span>\n      </div>\n      \n      <!-- Deficit Info Popover -->\n      <div\n        v-if=\"showDeficitInfo\"\n        class=\"deficit-info-popover\"\n      >\n        <h3>{{ t('simulator.results.warnings.info') }}</h3>\n        <p>{{ t('simulator.results.warnings.infoDescription') }}</p>\n        <ul>\n          <li v-for=\"item in t('simulator.results.warnings.infoItems')\" :key=\"item\">{{ item }}</li>\n        </ul>\n        <p>\n          <a\n            href=\"https://www.pbo-dpb.ca/en/research--recherche/research-publications--publications-de-recherche/fiscal-sustainability-report-2023--rapport-sur-la-viabilite-financiere-de-2023\" \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n          >\n            {{ t('simulator.results.warnings.learnMore') }}\n          </a>\n        </p>\n      </div>\n    </div>\n    \n    <div class=\"card-content\">\n      <!-- Mobile Tab Navigation -->\n      <div class=\"mobile-tabs\">\n        <button \n          :class=\"{ 'active-tab': activeTab === 'revenue' }\" \n          class=\"tab-button\"\n          @click=\"activeTab = 'revenue'\"\n        >\n          {{ t('simulator.results.tabs.revenue') }}\n        </button>\n        <button \n          :class=\"{ 'active-tab': activeTab === 'spending' }\" \n          class=\"tab-button\"\n          @click=\"activeTab = 'spending'\"\n        >\n          {{ t('simulator.results.tabs.spending') }}\n        </button>\n      </div>\n      \n      <div\n        class=\"budget-results\"\n        :class=\"{ 'mobile-view': isMobileView }\"\n      >\n        <!-- Revenue Tab Content -->\n        <div\n          v-show=\"activeTab === 'revenue' || !isMobileView\"\n          class=\"tab-content\"\n        >\n          <!-- Revenue -->\n          <div class=\"result-item\">\n            <span class=\"result-label\">\n              <span class=\"material-icons text-blue-500 mr-1 text-xs\">trending_up</span>\n              {{ t('simulator.results.labels.totalRevenue') }}\n            </span>\n            <span class=\"font-medium text-blue-600 text-sm\">\n              {{ formatCurrency(totalRevenueValue) }}\n            </span>\n          </div>\n          \n          <div class=\"toggle-details\">\n            <button\n              class=\"download-button\"\n              :title=\"t('simulator.results.actions.downloadImage')\"\n              @click=\"throttledDownloadChart('revenue')\"\n            >\n              <span class=\"material-icons\">download</span>\n            </button>\n          </div>\n        </div>\n        \n        <!-- Spending Tab Content -->\n        <div\n          v-show=\"activeTab === 'spending' || !isMobileView\"\n          class=\"tab-content\"\n          :class=\"{ 'mobile-view': isMobileView }\"\n        >\n          <!-- Spending -->\n          <div class=\"result-item\">\n            <span class=\"result-label\">\n              <span class=\"material-icons text-red-500 mr-1 text-xs\">trending_down</span>\n              {{ t('simulator.results.labels.totalSpending') }}\n            </span>\n            <span class=\"font-medium text-red-600 text-sm tooltip-container\"\n              @mouseenter=\"showTooltip(formatPercentage(totalSpendingValue, totalRevenueValue) + ' ' + t('simulator.results.tooltips.ofTotalRevenue'))\"\n              @mouseleave=\"hideTooltip()\">\n              {{ formatCurrency(totalSpendingValue) }}\n            </span>\n          </div>\n          \n          <!-- Debt Servicing (Fixed Cost) -->\n          <div class=\"result-item\">\n            <span class=\"result-label\">\n              <span class=\"material-icons text-gray-500 mr-1 text-xs\">account_balance</span>\n              {{ t('simulator.results.labels.debtServicing') }}\n              <span class=\"info-icon tooltip-container\" \n                @mouseenter=\"showTooltip(t('simulator.results.tooltips.debtServicing'))\"\n                @mouseleave=\"hideTooltip()\"\n                style=\"margin-left: 4px; cursor: pointer;\">\n                â“˜\n              </span>\n            </span>\n            <span class=\"font-medium text-gray-600 text-sm\">\n              {{ formatCurrency(budgetStore.debtServicing) }}\n            </span>\n          </div>\n          \n          <!-- Surplus/Deficit -->\n          <div class=\"result-item\">\n            <span class=\"result-label\">\n              <span\n                class=\"material-icons mr-1 text-xs\"\n                :class=\"{\n                  'text-green-500': surplusValue > 0,\n                  'text-red-500': surplusValue < 0,\n                  'text-gray-500': surplusValue === 0\n                }\"\n              >\n                {{ surplusValue > 0 ? 'trending_up' : surplusValue < 0 ? 'trending_down' : 'remove' }}\n              </span>\n              {{ t('simulator.results.labels.surplusDeficit') }}\n            </span>\n            <span\n              class=\"font-medium text-sm tooltip-container\"\n              @mouseenter=\"showTooltip(formatPercentage(Math.abs(surplusValue), totalRevenueValue) + ' ' + t('simulator.results.tooltips.ofTotalRevenue'))\"\n              @mouseleave=\"hideTooltip()\"\n              :class=\"{\n                'text-green-600': surplusValue > 0,\n                'text-red-600': surplusValue < 0,\n                'text-gray-600': surplusValue === 0\n              }\"\n            >\n              {{ surplusValue > 0 ? t('simulator.goals.surplus') + ': +' : surplusValue < 0 ? t('simulator.goals.deficit') + ': ' : '' }}\n              {{ formatCurrency(Math.abs(surplusValue)) }}\n            </span>\n          </div>\n\n          <!-- Debt-to-GDP Ratio -->\n          <div class=\"result-item\" :class=\"{ 'mobile-view': isMobileView }\">\n            <span class=\"result-label\">\n              <span class=\"material-icons text-gray-500 mr-1 text-xs\">account_balance</span>\n              {{ t('simulator.results.labels.debtToGdpRatio') }}\n              <span class=\"info-icon tooltip-container\" \n                @mouseenter=\"showTooltip(t('simulator.results.tooltips.debtToGdpRatio'))\"\n                @mouseleave=\"hideTooltip()\"\n                style=\"margin-left: 4px; cursor: pointer;\">\n                â“˜\n              </span>\n            </span>\n            <span class=\"font-medium text-gray-700 text-sm\">\n              {{ budgetStore.debtToGdpRatio.toFixed(1) }}%\n            </span>\n          </div>\n          \n          <div class=\"toggle-details\">\n            <button\n              class=\"download-button\"\n              :title=\"t('simulator.budgetResults.tooltips.downloadImage')\"\n              @click=\"throttledDownloadChart('spending')\"\n            >\n              <span class=\"material-icons\">download</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Actions -->\n      <div class=\"mt-4\">\n        <div class=\"flex justify-between items-center\">\n          <h3 class=\"text-sm font-semibold text-gray-800\">\n            {{ t('simulator.results.actions.title') }}\n          </h3>\n          <button\n            class=\"share-budget-button\"\n            @click=\"throttledShareBudget\"\n            :aria-label=\"t('simulator.results.actions.shareBudget')\"\n            style=\"display: flex; align-items: center; gap: 4px; background: #4263eb; color: #fff; border: none; border-radius: 4px; padding: 6px 14px; font-weight: 500; cursor: pointer; transition: background 0.2s;\"\n          >\n            <span class=\"material-icons\" style=\"font-size: 18px;\">share</span>\n            {{ t('simulator.results.actions.shareBudget') }}\n          </button>\n        </div>\n        <div class=\"action-buttons mt-2\">\n          <button\n            class=\"action-button reset-button\"\n            @click=\"throttledResetBudget\"\n          >\n            {{ t('simulator.results.actions.resetBudget') }}\n          </button>\n          <div class=\"auto-balance-container\">\n            <label class=\"auto-balance-label\">\n              <input\n                type=\"checkbox\"\n                :checked=\"simpleAutoBalanceActive\"\n                @change=\"$emit('toggle-simple-auto-balance', $event.target.checked)\"\n              >\n              <span class=\"auto-balance-text\">{{ t('simulator.results.actions.autoBalance') }}</span>\n            </label>\n            <div class=\"auto-balance-info\">\n              <span \n                class=\"info-icon\"\n                @mouseenter=\"showTooltip(t('simulator.results.tooltips.autoBalance'))\"\n                @mouseleave=\"hideTooltip()\"\n              >â“˜</span>\n            </div>\n          </div>\n          <button\n            class=\"action-button save-button\"\n            @click=\"throttledSaveBudget\"\n          >\n            {{ t('simulator.results.actions.saveBudget') }}\n          </button>\n          \n          <!-- Achievement Badges Section -->\n          <div class=\"achievement-badges mt-4 pt-3 border-t border-gray-200\">\n            <div \n              class=\"section-header flex items-center justify-between cursor-pointer\" \n              @click=\"showBadges = !showBadges\"\n            >\n              <h3 class=\"text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                <span class=\"material-icons mr-2 text-amber-500 text-sm\">emoji_events</span>\n                {{ t('simulator.results.achievements.title') }}\n              </h3>\n              <span class=\"material-icons text-gray-500 text-sm\">\n                {{ showBadges ? 'expand_less' : 'expand_more' }}\n              </span>\n            </div>\n            \n            <transition name=\"slide-fade\">\n              <div\n                v-if=\"showBadges\"\n                class=\"badge-container bg-gray-50 rounded-md p-3 shadow-sm\"\n              >\n                <div\n                  v-if=\"earnedBadges.length > 0\"\n                  class=\"flex flex-wrap justify-center gap-3\"\n                >\n                  <AchievementBadge \n                    v-for=\"badge in earnedBadges\" \n                    :key=\"badge.title + '-' + badge.tier\" \n                    :badge=\"badge\" \n                    size=\"medium\"\n                    :show-tooltip=\"true\"\n                  />\n                </div>\n                <div\n                  v-else\n                  class=\"text-center py-3\"\n                >\n                  <p class=\"text-sm text-gray-500\">\n                    {{ t('simulator.results.achievements.noBadges') }}\n                  </p>\n                </div>\n              </div>\n            </transition>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Export Budget PDF Panel -->\n    <ExportPanel />\n  </section>\n  <Teleport to=\"body\">\n    <div \n      v-if=\"activeTooltip\"\n      class=\"tooltip-text\"\n      :style=\"{ \n        visibility: activeTooltip ? 'visible' : 'hidden',\n        opacity: activeTooltip ? 1 : 0\n      }\"\n    >\n      {{ activeTooltip }}\n    </div>\n  </Teleport>\n</template>\n\n<script setup>\nimport { ref, watch, onMounted, computed, onUnmounted } from 'vue';\nimport ExportPanel from './BudgetExportPanel.vue';\nimport { useBudgetSimulatorStore } from '@/domains/budget/store/budgetSimulator.js';\nimport AchievementBadge from '@/domains/badges/components/AchievementBadge.vue';\nimport html2canvas from 'html2canvas';\nimport throttle from 'lodash.throttle';\nimport { handleComponentError } from '@/utils/errorHandler.js';\nimport { useI18n } from '@/i18n';\n\n// Disable automatic attribute inheritance to prevent warnings\ndefineOptions({\n  inheritAttrs: false\n});\n\n// i18n setup\nconst { t } = useI18n();\n// State for collapsible sections\nconst showBadges = ref(true);\n\nconst budgetStore = useBudgetSimulatorStore();\n\n// Use computed properties instead of refs for better reactivity\n// These will automatically update when the store changes\nconst totalRevenueValue = computed(() => {\n    try {\n      // eslint-disable-next-line no-unused-vars\n      const _ = budgetStore.lastRevenueSourceUpdate;\n      // eslint-disable-next-line no-unused-vars\n      const __ = budgetStore.lastTaxExpenditureUpdate;\n      // eslint-disable-next-line no-unused-vars\n      const ___ = budgetStore.lastUpdate;\n      return budgetStore.totalRevenue;\n    } catch (error) {\n      handleComponentError(error, 'BudgetResults.totalRevenue');\n      return 0;\n    }\n});\n\nconst totalSpendingValue = computed(() => {\n    try {\n      // eslint-disable-next-line no-unused-vars\n      const _ = budgetStore.lastUpdate;\n      return budgetStore.totalSpending;\n    } catch (error) {\n      handleComponentError(error, 'BudgetResults.totalSpending');\n      return 0;\n    }\n});\n\nconst surplusValue = computed(() => {\n    try {\n      // eslint-disable-next-line no-unused-vars\n      const _ = budgetStore.lastRevenueSourceUpdate;\n      // eslint-disable-next-line no-unused-vars\n      const __ = budgetStore.lastTaxExpenditureUpdate;\n      // eslint-disable-next-line no-unused-vars\n      const ___ = budgetStore.lastUpdate;\n      return budgetStore.surplus;\n    } catch (error) {\n      handleComponentError(error, 'BudgetResults.surplus');\n      return 0;\n    }\n});\n\n// Get earned badges from the store with reactive dependency on lastBadgeUpdate\nconst earnedBadges = computed(() => {\n    try {\n      // eslint-disable-next-line no-unused-vars\n      const _ = budgetStore.lastBadgeUpdate;\n      // eslint-disable-next-line no-unused-vars\n      const __ = budgetStore.lastUpdate;\n      return budgetStore.earnedBadges || [];\n    } catch (error) {\n      handleComponentError(error, 'BudgetResults.earnedBadges');\n      return [];\n    }\n});\n\n// Mobile view state\nconst isMobileView = ref(window.innerWidth < 768);\nconst activeTab = ref('revenue');\n\n// Deficit warning state\nconst warningDismissed = ref(false);\nconst showDeficitInfo = ref(false);\n\n// Function to reset warning dismissed state when deficit changes\nfunction checkDeficitWarning() {\n  if (surplusValue.value < 0) {\n    warningDismissed.value = false;\n  }\n}\n\n// Watch for changes to deficit to update warning state\nwatch(surplusValue, () => {\n  console.log('Surplus/deficit changed, checking warning state');\n  checkDeficitWarning();\n});\n\n// Setup on component mount\nonMounted(() => {\n  // Check deficit warning on initial load\n  checkDeficitWarning();\n  \n  // Add window resize listener for mobile view\n  window.addEventListener('resize', handleResize);\n  \n  // Initial check for mobile view\n  handleResize();\n});\n\nonUnmounted(() => {\n  window.removeEventListener('resize', handleResize);\n});\n\n// Computed properties for deficit warning\nconst deficitWarningLevel = computed(() => {\n  if (warningDismissed.value) return 'none';\n  \n  // Check if we have a surplus or small deficit (â‰¤ $25B) - Fiscal Stability Zone\n  if (surplusValue.value >= 0 || surplusValue.value > -25) {\n    return 'none';\n  }\n  \n  // $25Bâ€“$49.9B deficit: Mild Warning - Fiscal Vigilance Zone\n  if (surplusValue.value >= -50) {\n    return 'mild';\n  }\n  \n  // $50Bâ€“$99.9B deficit: High Warning - Fiscal Stress Zone\n  if (surplusValue.value >= -100) {\n    return 'high';\n  }\n  \n  // â‰¥ $100B deficit: Critical Warning - Fiscal Emergency Zone\n  return 'critical';\n});\n\nconst deficitWarningMessage = computed(() => {\n  switch (deficitWarningLevel.value) {\n    case 'mild':\n      return t('simulator.results.warnings.mild');\n    case 'high':\n      return t('simulator.results.warnings.high');\n    case 'critical':\n      return t('simulator.results.warnings.critical');\n    default:\n      return \"\";\n  }\n});\n\nconst deficitWarningClass = computed(() => {\n  return {\n    'mild-warning': deficitWarningLevel.value === 'mild',\n    'high-warning': deficitWarningLevel.value === 'high',\n    'critical-warning': deficitWarningLevel.value === 'critical'\n  };\n});\n\nfunction dismissWarning() {\n  warningDismissed.value = true;\n}\n\n// Handle window resize for responsive design\nfunction handleResize() {\n  isMobileView.value = window.innerWidth < 768;\n}\n\n// Download chart as image\nfunction downloadChart(chartType) {\n  const element = document.querySelector(`.tab-content:nth-child(${chartType === 'revenue' ? 1 : 2})`);\n  if (!element) return;\n  \n  html2canvas(element).then(canvas => {\n    const link = document.createElement('a');\n    link.download = `budget-${chartType}-chart.png`;\n    link.href = canvas.toDataURL('image/png');\n    link.click();\n  });\n}\n\n// Format percentage for tooltips\nfunction formatPercentage(value, total) {\n  if (!total || total === 0) return '0%';\n  return `${Math.round((value / total) * 100)}%`;\n}\n\n// eslint-disable-next-line no-unused-vars\nconst props = defineProps({\n  autoBalanceActive: {\n    type: Boolean,\n    default: false\n  },\n  simpleAutoBalanceActive: {\n    type: Boolean,\n    default: false\n  },\n  id: {\n    type: String,\n    default: 'budget-results'\n  },\n  totalRevenue: {\n    type: Number,\n    default: 0\n  },\n  totalSpending: {\n    type: Number,\n    default: 0\n  },\n  surplus: {\n    type: Number,\n    default: 0\n  },\n  fiscalChaos: {\n    type: Boolean,\n    default: false\n  }\n});\n\n// eslint-disable-next-line no-unused-vars\nconst emit = defineEmits(['share-budget', 'reset-budget', 'save-budget', 'toggle-auto-balance', 'toggle-simple-auto-balance']);\n\nconst throttledShareBudget = throttle(() => {\n  emit('share-budget');\n}, 2000);\n\nconst throttledResetBudget = throttle(() => {\n  emit('reset-budget');\n}, 2000);\n\nconst throttledSaveBudget = throttle(() => {\n  emit('save-budget');\n}, 2000);\n\n// Format currency for display\nfunction formatCurrency(value) {\n  if (value === undefined || value === null || isNaN(value)) {\n    return '$0.0B';\n  }\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 1,\n    maximumFractionDigits: 1,\n  }).format(value) + 'B';\n}\n\nconst activeTooltip = ref('');\n\nfunction showTooltip(text) {\n  activeTooltip.value = text;\n}\n\nfunction hideTooltip() {\n  activeTooltip.value = '';\n}\n\n// Throttle the downloadChart function\nconst throttledDownloadChart = throttle(downloadChart, 2000);\n</script>\n\n<style scoped>\n/* Existing styles... */\n\n/* Mobile Optimization Styles */\n.mobile-tabs {\n  display: none;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid #e2e8f0;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE and Edge */\n}\n\n.mobile-tabs::-webkit-scrollbar {\n  display: none; /* Chrome, Safari, Opera */\n}\n\n.tab-button {\n  padding: 0.75rem 1.25rem;\n  font-weight: 600;\n  color: #4a5568;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s;\n  white-space: nowrap;\n}\n\n.active-tab {\n  color: #3182ce;\n  border-bottom: 2px solid #3182ce;\n}\n\n.mobile-view .tab-content {\n  width: 100%;\n}\n\n/* Show tabs on mobile */\n@media (max-width: 1024px) {\n  .mobile-tabs {\n    display: flex;\n    justify-content: flex-start;\n    gap: 1rem;\n  }\n  \n  .budget-results {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .tab-content {\n    margin-bottom: 1rem;\n  }\n  \n  .deficit-warning-banner {\n    font-size: 0.875rem;\n    padding: 0.5rem 0.75rem;\n  }\n  \n  .warning-content {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .tab-button {\n    padding: 0.5rem 0.75rem;\n    font-size: 0.875rem;\n  }\n  \n  .deficit-warning-banner {\n    font-size: 0.75rem;\n    padding: 0.5rem;\n  }\n  \n  .warning-content {\n    gap: 0.25rem;\n  }\n  \n  .tooltip-text {\n    width: 100px;\n    font-size: 0.7rem;\n  }\n}\n\n.slide-fade-enter-active, .slide-fade-leave-active {\n  transition: all 0.3s ease;\n}\n.slide-fade-enter-from, .slide-fade-leave-to {\n  opacity: 0;\n  transform: translateY(-10px);\n}\n\n\n/* Tooltip Styles */\n.tooltip-container {\n  position: relative;\n  display: inline-block;\n}\n\n.tooltip-text {\n  width: 250px;\n  background-color: #2d3748;\n  color: #fff;\n  text-align: left;\n  border-radius: 6px;\n  padding: 8px 12px;\n  position: fixed;\n  z-index: 9999;\n  bottom: 20px;\n  left: 20px;\n  transition: opacity 0.3s;\n  font-size: 0.85rem;\n  pointer-events: none;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  white-space: pre-line;\n  word-wrap: break-word;\n}\n\n.tooltip-text::after {\n  content: \"\";\n  position: absolute;\n  top: -10px;\n  left: 20px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: transparent transparent #2d3748 transparent;\n}\n\n.tooltip-container:hover {\n  cursor: help;\n}\n\n/* Download Button */\n.download-button {\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0.25rem;\n  color: #4a5568;\n  transition: color 0.2s;\n  margin-left: 0.5rem;\n}\n\n.download-button:hover {\n  color: #2d3748;\n}\n\n/* Deficit Warning Banner Styles */\n.deficit-warning-banner {\n  position: sticky;\n  top: 0;\n  margin-bottom: 1rem;\n  padding: 0.75rem 1rem;\n  border-radius: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  opacity: 0.95;\n  z-index: 100;\n}\n\n.mild-warning {\n  background-color: rgba(255, 244, 141, 0.9);\n  border-left: 4px solid #f6e05e;\n}\n\n.high-warning {\n  background-color: rgba(255, 213, 170, 0.9);\n  border-left: 4px solid #ed8936;\n}\n\n.critical-warning {\n  background-color: rgba(254, 178, 178, 0.9);\n  border-left: 4px solid #e53e3e;\n}\n\n.warning-content {\n  display: flex;\n  align-items: center;\n  gap: 0.75rem;\n  flex: 1;\n}\n\n.warning-icon {\n  flex-shrink: 0;\n}\n\n.warning-text {\n  flex: 1;\n  min-width: 0; /* Prevent text from overflowing */\n}\n\n.dismiss-button {\n  flex-shrink: 0;\n  padding: 0.25rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: inherit;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n}\n\n.dismiss-button:hover {\n  opacity: 1;\n}\n\n.warning-info-button {\n  cursor: pointer;\n  margin-left: 0.5rem;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n}\n\n.warning-info-button:hover {\n  opacity: 1;\n}\n\n.deficit-info-popover {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  width: 300px;\n  background: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  padding: 1rem;\n  z-index: 10;\n  margin-top: 0.5rem;\n}\n\n.deficit-info-popover h3 {\n  font-size: 1rem;\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n}\n\n.deficit-info-popover p {\n  font-size: 0.9rem;\n  margin-bottom: 0.5rem;\n}\n\n.deficit-info-popover ul {\n  padding-left: 1.5rem;\n  margin: 0.5rem 0;\n}\n\n.deficit-info-popover li {\n  font-size: 0.85rem;\n  margin-bottom: 0.25rem;\n}\n\n.deficit-info-popover a {\n  color: #3182ce;\n  text-decoration: none;\n  font-size: 0.85rem;\n}\n\n.deficit-info-popover a:hover {\n  text-decoration: underline;\n}\n\n/* Auto-balance tooltip styles */\n.auto-balance-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.auto-balance-info {\n  position: relative;\n  margin-left: 8px;\n}\n\n.info-icon {\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  line-height: 18px;\n  text-align: center;\n  border-radius: 50%;\n  background-color: #e2e8f0;\n  color: #4a5568;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.info-tooltip {\n  position: absolute;\n  bottom: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 220px;\n  background-color: #2d3748;\n  color: white;\n  text-align: center;\n  padding: 8px;\n  border-radius: 6px;\n  font-size: 12px;\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 0.3s;\n  z-index: 20;\n  margin-bottom: 8px;\n  pointer-events: none;\n}\n\n.info-tooltip::after {\n  content: \"\";\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: #2d3748 transparent transparent transparent;\n}\n\n.auto-balance-info:hover .info-tooltip {\n  visibility: visible;\n  opacity: 1;\n}\n\n.budget-results {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 1rem;\n  box-shadow: \n    0 10px 20px rgba(0, 0, 0, 0.19),\n    0 6px 6px rgba(0, 0, 0, 0.23);\n  backdrop-filter: blur(10px);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n  contain: content;\n}\n\n.budget-results:hover {\n  transform: translateY(-5px) translateZ(0);\n  box-shadow: \n    0 15px 30px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.results-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 1.5rem;\n}\n\n.result-card {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 1.25rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.1),\n    0 2px 4px rgba(0, 0, 0, 0.06);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n}\n\n.result-card:hover {\n  transform: translateY(-2px) translateZ(0);\n  box-shadow: \n    0 6px 8px rgba(0, 0, 0, 0.12),\n    0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n.result-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 1rem;\n}\n\n.result-title {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #2d3748;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.result-title .material-icons {\n  color: #4299e1;\n}\n\n.result-value {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #2d3748;\n  text-align: right;\n}\n\n.result-change {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.change-positive {\n  color: #38a169;\n}\n\n.change-negative {\n  color: #e53e3e;\n}\n\n.result-description {\n  font-size: 0.875rem;\n  color: #4a5568;\n  line-height: 1.5;\n}\n\n.result-chart {\n  width: 100%;\n  height: 150px;\n  margin-top: 1rem;\n  transform: translateZ(0);\n  will-change: transform;\n}\n\n/* Responsive Design */\n@container (max-width: 768px) {\n  .budget-results {\n    padding: 1rem;\n  }\n  \n  .results-grid {\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 1rem;\n  }\n  \n  .result-card {\n    padding: 1rem;\n  }\n  \n  .result-title {\n    font-size: 1rem;\n  }\n  \n  .result-value {\n    font-size: 1.25rem;\n  }\n  \n  .result-chart {\n    height: 120px;\n  }\n}\n\n@container (max-width: 480px) {\n  .budget-results {\n    padding: 0.75rem;\n  }\n  \n  .results-grid {\n    grid-template-columns: 1fr;\n    gap: 0.75rem;\n  }\n  \n  .result-card {\n    padding: 0.75rem;\n  }\n  \n  .result-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .result-value {\n    text-align: left;\n  }\n  \n  .result-chart {\n    height: 100px;\n  }\n}\n\n/* Touch Device Optimizations */\n@media (hover: none) {\n  .budget-results:hover,\n  .result-card:hover {\n    transform: none;\n  }\n  \n  .budget-results:active,\n  .result-card:active {\n    transform: translateY(-2px) translateZ(0);\n  }\n}\n\n/* Reduced Motion */\n@media (prefers-reduced-motion: reduce) {\n  .budget-results,\n  .result-card {\n    transition: none;\n    transform: none !important;\n  }\n}\n\n/* High Contrast Mode */\n@media (forced-colors: active) {\n  .budget-results,\n  .result-card {\n    border: 2px solid CanvasText;\n  }\n  \n  .result-title .material-icons {\n    border: 2px solid CanvasText;\n  }\n}\n\n/* Print Styles */\n@media print {\n  .budget-results {\n    box-shadow: none;\n    border: 1px solid #000;\n  }\n  \n  .result-card {\n    break-inside: avoid;\n    box-shadow: none;\n    border: 1px solid #000;\n  }\n  \n  .result-chart {\n    display: none;\n  }\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n</style>\n\n","import script from \"./BudgetResults.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BudgetResults.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BudgetResults.vue?vue&type=style&index=0&id=54a6a833&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-54a6a833\"]])\n\nexport default __exports__","import script from \"./BudgetRevenueSliders.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BudgetRevenueSliders.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"mb-4 w-full\">\n    <div\n      class=\"group-header\"\n      @click=\"toggleExpansion\"\n    >\n      <h3 class=\"text-sm font-medium text-gray-700\">\n        {{ title }}\n      </h3>\n      <div class=\"toggle-button\">\n        {{ expanded ? 'Collapse' : 'Expand' }}\n        <span\n          class=\"icon ml-1\"\n          :class=\"{ 'rotated': expanded }\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"12\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <polyline points=\"6 9 12 15 18 9\" />\n          </svg>\n        </span>\n      </div>\n    </div>\n    <div class=\"group-summary\">\n      <span>Total {{ title }}:</span>\n      <span>{{ formatCurrency(totalAmount) }}</span>\n    </div>\n    <div\n      class=\"group-content w-full\"\n      :class=\"{ 'expanded': expanded }\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { defineProps, defineEmits } from 'vue';\n\nconst props = defineProps({\n  title: {\n    type: String,\n    required: true\n  },\n  totalAmount: {\n    type: Number,\n    required: true\n  },\n  expanded: {\n    type: Boolean,\n    default: false\n  },\n  groupId: {\n    type: String,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['toggle']);\n\nfunction toggleExpansion(event) {\n  if (event) event.stopPropagation();\n  emit('toggle', props.groupId);\n}\n\nfunction formatCurrency(value) {\n  return '$' + value.toFixed(1) + 'B';\n}\n</script>\n\n<style scoped>\n.group-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.12rem;\n  background-color: #f8f9fa;\n  border-radius: 0.05rem;\n  cursor: pointer;\n  margin-bottom: 0.1rem;\n  width: 100%;\n}\n\n.group-summary {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.12rem;\n  background-color: #f1f3f5;\n  border-radius: 0.05rem;\n  font-size: 0.55rem;\n  font-weight: 500;\n  margin-bottom: 0.1rem;\n  width: 100%;\n}\n\n.group-content {\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.3s ease;\n  width: 100%;\n}\n\n.group-content.expanded {\n  max-height: 2000px; /* Increased from 1000px to accommodate more content */\n}\n\n.toggle-button {\n  display: flex;\n  align-items: center;\n  font-size: 0.75rem;\n  color: #4263eb;\n}\n\n.toggle-button .icon {\n  transition: transform 0.3s ease;\n}\n\n.toggle-button .icon.rotated {\n  transform: rotate(180deg);\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n</style>\n","import script from \"./CategoryGroup.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CategoryGroup.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CategoryGroup.vue?vue&type=style&index=0&id=4c03124a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4c03124a\"]])\n\nexport default __exports__","<template>\n  <section\n    class=\"simulator-card spending-card w-full\"\n    style=\"min-height: 1440px; display: flex; flex-direction: column;\"\n  >\n    <!-- Add loading indicator -->\n    <LoadingIndicator \n      :show=\"isUpdating\" \n      :message=\"i18nText('simulator.controls.spending.updating', 'Updating budget calculations...')\"\n      size=\"medium\"\n      variant=\"overlay\"\n    />\n    \n    <div\n      class=\"card-content w-full\"\n      style=\"flex-grow: 1;\"\n    >\n      <div\n        class=\"w-full overflow-y-auto pr-2\"\n        style=\"height: 100%;\"\n      >\n        <!-- Main Categories Group -->\n        <CategoryGroup\n          :title=\"i18nText('simulator.controls.spending.groupTitle.main', 'Main Categories')\"\n          :total-amount=\"totalMainCategories\"\n          :expanded=\"expandedGroups.mainCategories\"\n          group-id=\"mainCategories\"\n          @toggle=\"toggleGroup\"\n        >\n          <div class=\"main-categories-info\">\n            <p>{{ i18nText('simulator.controls.spending.mainIntro', 'Adjust spending for major federal budget categories. Increasing percentages raises spending, while decreasing them reduces spending.') }}</p>\n          </div>\n          <div class=\"main-categories-grid\">\n            <div\n              v-for=\"category in mainCategoriesList\"\n              :key=\"category.id\"\n              class=\"main-category-item\"\n            >\n              <div class=\"main-category-header\">\n                <h4>{{ localizedName(category.id, 'spending', category.name) }}</h4>\n                <div class=\"main-category-base\">\n                  {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatAmount(category.baseAmount) }}B\n                  <CategoryInfo\n                    :name=\"localizedName(category.id, 'spending', category.name)\"\n                    :description=\"localizedDescription(category.id, 'spending', category.description || '')\"\n                    :base-amount=\"category.baseAmount\"\n                    :current-setting=\"validSpendingFactors[category.id]\"\n                    @show-tooltip=\"showTooltip\"\n                    @hide-tooltip=\"hideTooltip\"\n                  />\n                </div>\n              </div>\n              <div class=\"main-category-content\">\n                <div class=\"main-category-controls\">\n                  <PercentageInput\n                    :id=\"`spending-${category.id}`\"\n                    :model-value=\"validSpendingFactors[category.id]\"\n                    :disabled=\"autoBalanceActive\"\n                    :base-amount=\"category.baseAmount\"\n                    class=\"main-category-percentage-input\"\n                    @update:model-value=\"updateCategoryAdjustment(category.id, $event)\"\n                  />\n                  <button \n                    class=\"reset-button\" \n                    :title=\"i18nText('simulator.controls.common.resetTooltip', 'Reset to baseline')\"\n                    @click=\"updateCategoryAdjustment(category.id, 100)\"\n                  >\n                    {{ i18nText('simulator.controls.common.reset', 'Reset') }}\n                  </button>\n                </div>\n                <div class=\"main-category-impact\">\n                  <div class=\"impact-label\">\n                    {{ i18nText('simulator.controls.common.current', 'Current:') }}\n                  </div>\n                  <div\n                    class=\"impact-value\"\n                    :class=\"validSpendingFactors[category.id] > 100 ? 'text-green-600' : validSpendingFactors[category.id] < 100 ? 'text-red-600' : 'text-gray-600'\"\n                  >\n                    ${{ formatAmount(category.baseAmount * validSpendingFactors[category.id] / 100) }}B\n                    ({{ validSpendingFactors[category.id] > 100 ? '+' : '' }}{{ (validSpendingFactors[category.id] - 100).toFixed(0) }}%)\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CategoryGroup>\n\n        <!-- Other Categories Group -->\n        <CategoryGroup\n          :title=\"i18nText('simulator.controls.spending.groupTitle.other', 'Other Categories')\"\n          :total-amount=\"totalOtherCategories\"\n          :expanded=\"expandedGroups.otherCategories\"\n          group-id=\"otherCategories\"\n          @toggle=\"toggleGroup\"\n        >\n          <div\n            v-if=\"expandedGroups.otherCategories\"\n            class=\"w-full\"\n          >\n            <div class=\"other-categories-info\">\n              <p>{{ i18nText('simulator.controls.spending.otherIntro', 'Adjust spending for additional federal budget categories. These categories represent specialized programs and investments.') }}</p>\n            </div>\n            <div class=\"other-categories-grid\">\n              <div\n                v-for=\"group in otherCategoriesGroups.filter(g => g.id !== 'governmentOperations' && g.id !== 'loansInvestments')\"\n                :key=\"group.id\"\n                class=\"other-category-item\"\n              >\n                <div class=\"other-category-header\">\n                  <h4>{{ localizedName(group.id, 'spending', group.name) }}</h4>\n                  <div class=\"other-category-base\">\n                    {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatAmount(group.baseAmount) }}B\n                    <CategoryInfo\n                      :name=\"localizedName(group.id, 'spending', group.name)\"\n                      :description=\"localizedDescription(group.id, 'spending', group.description || '')\"\n                      :base-amount=\"group.baseAmount\"\n                      :current-setting=\"validSpendingFactors[group.id]\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                </div>\n                <div class=\"other-category-content\">\n                  <div class=\"other-category-controls\">\n                    <PercentageInput\n                      :id=\"`spending-${group.id}`\"\n                      :model-value=\"validSpendingFactors[group.id]\"\n                      :disabled=\"autoBalanceActive\"\n                      :base-amount=\"group.baseAmount\"\n                      class=\"other-category-percentage-input\"\n                      @update:model-value=\"updateCategoryAdjustment(group.id, $event)\"\n                    />\n                    <button \n                      class=\"reset-button\" \n                      :title=\"i18nText('simulator.controls.common.resetTooltip', 'Reset to baseline')\"\n                      @click=\"updateCategoryAdjustment(group.id, 100)\"\n                    >\n                      <span\n                        class=\"material-icons\"\n                        style=\"font-size: 14px;\"\n                      >restart_alt</span>\n                    </button>\n                  </div>\n                  <div class=\"other-category-impact\">\n                    <div class=\"impact-label\">\n                      {{ i18nText('simulator.controls.common.current', 'Current:') }}\n                    </div>\n                    <div\n                      class=\"impact-value\"\n                      :class=\"validSpendingFactors[group.id] > 100 ? 'text-green-600' : validSpendingFactors[group.id] < 100 ? 'text-red-600' : 'text-gray-600'\"\n                    >\n                      ${{ formatAmount(group.baseAmount * validSpendingFactors[group.id] / 100) }}B\n                      ({{ validSpendingFactors[group.id] > 100 ? '+' : '' }}{{ (validSpendingFactors[group.id] - 100).toFixed(0) }}%)\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Subcategories in a separate grid below -->\n            <div class=\"mt-4 w-full\">\n              <h4 class=\"text-sm font-medium text-gray-700 mb-2\">\n                {{ i18nText('simulator.controls.spending.subcategoriesTitle', 'Subcategories') }}\n              </h4>\n              <div class=\"grid grid-cols-1 gap-4 w-full\">\n                <!-- Display Loans, Investments & Advances subcategories -->\n                <div class=\"w-full mb-4\">\n                  <div class=\"text-sm font-medium text-gray-700 mb-3 border-b border-gray-200 pb-1\">\n                    {{ i18nText('simulator.controls.spending.loansSubTitle', 'Loans, Investments & Advances Subcategories') }}\n                  </div>\n                  <div class=\"subcategories-grid\">\n                    <div\n                      v-for=\"child in getGroupChildren('loansInvestments')\"\n                      :key=\"child.id\"\n                      class=\"subcategory-item\"\n                    >\n                      <div class=\"subcategory-header\">\n                        <h4>{{ localizedName(child.id, 'spending.subcategories', child.name) }}</h4>\n                        <div class=\"subcategory-base\">\n                          {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatAmount(child.baseAmount) }}B\n                          <CategoryInfo\n                            :name=\"localizedName(child.id, 'spending.subcategories', child.name)\"\n                            :description=\"localizedDescription(child.id, 'spending.subcategories', child.description || '')\"\n                            :base-amount=\"child.baseAmount\"\n                            :current-setting=\"validSpendingFactors[child.id]\"\n                            @show-tooltip=\"showTooltip\"\n                            @hide-tooltip=\"hideTooltip\"\n                          />\n                        </div>\n                      </div>\n                      <div class=\"subcategory-content\">\n                        <div class=\"subcategory-controls\">\n                          <PercentageInput\n                            :id=\"`spending-${child.id}`\"\n                            :model-value=\"validSpendingFactors[child.id]\"\n                            :disabled=\"autoBalanceActive\"\n                            :base-amount=\"child.baseAmount\"\n                            class=\"subcategory-percentage-input\"\n                            @update:model-value=\"updateCategoryAdjustment(child.id, $event)\"\n                          />\n                          <button \n                            class=\"reset-button\" \n                            :title=\"i18nText('simulator.controls.common.resetTooltip', 'Reset to baseline')\"\n                            @click=\"updateCategoryAdjustment(child.id, 100)\"\n                          >\n                            <span\n                              class=\"material-icons\"\n                              style=\"font-size: 14px;\"\n                            >restart_alt</span>\n                          </button>\n                        </div>\n                        <div class=\"subcategory-impact\">\n                          <div class=\"impact-label\">\n                            {{ i18nText('simulator.controls.common.current', 'Current:') }}\n                          </div>\n                          <div\n                            class=\"impact-value\"\n                            :class=\"validSpendingFactors[child.id] > 100 ? 'text-green-600' : validSpendingFactors[child.id] < 100 ? 'text-red-600' : 'text-gray-600'\"\n                          >\n                            ${{ formatAmount(child.baseAmount * validSpendingFactors[child.id] / 100) }}B\n                            ({{ validSpendingFactors[child.id] > 100 ? '+' : '' }}{{ (validSpendingFactors[child.id] - 100).toFixed(0) }}%)\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n                <!-- Add other groups with subcategories here if needed -->\n              </div>\n            </div>\n            \n            <!-- {{ i18nText('simulator.controls.common.reset', 'Reset') }} button for Other Categories -->\n            <div class=\"mt-2 flex justify-end\">\n              <button\n                class=\"action-button reset-button\"\n                @click=\"resetOtherCategories\"\n              >\n                {{ i18nText('simulator.controls.common.reset', 'Reset') }} Other Categories\n              </button>\n            </div>\n          </div>\n        </CategoryGroup>\n\n        <!-- Government Operations Group -->\n        <CategoryGroup\n          :title=\"i18nText('simulator.controls.spending.groupTitle.governmentOperations', 'Government Operations')\"\n          :total-amount=\"totalGovOps\"\n          :expanded=\"expandedGroups.governmentOperations\"\n          group-id=\"governmentOperations\"\n          @toggle=\"toggleGroup\"\n        >\n          <div\n            v-if=\"expandedGroups.governmentOperations\"\n            class=\"w-full\"\n          >\n            <div class=\"gov-ops-info mb-3\">\n              <p>{{ i18nText('simulator.controls.spending.governmentOperationsIntro', 'Government operations include administrative functions, transfers, and other essential government services.') }}</p>\n            </div>\n            \n            <div class=\"gov-ops-grid\">\n              <div\n                v-for=\"child in sortedGovOpsChildren\"\n                :key=\"child.id\"\n                class=\"gov-ops-item\"\n              >\n                <div class=\"gov-ops-header\">\n                  <h4 :title=\"localizedName(child.id, 'spending.subcategories', child.name)\">\n                    {{ localizedName(child.id, 'spending.subcategories', child.name) }}\n                  </h4>\n                  <div class=\"gov-ops-base\">\n                    {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatAmount(child.baseAmount) }}B\n                    <CategoryInfo\n                      :name=\"localizedName(child.id, 'spending.subcategories', child.name)\"\n                      :description=\"localizedDescription(child.id, 'spending.subcategories', child.description || '')\"\n                      :base-amount=\"child.baseAmount\"\n                      :current-setting=\"validSpendingFactors[child.id]\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                </div>\n                <div class=\"gov-ops-content\">\n                  <div\n                    v-if=\"child.description\"\n                    class=\"gov-ops-description\"\n                  >\n                    {{ localizedDescription(child.id, 'spending.subcategories', child.description || '') }}\n                  </div>\n                  <div class=\"gov-ops-controls\">\n                    <PercentageInput\n                      :id=\"`spending-${child.id}`\"\n                      :model-value=\"validSpendingFactors[child.id]\"\n                      :disabled=\"autoBalanceActive\"\n                      :base-amount=\"child.baseAmount\"\n                      class=\"gov-ops-percentage-input\"\n                      @update:model-value=\"updateCategoryAdjustment(child.id, $event)\"\n                    />\n                    <button \n                      class=\"reset-button gov-ops-reset\" \n                      :title=\"i18nText('simulator.controls.common.resetTooltip', 'Reset to baseline')\"\n                      @click=\"updateCategoryAdjustment(child.id, 100)\"\n                    >\n                      <span\n                        class=\"material-icons\"\n                        style=\"font-size: 14px;\"\n                      >restart_alt</span>\n                    </button>\n                  </div>\n                  <div class=\"gov-ops-impact\">\n                    <div class=\"impact-label\">\n                      {{ i18nText('simulator.controls.common.current', 'Current:') }}\n                    </div>\n                    <div\n                      class=\"impact-value\"\n                      :class=\"validSpendingFactors[child.id] > 100 ? 'text-green-600' : validSpendingFactors[child.id] < 100 ? 'text-red-600' : 'text-gray-600'\"\n                    >\n                      ${{ formatAmount(child.baseAmount * validSpendingFactors[child.id] / 100) }}B\n                      ({{ validSpendingFactors[child.id] > 100 ? '+' : '' }}{{ (validSpendingFactors[child.id] - 100).toFixed(0) }}%)\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <!-- {{ i18nText('simulator.controls.common.reset', 'Reset') }} button for Government Operations -->\n            <div class=\"mt-4 flex justify-end\">\n              <button\n                class=\"action-button reset-button\"\n                @click=\"resetGovernmentOperations\"\n              >\n                {{ i18nText('simulator.controls.common.reset', 'Reset') }} Government Ops\n              </button>\n            </div>\n          </div>\n        </CategoryGroup>\n\n        <!-- Tax Expenditures / Tax Credits Group -->\n        <CategoryGroup\n          :title=\"i18nText('simulator.controls.spending.groupTitle.taxExpenditures', 'Tax Expenditures / Tax Credits')\"\n          :total-amount=\"totalTaxExpenditures\"\n          :expanded=\"expandedGroups.taxExpenditures\"\n          group-id=\"taxExpenditures\"\n          @toggle=\"toggleGroup\"\n        >\n          <div class=\"tax-expenditures-info\">\n            <p>{{ i18nText('simulator.controls.spending.taxExpendituresIntro', 'Adjust tax credits and deductions to see their impact on federal revenue. Reducing credits increases revenue, while expanding them decreases revenue.') }}</p>\n          </div>\n          <div class=\"tax-expenditures-grid\">\n            <div\n              v-for=\"expenditure in taxExpendituresArray\"\n              :key=\"expenditure.id\"\n              class=\"tax-expenditure-item\"\n            >\n              <div class=\"tax-expenditure-header\">\n                <h4>{{ localizedName(expenditure.id, 'taxExpenditures', expenditure.name) }}</h4>\n                <div class=\"tax-expenditure-base\">\n                  {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatAmount(expenditure.netAmount) }}B\n                  <CategoryInfo\n                    :name=\"localizedName(expenditure.id, 'taxExpenditures', expenditure.name)\"\n                    :description=\"localizedDescription(expenditure.id, 'taxExpenditures', expenditure.description || t('tooltips.noDescriptionAvailable', 'No description available.'))\"\n                    :base-amount=\"expenditure.netAmount\"\n                    :current-setting=\"expenditure.adjustmentFactor\"\n                    @show-tooltip=\"showTooltip\"\n                    @hide-tooltip=\"hideTooltip\"\n                  />\n                </div>\n              </div>\n              <div class=\"tax-expenditure-content\">\n                <div class=\"tax-expenditure-description\">\n                  {{ localizedDescription(expenditure.id, 'taxExpenditures', expenditure.description || '') }}\n                </div>\n                <div class=\"tax-expenditure-controls\">\n                  <PercentageInput\n                    :model-value=\"expenditure.adjustmentFactor\"\n                    :min=\"expenditure.minAdjustment\"\n                    :max=\"expenditure.maxAdjustment\"\n                    :base-amount=\"expenditure.netAmount\"\n                    @update:model-value=\"handleTaxExpenditureUpdate(expenditure.id, $event)\"\n                  />\n                  <button \n                    class=\"reset-button\" \n                    :title=\"i18nText('simulator.controls.common.resetTooltip', 'Reset to baseline')\"\n                    @click=\"resetTaxExpenditure(expenditure.id)\"\n                  >\n                    {{ i18nText('simulator.controls.common.reset', 'Reset') }}\n                  </button>\n                </div>\n                <div class=\"tax-expenditure-impact\">\n                  <div class=\"impact-label\">\n                    {{ t('simulator.common.revenueImpact') }}:\n                  </div>\n                  <div\n                    class=\"impact-value\"\n                    :class=\"getImpactClass(expenditure)\"\n                  >\n                    {{ getImpactPrefix(expenditure) }}${{ formatAmount(calculateImpact(expenditure)) }}B\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"tax-expenditures-summary\">\n            <div class=\"summary-header\">\n              <h4>{{ t('simulator.common.totalImpactOnRevenue') }}</h4>\n              <button\n                class=\"reset-all-button\"\n                @click=\"resetAllTaxExpenditures\"\n              >\n                {{ i18nText('simulator.controls.common.reset', 'Reset') }} All\n              </button>\n            </div>\n            <div class=\"stacked-bar\">\n              <div \n                v-for=\"expenditure in taxExpendituresArray\" \n                :key=\"expenditure.id\"\n                class=\"stacked-bar-segment\"\n                :style=\"{ \n                  width: `${getImpactPercentage(expenditure)}%`, \n                  backgroundColor: expenditure.color,\n                  marginLeft: getImpactPercentage(expenditure) < 0 ? 'auto' : '0'\n                }\"\n                :title=\"`${localizedName(expenditure.id, 'taxExpenditures', expenditure.name)}: ${getImpactPrefix(expenditure)}$${formatAmount(calculateImpact(expenditure))}B`\"\n              />\n            </div>\n            <div class=\"summary-total\">\n              <span>{{ t('simulator.common.netRevenueChange') }}:</span>\n              <span :class=\"getTotalImpactClass()\">\n                {{ getTotalImpactPrefix() }}${{ formatAmount(Math.abs(budgetStore.taxExpenditureRevenueImpact)) }}B\n              </span>\n            </div>\n          </div>\n        </CategoryGroup>\n\n        <!-- Total Spending Summary -->\n        <div class=\"mt-4 p-3 bg-gray-100 rounded-md w-full\">\n          <div class=\"flex justify-between items-center\">\n            <span class=\"text-sm font-semibold text-gray-800\">{{ t('simulator.common.totalSpending') }}:</span>\n            <span class=\"text-sm font-semibold text-red-600\">{{ formatCurrency(totalSpending) }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <Teleport to=\"body\">\n    <div \n      v-if=\"activeTooltip\"\n      class=\"tooltip-text\"\n      :style=\"{ \n        visibility: activeTooltip ? 'visible' : 'hidden',\n        opacity: activeTooltip ? 1 : 0\n      }\"\n    >\n      {{ activeTooltip }}\n    </div>\n  </Teleport>\n</template>\n\n<script setup>\nimport { computed, defineEmits, defineProps, ref } from 'vue';\nimport { useI18n, getCategoryName, getCategoryDescription } from '@/i18n'\nimport { useBudgetSimulatorStore } from '@/domains/budget/store/budgetSimulator';\nimport CategoryGroup from './CategoryGroup.vue';\n// eslint-disable-next-line no-unused-vars\nimport SpendingCategory from './SpendingCategory.vue';\nimport PercentageInput from './PercentageInput.vue';\nimport CategoryInfo from './BudgetCategoryInfo.vue';\nimport { createDebouncedFunction } from '@/utils/debounceUtils';\nimport LoadingIndicator from '@/components/LoadingIndicator.vue';\n\n// Define props\nconst props = defineProps({\n  mainCategories: {\n    type: Array,\n    default: () => []\n  },\n  otherCategoriesGroups: {\n    type: Array,\n    default: () => []\n  },\n  sortedGovOpsChildren: {\n    type: Array,\n    default: () => []\n  },\n  spendingFactors: {\n    type: Object,\n    default: () => ({})\n  },\n  autoBalanceActive: {\n    type: Boolean,\n    default: false\n  },\n  expandedGroups: {\n    type: Object,\n    default: () => ({\n      mainCategories: true,\n      otherCategories: false,\n      governmentOperations: false,\n      taxExpenditures: true\n    })\n  },\n  totalMainCategories: {\n    type: Number,\n    default: 0\n  },\n  totalOtherCategories: {\n    type: Number,\n    default: 0\n  },\n  totalGovOps: {\n    type: Number,\n    default: 0\n  },\n  totalSpending: {\n    type: Number,\n    default: 0\n  },\n  getGroupChildren: {\n    type: Function,\n    default: () => []\n  },\n  taxExpenditures: {\n    type: Object,\n    default: () => ({})\n  },\n  totalTaxExpenditures: {\n    type: Number,\n    default: 0\n  },\n  taxExpenditureRevenueImpact: {\n    type: Number,\n    default: 0\n  }\n});\n\nconst emit = defineEmits([\n  'update-spending-factor',\n  'update-group-spending-factor',\n  'toggle-group-expansion',\n  'reset-gov-ops',\n  'reset-other-categories',\n  'update-tax-expenditure-adjustment',\n  'reset-tax-expenditure',\n  'reset-all-tax-expenditures'\n]);\n\n// Use store for additional data if needed\nconst budgetStore = useBudgetSimulatorStore();\nconst { t } = useI18n();\n\nconst localizedName = (id, type = 'spending', fallback = '') =>\n  getCategoryName(id, type) || fallback || id\nconst localizedDescription = (id, type = 'spending', fallback = '') =>\n  getCategoryDescription(id, type) || fallback\n\nconst i18nText = (key, fallback = '') => {\n  const value = t(key)\n  return value == key ? fallback : value\n};\n\n// Add loading state\nconst isUpdating = ref(false);\n\n// Create debounced update function\nconst debouncedUpdateCategory = createDebouncedFunction((categoryId, value) => {\n  isUpdating.value = true;\n  try {\n    const factor = value / 100;\n    budgetStore.updateSpendingFactor(categoryId, factor);\n    \n    // Emit the event for backward compatibility\n    emit('update-spending-factor', categoryId, value);\n  } finally {\n    isUpdating.value = false;\n  }\n}, 200);\n\n// Ensure we have valid spending factors for all categories\nconst validSpendingFactors = computed(() => {\n  const result = { ...props.spendingFactors };\n  \n  // Initialize spending factors for main categories if missing\n  mainCategoriesList.value.forEach(category => {\n    if (result[category.id] === undefined) {\n      result[category.id] = 100; // Default to 100%\n    }\n  });\n  \n  // Initialize spending factors for other categories if missing\n  if (props.otherCategoriesGroups) {\n    props.otherCategoriesGroups.forEach(group => {\n      if (result[group.id] === undefined) {\n        result[group.id] = 100; // Default to 100%\n      }\n      \n      // Also initialize for children\n      // Use props.getGroupChildren which is passed from the parent component\n      const children = props.getGroupChildren(group.id);\n      if (children) {\n        children.forEach(child => {\n          if (result[child.id] === undefined) {\n            result[child.id] = 100; // Default to 100%\n          }\n        });\n      }\n    });\n  }\n  \n  // Initialize spending factors for government operations if missing\n  if (props.sortedGovOpsChildren) {\n    props.sortedGovOpsChildren.forEach(child => {\n      if (result[child.id] === undefined) {\n        result[child.id] = 100; // Default to 100%\n      }\n    });\n  }\n  \n  return result;\n});\n\n// Convert tax expenditures object to array for v-for\nconst taxExpendituresArray = computed(() => {\n  // Log the tax expenditures to debug\n  console.log('Tax Expenditures in SpendingControls:', props.taxExpenditures);\n  \n  // If props.taxExpenditures is empty or undefined, use the store directly\n  if (!props.taxExpenditures || Object.keys(props.taxExpenditures).length === 0) {\n    console.log('Using store tax expenditures directly');\n    return Object.values(budgetStore.taxExpenditures);\n  }\n  \n  return Object.values(props.taxExpenditures);\n});\n\n// Use props or fallback to store data\nconst mainCategoriesList = computed(() => {\n  let categories = props.mainCategories && props.mainCategories.length > 0 \n    ? props.mainCategories \n    : Object.values(budgetStore.spendingCategories).filter(category => category.group === 'main');\n  \n  // Filter out Loans, Investments & Advances and Government Operations\n  return categories.filter(category => \n    category.id !== 'loansInvestments' && \n    category.id !== 'governmentOperations');\n});\n\n// eslint-disable-next-line no-unused-vars\nconst otherCategoriesList = computed(() => {\n  return props.otherCategoriesGroups && props.otherCategoriesGroups.length > 0\n    ? props.otherCategoriesGroups\n    : Object.values(budgetStore.spendingCategories).filter(category => category.group === 'other');\n});\n\n// Methods\nfunction toggleGroup(groupId) {\n  emit('toggle-group-expansion', groupId);\n}\n\n// Enhanced update function with loading state and debouncing\nfunction updateCategoryAdjustment(categoryId, value) {\n  console.log('SpendingControls: updateCategoryAdjustment called with', categoryId, value);\n  \n  // Add a reactivity trigger\n  budgetStore.lastUpdate = Date.now();\n  \n  // Use debounced update\n  debouncedUpdateCategory(categoryId, value);\n}\n\nfunction resetOtherCategories() {\n  console.log('SpendingControls: resetOtherCategories called');\n  // {{ i18nText('simulator.controls.common.reset', 'Reset') }} all other categories directly in the store\n  Object.values(budgetStore.spendingCategories)\n    .filter(category => category.group === 'other' && !category.isGroup)\n    .forEach(category => {\n      budgetStore.updateSpendingFactor(category.id, 1);\n    });\n  \n  // Also reset any group children\n  Object.values(budgetStore.spendingCategories)\n    .filter(category => category.isGroup && category.id !== 'governmentOperations')\n    .forEach(group => {\n      if (group.children) {\n        Object.values(group.children).forEach(child => {\n          budgetStore.updateSpendingFactor(child.id, 1);\n        });\n      }\n    });\n  \n  // Emit the event for backward compatibility\n  emit('reset-other-categories');\n}\n\nfunction resetGovernmentOperations() {\n  console.log('SpendingControls: resetGovernmentOperations called');\n  // {{ i18nText('simulator.controls.common.reset', 'Reset') }} government operations directly in the store\n  const govOps = budgetStore.spendingCategories.governmentOperations;\n  if (govOps && govOps.children) {\n    Object.values(govOps.children).forEach(child => {\n      budgetStore.updateSpendingFactor(child.id, 1);\n    });\n  }\n  \n  // Also emit the event for backward compatibility\n  emit('reset-gov-ops');\n}\n\nfunction handleTaxExpenditureUpdate(expenditureId, value) {\n  console.log('SpendingControls: handleTaxExpenditureUpdate called with', expenditureId, value);\n  // Only use direct store update for simplicity and to avoid conflicts\n  budgetStore.updateTaxExpenditureAdjustment(expenditureId, value);\n}\n\nfunction resetTaxExpenditure(expenditureId) {\n  console.log('SpendingControls: resetTaxExpenditure called with', expenditureId);\n  // Only use direct store update for simplicity and to avoid conflicts\n  budgetStore.updateTaxExpenditureAdjustment(expenditureId, 0);\n}\n\nfunction resetAllTaxExpenditures() {\n  console.log('SpendingControls: resetAllTaxExpenditures called');\n  // Only use direct store update for simplicity and to avoid conflicts\n  budgetStore.resetTaxExpenditures();\n}\n\nfunction formatCurrency(value) {\n  return '$' + value.toFixed(1) + 'B';\n}\n\nfunction formatAmount(amount) {\n  // Handle undefined, null, or non-numeric values\n  if (amount === undefined || amount === null || isNaN(amount)) {\n    return '0.0';\n  }\n  return amount.toFixed(1);\n}\n\nfunction calculateImpact(expenditure) {\n  // Inverse relationship: negative adjustment means increased revenue\n  return -1 * expenditure.netAmount * (expenditure.adjustmentFactor / 100);\n}\n\nfunction getImpactClass(expenditure) {\n  // Negative adjustment factor means more revenue (positive impact)\n  return expenditure.adjustmentFactor <= 0 ? 'positive-impact' : 'negative-impact';\n}\n\nfunction getImpactPrefix(expenditure) {\n  // Negative adjustment factor means more revenue (positive impact)\n  return expenditure.adjustmentFactor <= 0 ? '+' : '-';\n}\n\nfunction getImpactPercentage(expenditure) {\n  // Calculate the percentage of this expenditure's impact relative to the total\n  const impact = calculateImpact(expenditure);\n  const totalImpact = Math.abs(props.taxExpenditureRevenueImpact);\n  \n  if (totalImpact === 0) return 0;\n  \n  // Return the percentage (positive or negative)\n  return (impact / totalImpact) * 100 * (impact >= 0 ? 1 : -1);\n}\n\nfunction getTotalImpactClass() {\n  // For total impact, positive value means increased revenue (positive impact)\n  return budgetStore.taxExpenditureRevenueImpact >= 0 ? 'positive-impact' : 'negative-impact';\n}\n\nfunction getTotalImpactPrefix() {\n  // For total impact, positive value means increased revenue (positive impact)\n  return budgetStore.taxExpenditureRevenueImpact >= 0 ? '+' : '-';\n}\n\nconst activeTooltip = ref('');\n\nfunction showTooltip(text) {\n  activeTooltip.value = text;\n}\n\nfunction hideTooltip() {\n  activeTooltip.value = '';\n}\n</script>\n\n<style scoped>\n/* Global crisp rendering improvements */\n* {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.simulator-card {\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: \n    0 10px 20px rgba(0, 0, 0, 0.19),\n    0 6px 6px rgba(0, 0, 0, 0.23);\n  overflow: hidden;\n  transition: box-shadow 0.3s ease, transform 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  min-height: 1440px;\n  /* Improve crispness */\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n}\n\n.simulator-card:hover {\n  transform: translateY(-5px);\n  box-shadow: \n    0 15px 30px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.card-title, .card-content, .main-category-header, .main-category-item, .other-category-header, .other-category-item, .subcategory-header, .subcategory-item, .gov-ops-header, .gov-ops-item, .tax-expenditure-header, .tax-expenditure-item, .impact-value, .reset-button {\n  word-break: break-word;\n  white-space: normal;\n  /* Improve text crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.card-title {\n  display: flex;\n  align-items: center;\n  padding: 1.25rem 1.5rem 1rem 1.5rem;\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #e9ecef;\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: #2d3748;\n  transition: color 0.3s ease;\n  position: relative;\n  z-index: 2;\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n  border-top-left-radius: 0.5rem;\n  border-top-right-radius: 0.5rem;\n  box-shadow: none;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.card-title .icon {\n  margin-right: 0.75rem;\n  font-size: 1.5rem;\n  color: #4263eb;\n}\n\n.card-content {\n  padding: 1rem;\n  transition: none;\n  flex-grow: 1;\n  position: relative;\n  z-index: 0;\n}\n\n.action-button {\n  padding: 0.5rem 1rem;\n  background: #3498db;\n  color: white;\n  border: none;\n  border-radius: 0.375rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.action-button:hover {\n  background: #2980b9;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n\n.reset-button {\n  padding: 0.35rem 0.7rem;\n  background-color: #edf2f7;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.23rem;\n  font-size: 0.81rem;\n  color: #4a5568;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.reset-button:hover {\n  background-color: #e2e8f0;\n}\n\n.tax-expenditures-info,\n.main-categories-info,\n.other-categories-info {\n  margin-bottom: 1.3rem;\n  padding: 0.65rem;\n  background-color: #f8fafc;\n  border-radius: 0.21rem;\n  font-size: 0.78rem;\n  color: #4a5568;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tax-expenditures-grid,\n.main-categories-grid,\n.other-categories-grid,\n.subcategories-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(259px, 1fr));\n  gap: 1.3rem;\n  margin-bottom: 1.3rem;\n}\n\n.tax-expenditure-item,\n.main-category-item,\n.other-category-item,\n.subcategory-item,\n.gov-ops-item {\n  border: 1px solid #e2e8f0;\n  border-radius: 0.33rem;\n  overflow: hidden;\n  transition: background-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;\n  /* Improve crispness */\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n  background-color: white;\n}\n\n.tax-expenditure-item:hover,\n.main-category-item:hover,\n.other-category-item:hover,\n.subcategory-item:hover,\n.gov-ops-item:hover {\n  transform: translateY(-2px);\n  box-shadow: \n    0 6px 8px rgba(0, 0, 0, 0.12),\n    0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n.tax-expenditure-header,\n.main-category-header,\n.other-category-header,\n.subcategory-header,\n.gov-ops-header {\n  background-color: #f8fafc;\n  padding: 0.65rem 0.86rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: color 0.3s ease;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tax-expenditure-header h4,\n.main-category-header h4,\n.other-category-header h4,\n.subcategory-header h4,\n.gov-ops-header h4 {\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #2d3748;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tax-expenditure-base,\n.main-category-base,\n.other-category-base,\n.subcategory-base,\n.gov-ops-base {\n  font-size: 0.875rem;\n  color: #4a5568;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tooltip-container {\n  position: relative;\n  display: inline-block;\n}\n\n.tooltip-container:hover {\n  cursor: help;\n}\n\n.tooltip-text {\n  width: 250px;\n  background-color: #2d3748;\n  color: #fff;\n  text-align: left;\n  border-radius: 6px;\n  padding: 8px 12px;\n  position: fixed;\n  z-index: 9999;\n  bottom: 20px;\n  left: 20px;\n  transition: opacity 0.3s;\n  font-size: 0.85rem;\n  pointer-events: none;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  white-space: pre-line;\n  word-wrap: break-word;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tooltip-text::after {\n  content: \"\";\n  position: absolute;\n  top: -10px;\n  left: 20px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: transparent transparent #2d3748 transparent;\n}\n\n.tax-expenditure-content,\n.main-category-content,\n.other-category-content,\n.subcategory-content,\n.gov-ops-content {\n  padding: 0.86rem;\n  transition: none;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tax-expenditure-description,\n.main-category-description,\n.other-category-description,\n.subcategory-description,\n.gov-ops-description {\n  font-size: 0.75rem;\n  color: #4a5568;\n  margin-bottom: 0.86rem;\n  min-height: 3.46rem;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tax-expenditure-controls,\n.main-category-controls,\n.other-category-controls,\n.subcategory-controls,\n.gov-ops-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.44rem;\n  margin-bottom: 0.86rem;\n}\n\n.reset-button {\n  padding: 0.35rem 0.7rem;\n  background-color: #edf2f7;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.23rem;\n  font-size: 0.81rem;\n  color: #4a5568;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.reset-button:hover {\n  background-color: #e2e8f0;\n}\n\n.tax-expenditure-impact,\n.main-category-impact,\n.other-category-impact,\n.subcategory-impact,\n.gov-ops-impact {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 0.75rem;\n  color: #4a5568;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.impact-label {\n  color: #4a5568;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.positive-impact {\n  color: #38a169;\n  font-weight: 600;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.negative-impact {\n  color: #e53e3e;\n  font-weight: 600;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n/* Government Operations Styles */\n.gov-ops-info {\n  background-color: #f8fafc;\n  border-radius: 0.375rem;\n  padding: 0.75rem 1rem;\n  margin-bottom: 1rem;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-info p {\n  margin: 0;\n  font-size: 0.875rem;\n  color: #4a5568;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(202px, 1fr));\n  gap: 0.86rem;\n}\n\n.gov-ops-item {\n  border: 1px solid #e2e8f0;\n  border-radius: 0.35rem;\n  overflow: hidden;\n  /* Improve crispness */\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n  background-color: white;\n}\n\n.gov-ops-header {\n  background-color: #f8fafc;\n  padding: 0.65rem 0.86rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-header h4 {\n  margin: 0;\n  font-size: 0.82rem;\n  font-weight: 600;\n  color: #2d3748;\n  max-width: 70%;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-base {\n  font-size: 0.73rem;\n  color: #4a5568;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  gap: 0.21rem;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-content {\n  padding: 1rem;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-description {\n  font-size: 0.73rem;\n  color: #4a5568;\n  margin-bottom: 0.86rem;\n  max-height: 3.9rem;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  line-clamp: 3;\n  -webkit-box-orient: vertical;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-controls {\n  display: flex;\n  align-items: center;\n  gap: 0.47rem;\n  margin-bottom: 0.75rem;\n}\n\n.gov-ops-percentage-input {\n  flex: 1;\n}\n\n.gov-ops-reset {\n  padding: 0.21rem;\n  min-width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #edf2f7;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.23rem;\n  color: #4a5568;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.gov-ops-reset:hover {\n  background-color: #e2e8f0;\n}\n\n.gov-ops-impact {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 0.85rem;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.tax-expenditures-summary {\n  background-color: #f8fafc;\n  border-radius: 0.375rem;\n  padding: 1rem;\n  margin-top: 1rem;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.summary-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.75rem;\n}\n\n.summary-header h4 {\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #2d3748;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.reset-all-button {\n  padding: 0.35rem 0.7rem;\n  background-color: #edf2f7;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.23rem;\n  font-size: 0.81rem;\n  color: #4a5568;\n  cursor: pointer;\n  transition: background-color 0.2s;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.reset-all-button:hover {\n  background-color: #e2e8f0;\n}\n\n.stacked-bar {\n  height: 1.5rem;\n  background-color: #e2e8f0;\n  border-radius: 0.25rem;\n  margin-bottom: 0.75rem;\n  display: flex;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.stacked-bar-segment {\n  height: 100%;\n  transition: width 0.3s ease;\n}\n\n.summary-total {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 600;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.spending-controls {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 1rem;\n  box-shadow: \n    0 10px 20px rgba(0, 0, 0, 0.19),\n    0 6px 6px rgba(0, 0, 0, 0.23);\n  backdrop-filter: blur(10px);\n  transition: box-shadow 0.3s ease, transform 0.3s ease;\n  contain: content;\n  /* Improve crispness */\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n}\n\n.spending-controls:hover {\n  transform: translateY(-5px);\n  box-shadow: \n    0 15px 30px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.spending-group {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 1.25rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.1),\n    0 2px 4px rgba(0, 0, 0, 0.06);\n  transition: box-shadow 0.3s ease, transform 0.2s ease;\n  /* Improve crispness */\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n}\n\n.spending-group:hover {\n  transform: translateY(-2px);\n  box-shadow: \n    0 6px 8px rgba(0, 0, 0, 0.12),\n    0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n.group-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 1rem;\n}\n\n.group-title {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #2d3748;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.group-title .material-icons {\n  color: #4299e1;\n}\n\n.group-total {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #2d3748;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.spending-items {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.spending-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  background: #f7fafc;\n  border-radius: 0.5rem;\n  transition: background-color 0.2s ease, transform 0.2s ease;\n  /* Improve crispness */\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden;\n}\n\n.spending-item:hover {\n  background: #edf2f7;\n  transform: translateY(-1px);\n}\n\n.item-info {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.item-title {\n  font-size: 1rem;\n  font-weight: 600;\n  color: #2d3748;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.item-description {\n  font-size: 0.875rem;\n  color: #4a5568;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.item-controls {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.amount-input {\n  width: 120px;\n  padding: 0.5rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.375rem;\n  font-size: 0.875rem;\n  color: #2d3748;\n  background: white;\n  transition: border-color 0.2s ease, box-shadow 0.2s ease;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n.amount-input:focus {\n  outline: none;\n  border-color: #4299e1;\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n}\n\n.amount-input:hover {\n  border-color: #4299e1;\n}\n\n.percentage-display {\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #4a5568;\n  min-width: 4rem;\n  text-align: right;\n  /* Improve crispness */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n/* Additional crispness improvements */\n.main-category-percentage-input,\n.other-category-percentage-input,\n.subcategory-percentage-input,\n.gov-ops-percentage-input {\n  /* Improve crispness for percentage inputs */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n/* Improve crispness for all text elements */\nh1, h2, h3, h4, h5, h6, p, span, div, label, input, button, select, textarea {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n}\n\n/* Reduce blur effects that might cause graininess */\n.simulator-card,\n.tax-expenditure-item,\n.main-category-item,\n.other-category-item,\n.subcategory-item,\n.gov-ops-item {\n  filter: none;\n  -webkit-filter: none;\n}\n\n/* Improve crispness for icons */\n.material-icons {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility;\n  font-feature-settings: 'liga' 1;\n}\n\n/* Optimize for high DPI displays */\n@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n  .simulator-card,\n  .tax-expenditure-item,\n  .main-category-item,\n  .other-category-item,\n  .subcategory-item,\n  .gov-ops-item {\n    border-width: 0.5px;\n  }\n}\n\n/* Avoid forcing GPU compositing on large text containers */\n</style>\n","import script from \"./BudgetSpendingControls.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BudgetSpendingControls.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BudgetSpendingControls.vue?vue&type=style&index=0&id=53121242&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-53121242\"]])\n\nexport default __exports__","<template>\n  <div\n    class=\"year-selector\"\n    role=\"radiogroup\"\n    :aria-label=\"t('simulator.yearSelector.aria')\"\n  >\n    <button \n      role=\"radio\"\n      :aria-checked=\"currentYear === 2024\"\n      class=\"year-button\" \n      :class=\"{ active: currentYear === 2024 }\"\n      @click=\"selectYear(2024)\"\n    >\n      {{ t('simulator.yearSelector.labels.y2024') }}\n    </button>\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { useI18n } from '@/i18n'\n\nconst { t } = useI18n()\n\ndefineProps({\n  currentYear: {\n    type: Number,\n    required: true\n  }\n});\n\nconst emit = defineEmits(['year-selected']);\n\nfunction selectYear(year) {\n  emit('year-selected', year);\n}\n</script>\n\n<style scoped>\n.year-selector {\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 1.5rem;\n}\n\n.year-button {\n  padding: 0.5rem 1rem;\n  background-color: #e9ecef;\n  border: none;\n  border-radius: 0.375rem;\n  font-weight: 500;\n  color: #495057;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.year-button:hover {\n  background-color: #dee2e6;\n}\n\n.year-button.active {\n  background-color: #4263eb;\n  color: white;\n  border: 2px solid #2948c7;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n}\n</style>\n","import script from \"./BudgetYearSelector.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BudgetYearSelector.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BudgetYearSelector.vue?vue&type=style&index=0&id=e23d6acc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e23d6acc\"]])\n\nexport default __exports__","<template>\n  <div class=\"charts-panel\">\n    <!-- Revenue Sources Chart Section -->\n    <div class=\"chart-section\">\n      <div class=\"section-header\">\n        <h2 class=\"section-title\">\n          <span class=\"material-icons icon\">bar_chart</span>\n          {{ i18nText('chartsPanel.sections.revenueSources', 'Revenue Sources') }}\n        </h2>\n        <button \n          class=\"toggle-button\" \n          :aria-expanded=\"isRevenueExpanded\"\n          aria-controls=\"revenue-chart-content\"\n          @click=\"isRevenueExpanded = !isRevenueExpanded\"\n        >\n          <span class=\"material-icons\">{{ isRevenueExpanded ? 'expand_less' : 'expand_more' }}</span>\n          <span class=\"toggle-text\">{{ isRevenueExpanded ? i18nText('chartsPanel.buttons.collapse', 'Collapse') : i18nText('chartsPanel.buttons.expand', 'Expand') }}</span>\n        </button>\n      </div>\n      \n      <div \n        v-show=\"isRevenueExpanded\"\n        id=\"revenue-chart-content\"\n        class=\"chart-content\"\n        :class=\"{ 'collapsed': !isRevenueExpanded }\"\n      >\n        <!-- Display Toggle -->\n        <div class=\"display-toggle\">\n          <div class=\"toggle-group\" role=\"group\" :aria-label=\"i18nText('chartsPanel.ariaLabels.displayMode', 'Display mode')\">\n            <button \n              type=\"button\" \n              class=\"toggle-option\"\n              :class=\"{ 'active': displayMode === 'amount' }\"\n              @click=\"displayMode = 'amount'\"\n              aria-pressed=\"displayMode === 'amount'\"\n            >\n              {{ i18nText('chartsPanel.displayModes.amount', 'Amount') }}\n            </button>\n            <button \n              type=\"button\" \n              class=\"toggle-option\"\n              :class=\"{ 'active': displayMode === 'percentage' }\"\n              @click=\"displayMode = 'percentage'\"\n              aria-pressed=\"displayMode === 'percentage'\"\n            >\n              {{ i18nText('chartsPanel.displayModes.percentage', 'Percentage') }}\n            </button>\n          </div>\n        </div>\n        \n        <!-- Revenue Chart -->\n        <div class=\"chart-wrapper\">\n          <div class=\"chart-container\">\n            <Bar\n              :key=\"chartUpdateKey\"\n              :data=\"revenueChartData\"\n              :options=\"revenueChartOptions\"\n            />\n          </div>\n        </div>\n\n        <!-- Categories Legend -->\n        <div class=\"chart-legend\">\n          <!-- Income Tax Category -->\n          <div class=\"category-group\">\n            <div class=\"category-header\">\n              <span class=\"legend-color\" style=\"background-color: #2B6CB0\" aria-hidden=\"true\" />\n              <span class=\"legend-label\">{{ i18nText('chartsPanel.legend.incomeTax', \"Income Tax\") }}</span>\n              <span class=\"legend-value\">\n                <template v-if=\"displayMode === 'amount'\">\n                  ${{ (getIncomeTaxTotal() || 0).toFixed(1) }}B\n                </template>\n                <template v-else>\n                  {{ ((getIncomeTaxTotal() || 0) / (getTotalRevenue() || 1) * 100).toFixed(1) }}%\n                </template>\n              </span>\n            </div>\n            \n            <!-- Income Tax Items -->\n            <div class=\"category-items\">\n              <div\n                v-for=\"source in incomeTaxSources\"\n                :key=\"source.id\"\n                class=\"legend-item\"\n              >\n                <span class=\"legend-color\" :style=\"{ backgroundColor: source.color }\" aria-hidden=\"true\" />\n                <span class=\"legend-label\" :title=\"getCategoryName(source.id, 'revenue')\">{{ getCategoryName(source.id, 'revenue') }}</span>\n                <span class=\"legend-value\">\n                  <template v-if=\"displayMode === 'amount'\">\n                    ${{ (Number(source.adjustedAmount) || 0).toFixed(1) }}B\n                  </template>\n                  <template v-else>\n                    {{ ((Number(source.adjustedAmount) || 0) / (getTotalRevenue() || 1) * 100).toFixed(1) }}%\n                  </template>\n                </span>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Consumption Tax Category -->\n          <div class=\"category-group\">\n            <div class=\"category-header\">\n              <span class=\"legend-color\" style=\"background-color: #2F855A\" aria-hidden=\"true\" />\n              <span class=\"legend-label\">{{ i18nText('chartsPanel.legend.consumptionTax', \"Consumption Tax\") }}</span>\n              <span class=\"legend-value\">\n                <template v-if=\"displayMode === 'amount'\">\n                  ${{ (getConsumptionTaxTotal() || 0).toFixed(1) }}B\n                </template>\n                <template v-else>\n                  {{ ((getConsumptionTaxTotal() || 0) / (getTotalRevenue() || 1) * 100).toFixed(1) }}%\n                </template>\n              </span>\n            </div>\n            \n            <!-- Consumption Tax Items -->\n            <div class=\"category-items\">\n              <div\n                v-for=\"source in consumptionTaxSources\"\n                :key=\"source.id\"\n                class=\"legend-item\"\n              >\n                <span class=\"legend-color\" :style=\"{ backgroundColor: source.color }\" aria-hidden=\"true\" />\n                <span class=\"legend-label\" :title=\"getCategoryName(source.id, 'revenue')\">{{ getCategoryName(source.id, 'revenue') }}</span>\n                <span class=\"legend-value\">\n                  <template v-if=\"displayMode === 'amount'\">\n                    ${{ (Number(source.adjustedAmount) || 0).toFixed(1) }}B\n                  </template>\n                  <template v-else>\n                    {{ ((Number(source.adjustedAmount) || 0) / (getTotalRevenue() || 1) * 100).toFixed(1) }}%\n                  </template>\n                </span>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Other Revenue Category -->\n          <div class=\"category-group\">\n            <div class=\"category-header\">\n              <span class=\"legend-color\" style=\"background-color: #C05621\" aria-hidden=\"true\" />\n              <span class=\"legend-label\">{{ i18nText('chartsPanel.legend.otherRevenue', \"Other Revenue Sources\") }}</span>\n              <span class=\"legend-value\">\n                <template v-if=\"displayMode === 'amount'\">\n                  ${{ (getOtherRevenueTotal() || 0).toFixed(1) }}B\n                </template>\n                <template v-else>\n                  {{ ((getOtherRevenueTotal() || 0) / (getTotalRevenue() || 1) * 100).toFixed(1) }}%\n                </template>\n              </span>\n            </div>\n            \n            <!-- Other Revenue Items -->\n            <div class=\"category-items\">\n              <div\n                v-for=\"source in otherRevenueSources\"\n                :key=\"source.id\"\n                class=\"legend-item\"\n              >\n                <span class=\"legend-color\" :style=\"{ backgroundColor: source.color }\" aria-hidden=\"true\" />\n                <span class=\"legend-label\" :title=\"getCategoryName(source.id, 'revenue')\">{{ getCategoryName(source.id, 'revenue') }}</span>\n                <span class=\"legend-value\">\n                  <template v-if=\"displayMode === 'amount'\">\n                    ${{ (Number(source.adjustedAmount) || 0).toFixed(1) }}B\n                  </template>\n                  <template v-else>\n                    {{ ((Number(source.adjustedAmount) || 0) / (getTotalRevenue() || 1) * 100).toFixed(1) }}%\n                  </template>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Spending Breakdown Section -->\n    <div class=\"chart-section\">\n      <div class=\"section-header\">\n        <h2 class=\"section-title\">\n          <span class=\"material-icons icon\">donut_large</span>\n          Spending Breakdown\n        </h2>\n        <button \n          class=\"toggle-button\" \n          :aria-expanded=\"isSpendingExpanded\"\n          aria-controls=\"spending-chart-content\"\n          @click=\"isSpendingExpanded = !isSpendingExpanded\"\n        >\n          <span class=\"material-icons\">{{ isSpendingExpanded ? 'expand_less' : 'expand_more' }}</span>\n          <span class=\"toggle-text\">{{ isSpendingExpanded ? 'Collapse' : 'Expand' }}</span>\n        </button>\n      </div>\n      \n      <div \n        v-show=\"isSpendingExpanded\"\n        id=\"spending-chart-content\"\n        class=\"chart-content\"\n        :class=\"{ 'collapsed': !isSpendingExpanded }\"\n      >\n        <!-- Spending Pie Chart -->\n        <div class=\"chart-wrapper\">\n          <div class=\"chart-container\">\n            <SpendingPieChart \n              :dark-mode=\"false\" \n              :height=\"chartHeight\"\n              :width=\"chartWidth\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue';\nimport { useBudgetSimulatorStore } from '../store/budgetSimulator';\nimport { Bar } from 'vue-chartjs';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport SpendingPieChart from '@/domains/budget/components/SpendingPieChart.vue';\nimport { debounce } from 'lodash-es';\nimport { handleError } from '@/utils/errorHandler.js';\nimport { useI18n, getCategoryName } from '@/i18n';\n\n// i18n setup\nconst { t } = useI18n();\nconst i18nText = (key, fallback = '') => {\n  const value = t(key);\n  return value === key ? fallback : value;\n};\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst budgetStore = useBudgetSimulatorStore();\n\n// UI state\nconst isRevenueExpanded = ref(true);\nconst isSpendingExpanded = ref(true);\nconst displayMode = ref('amount');\nconst chartUpdateKey = ref(0);\nconst isMobile = ref(window.innerWidth < 768);\nconst chartHeight = computed(() => (isMobile.value ? '300px' : '350px'));\nconst chartWidth = computed(() => '100%');\nconst errorMessage = ref('');\n\n// Watch for changes in revenue sources to update chart\nwatch(() => budgetStore.revenueSources, () => {\n  chartUpdateKey.value += 1;\n}, { deep: true });\n\n// Watch for display mode changes\nwatch(displayMode, () => {\n  chartUpdateKey.value += 1;\n});\n\n// Get revenue sources data and ensure valid numeric adjustedAmount\nconst revenueSources = computed(() => {\n  return Object.values(budgetStore.revenueSources || {})\n    .filter(\n      source =>\n        source &&\n        source.id &&\n        source.name &&\n        !isNaN(Number(source.adjustedAmount))\n    )\n    .sort((a, b) => (Number(b.adjustedAmount) || 0) - (Number(a.adjustedAmount) || 0));\n});\n\n// Direct methods for calculating category totals with explicit conversion\nfunction getIncomeTaxTotal() {\n  try {\n    const personal = Number(budgetStore.revenueSources?.personalIncomeTax?.adjustedAmount) || 0;\n    const corporate = Number(budgetStore.revenueSources?.corporateIncomeTax?.adjustedAmount) || 0;\n    const total = personal + corporate;\n    return isNaN(total) ? 0 : total;\n  } catch (e) {\n    handleError(e, (msg) => errorMessage.value = msg);\n    return 0;\n  }\n}\n\nfunction getConsumptionTaxTotal() {\n  try {\n    const gst = Number(budgetStore.revenueSources?.gst?.adjustedAmount) || 0;\n    const excise = Number(budgetStore.revenueSources?.exciseTaxes?.adjustedAmount) || 0;\n    const total = gst + excise;\n    return isNaN(total) ? 0 : total;\n  } catch (e) {\n    handleError(e, (msg) => errorMessage.value = msg);\n    return 0;\n  }\n}\n\nfunction getOtherRevenueTotal() {\n  try {\n    const otherSources = Object.values(budgetStore.revenueSources || {})\n      .filter(s => s && s.id && !['personalIncomeTax', 'corporateIncomeTax', 'gst', 'exciseTaxes'].includes(s.id));\n    const total = otherSources.reduce((sum, source) => {\n      const amt = Number(source.adjustedAmount) || 0;\n      return sum + amt;\n    }, 0);\n    return isNaN(total) ? 0 : total;\n  } catch (e) {\n    handleError(e, (msg) => errorMessage.value = msg);\n    return 0;\n  }\n}\n\nfunction getTotalRevenue() {\n  try {\n    const total = Number(budgetStore.totalRevenue) || 0;\n    return total > 0 ? total : 1;\n  } catch (e) {\n    handleError(e, (msg) => errorMessage.value = msg);\n    return 1;\n  }\n}\n\n// Filtered revenue sources for categories\nconst incomeTaxSources = computed(() => {\n  return revenueSources.value.filter(s =>\n    ['personalIncomeTax', 'corporateIncomeTax'].includes(s.id)\n  );\n});\n\nconst consumptionTaxSources = computed(() => {\n  return revenueSources.value.filter(s =>\n    ['gst', 'exciseTaxes'].includes(s.id)\n  );\n});\n\nconst otherRevenueSources = computed(() => {\n  return revenueSources.value.filter(s =>\n    !['personalIncomeTax', 'corporateIncomeTax', 'gst', 'exciseTaxes'].includes(s.id)\n  );\n});\n\n// Chart data\nconst revenueChartData = computed(() => {\n  const sources = revenueSources.value;\n  const labels = sources.map(source => getCategoryName(source.id, 'revenue'));\n  const total = getTotalRevenue();\n  \n  let data;\n  if (displayMode.value === 'amount') {\n    data = sources.map(source => Number(source.adjustedAmount) || 0);\n  } else {\n    data = sources.map(source =>\n      Number(source.adjustedAmount) && total ? (Number(source.adjustedAmount) / total) * 100 : 0\n    );\n  }\n  \n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        backgroundColor: sources.map(source => source.color || '#cccccc'),\n        borderColor: sources.map(source => source.color || '#cccccc'),\n        borderWidth: 1,\n      }\n    ]\n  };\n});\n\n// Chart options with improved accessibility and responsiveness\nconst revenueChartOptions = computed(() => {\n  return {\n    indexAxis: 'y',\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: {\n      duration: 500\n    },\n    plugins: {\n      legend: { display: false },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const source = revenueSources.value[context.dataIndex];\n            if (!source) return '';\n            const amt = Number(source.adjustedAmount) || 0;\n            const total = getTotalRevenue();\n            const value = (Number(amt) || 0).toFixed(1);\n            const percentage = total ? ((amt / total) * 100).toFixed(1) : 0;\n            \n            return displayMode.value === 'amount'\n              ? `$${value}B (${percentage}% of total)`\n              : `${percentage}% ($${value}B)`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true,\n        grid: { \n          display: true, \n          drawBorder: true, \n          drawOnChartArea: true, \n          drawTicks: true,\n          color: 'rgba(0, 0, 0, 0.1)'\n        },\n        ticks: {\n          callback: function(value) {\n            return displayMode.value === 'amount' ? `$${value}B` : `${value}%`;\n          },\n          font: { \n            size: isMobile.value ? 10 : 11,\n            family: \"'Inter', sans-serif\"\n          },\n          maxRotation: 0,\n          padding: 10,\n          color: '#4A5568'\n        },\n        title: {\n          display: true,\n          text: displayMode.value === 'amount'\n            ? t('chartsPanel.axis.amountLabel')\n            : t('chartsPanel.axis.percentageLabel'),\n          font: { \n            size: isMobile.value ? 11 : 12,\n            family: \"'Inter', sans-serif\"\n          },\n          padding: { top: 10, bottom: 10 },\n          color: '#4A5568'\n        }\n      },\n      y: {\n        grid: { display: false },\n        ticks: { \n          font: { \n            size: isMobile.value ? 10 : 11,\n            family: \"'Inter', sans-serif\"\n          },\n          padding: 10,\n          color: '#4A5568',\n          callback: function(value, index) {\n            const label = this.getLabelForValue(index);\n            return label.length > 25 ? label.substring(0, 22) + '...' : label;\n          }\n        }\n      }\n    },\n    layout: {\n      padding: {\n        left: 10,\n        right: 10,\n        top: 10,\n        bottom: 10\n      }\n    }\n  };\n});\n\n// Debounced resize handler\nconst handleResize = debounce(() => {\n  isMobile.value = window.innerWidth < 768;\n  chartUpdateKey.value += 1;\n}, 250);\n\nonMounted(() => {\n  window.addEventListener('resize', handleResize);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('resize', handleResize);\n});\n</script>\n\n<style scoped>\n.charts-panel {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 1rem;\n  box-shadow: \n    0 10px 20px rgba(0, 0, 0, 0.19),\n    0 6px 6px rgba(0, 0, 0, 0.23);\n  backdrop-filter: blur(10px);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n  contain: content;\n}\n\n.charts-panel:hover {\n  transform: translateY(-5px) translateZ(0);\n  box-shadow: \n    0 15px 30px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.chart-section {\n  background: white;\n  border-radius: 0.75rem;\n  padding: 1.25rem;\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.1),\n    0 2px 4px rgba(0, 0, 0, 0.06);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n}\n\n.chart-section:hover {\n  transform: translateY(-2px) translateZ(0);\n  box-shadow: \n    0 6px 8px rgba(0, 0, 0, 0.12),\n    0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.section-title {\n  display: flex;\n  align-items: center;\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #2d3748;\n  margin: 0;\n}\n\n.section-title .icon {\n  margin-right: 0.5rem;\n  font-size: 1.25rem;\n  color: #4263eb;\n}\n\n.toggle-button {\n  display: flex;\n  align-items: center;\n  padding: 0.5rem;\n  color: #4a5568;\n  background: none;\n  border: none;\n  cursor: pointer;\n  transition: color 0.2s ease;\n}\n\n.toggle-button:hover {\n  color: #2d3748;\n}\n\n.toggle-button .material-icons {\n  font-size: 1.25rem;\n}\n\n.toggle-text {\n  font-size: 0.875rem;\n  margin-left: 0.25rem;\n}\n\n.chart-content {\n  padding: 1rem;\n  transition: all 0.3s ease;\n}\n\n.chart-content.collapsed {\n  height: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.display-toggle {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n}\n\n.toggle-group {\n  display: inline-flex;\n  border-radius: 0.375rem;\n  overflow: hidden;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.toggle-option {\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #4a5568;\n  background-color: white;\n  border: 1px solid #e2e8f0;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.toggle-option:first-child {\n  border-right: none;\n  border-top-left-radius: 0.375rem;\n  border-bottom-left-radius: 0.375rem;\n}\n\n.toggle-option:last-child {\n  border-top-right-radius: 0.375rem;\n  border-bottom-right-radius: 0.375rem;\n}\n\n.toggle-option:hover {\n  background-color: #f7fafc;\n}\n\n.toggle-option.active {\n  background-color: #4299e1;\n  color: white;\n  border-color: #4299e1;\n}\n\n.chart-wrapper {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n}\n\n.chart-container {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 300px;\n}\n\n.chart-legend {\n  margin-top: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n}\n\n.category-group {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.category-header {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.category-items {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 0.75rem;\n  padding-left: 1.5rem;\n}\n\n.legend-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  min-width: 0;\n}\n\n.legend-color {\n  width: 0.75rem;\n  height: 0.75rem;\n  border-radius: 50%;\n  flex-shrink: 0;\n}\n\n.legend-label {\n  font-size: 0.875rem;\n  color: #4a5568;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-width: 0;\n  flex: 1;\n}\n\n.legend-value {\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: #2d3748;\n  white-space: nowrap;\n  margin-left: 0.5rem;\n}\n\n.category-header .legend-label {\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.category-header .legend-color {\n  width: 1rem;\n  height: 1rem;\n}\n\n@media (max-width: 768px) {\n  .chart-section {\n    border-radius: 0.5rem;\n  }\n  \n  .section-header {\n    padding: 0.75rem;\n  }\n  \n  .section-title {\n    font-size: 1rem;\n  }\n  \n  .chart-content {\n    padding: 0.75rem;\n  }\n  \n  .category-items {\n    grid-template-columns: 1fr;\n  }\n  \n  .legend-label {\n    font-size: 0.8125rem;\n  }\n  \n  .legend-value {\n    font-size: 0.8125rem;\n  }\n  \n  .category-header .legend-label {\n    font-size: 0.9375rem;\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .chart-content,\n  .toggle-button,\n  .toggle-option {\n    transition: none;\n  }\n}\n\n@media (forced-colors: active) {\n  .chart-section {\n    border: 1px solid CanvasText;\n  }\n  \n  .section-header {\n    border-bottom: 1px solid CanvasText;\n  }\n  \n  .toggle-option {\n    border: 1px solid CanvasText;\n  }\n  \n  .legend-color {\n    border: 1px solid CanvasText;\n  }\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n</style>\n","import script from \"./ChartsPanel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartsPanel.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartsPanel.vue?vue&type=style&index=0&id=89eaf328&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-89eaf328\"]])\n\nexport default __exports__","<template>\n  <div style=\"padding: 0; background-color: white; color: #1a1a1a; width: 100%; max-width: 800px; margin: 0 auto; font-family: 'Helvetica Neue', Arial, sans-serif;\">\n    <!-- Header Section with Gradient Background -->\n    <div style=\"background: linear-gradient(135deg, #1a365d 0%, #2c5282 100%); color: white; padding: 30px 40px; margin-bottom: 30px; border-radius: 0 0 8px 8px;\">\n      <div style=\"font-size: 28px; font-weight: 700; margin-bottom: 8px; letter-spacing: -0.5px;\">\n        {{ i18nText('simulator.exportCard.header.title', 'Federal Budget Summary') }}\n      </div>\n      <div style=\"font-size: 14px; opacity: 0.9; font-weight: 300;\">\n        {{ generatedStamp }}\n      </div>\n    </div>\n\n    <!-- Budget Title and Badge -->\n    <div style=\"display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 30px; padding: 0 40px;\">\n      <h1 style=\"font-size: 24px; font-weight: 700; color: #1a365d; margin: 0;\">\n        {{ budgetTitleText }}\n      </h1>\n      <div style=\"display: flex; flex-direction: column; gap: 12px;\">\n        <div v-for=\"(badge, index) in badges\" :key=\"index\" \n             style=\"padding: 12px 16px; background-color: #FEF3C7; border: 1px solid #FCD34D; border-radius: 6px; color: #92400E; box-shadow: 0 2px 4px rgba(0,0,0,0.05);\">\n          <div style=\"font-size: 16px; font-weight: 600; margin-bottom: 4px;\">\n            {{ badge.icon }} {{ badge.title }}\n          </div>\n          <div style=\"font-size: 13px; line-height: 1.4;\">\n            {{ badge.description }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Narrative Section -->\n    <div style=\"padding: 20px; background-color: #F8FAFC; border-left: 4px solid #2c5282; margin: 0 40px 30px; border-radius: 0 6px 6px 0;\">\n      <p style=\"font-size: 15px; color: #2d3748; line-height: 1.6; margin: 0;\">\n        {{ narrative }}\n      </p>\n    </div>\n\n    <!-- Financial Summary Section -->\n    <div style=\"padding: 0 40px; margin-bottom: 30px;\">\n      <h2 style=\"font-size: 20px; font-weight: 600; color: #1a365d; margin-bottom: 20px; padding-bottom: 8px; border-bottom: 2px solid #e2e8f0;\">\n        Financial Summary\n      </h2>\n      \n      <div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 20px;\">\n        <!-- Revenue Card -->\n        <div style=\"background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.05); border: 1px solid #e2e8f0;\">\n          <div style=\"font-size: 14px; color: #64748b; margin-bottom: 8px;\">{{ i18nText('simulator.exportCard.financialSummary.cards.totalRevenue', 'Total Revenue') }}</div>\n          <div style=\"font-size: 24px; font-weight: 700; color: #1a365d;\">{{ formatCurrency(totalRevenue) }}</div>\n        </div>\n        \n        <!-- Spending Card -->\n        <div style=\"background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.05); border: 1px solid #e2e8f0;\">\n          <div style=\"font-size: 14px; color: #64748b; margin-bottom: 8px;\">{{ i18nText('simulator.exportCard.financialSummary.cards.totalSpending', 'Total Spending') }}</div>\n          <div style=\"font-size: 24px; font-weight: 700; color: #1a365d;\">{{ formatCurrency(totalSpending) }}</div>\n        </div>\n        \n        <!-- Surplus/Deficit Card -->\n        <div style=\"background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.05); border: 1px solid #e2e8f0;\">\n          <div style=\"font-size: 14px; color: #64748b; margin-bottom: 8px;\">{{ i18nText('simulator.exportCard.financialSummary.cards.surplusDeficit', 'Surplus/Deficit') }}</div>\n          <div :style=\"{\n            fontSize: '24px',\n            fontWeight: '700',\n            color: surplus >= 0 ? '#059669' : '#dc2626'\n          }\">\n            {{ formatCurrency(surplus) }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Sentiment Analysis Section (new page) -->\n    <div class=\"page-break-before\"></div>\n    <h2 style=\"font-size: 20px; font-weight: 600; color: #1a365d; margin-bottom: 20px; padding-bottom: 8px; border-bottom: 2px solid #e2e8f0;\">\n      {{ i18nText('simulator.exportCard.sentiment.title', 'Public Sentiment Analysis') }}\n    </h2>\n    <div style=\"padding: 0 40px; margin-bottom: 30px;\">\n      <!-- Provinces & Territories -->\n      <div style=\"margin-bottom: 30px;\">\n        <h3 style=\"font-size: 16px; font-weight: 600; color: #2d3748; margin-bottom: 16px;\">{{ i18nText('simulator.exportCard.sentiment.sections.provinces', 'Provinces & Territories') }}</h3>\n        <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px;\">\n          <!-- Most Positive -->\n          <div style=\"background: #F0FDF4; padding: 16px; border-radius: 8px; border: 1px solid #86EFAC;\">\n            <div style=\"font-size: 14px; color: #166534; margin-bottom: 12px; font-weight: 600;\">{{ i18nText('simulator.exportCard.sentiment.mostPositive', 'Most Positive') }}</div>\n            <div v-for=\"[province, score] in topProvinceScores.positive\" :key=\"province\" \n                 style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\">\n              <span style=\"color: #166534;\">{{ province }}</span>\n              <span style=\"color: #166534; font-weight: 600;\">{{ getSentimentEmoji(score) }} {{ getSentimentLabel(score) }}</span>\n            </div>\n          </div>\n          <!-- Most Negative -->\n          <div style=\"background: #FEF2F2; padding: 16px; border-radius: 8px; border: 1px solid #FCA5A5;\">\n            <div style=\"font-size: 14px; color: #991B1B; margin-bottom: 12px; font-weight: 600;\">{{ i18nText('simulator.exportCard.sentiment.mostNegative', 'Most Negative') }}</div>\n            <div v-for=\"[province, score] in topProvinceScores.negative\" :key=\"province\"\n                 style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\">\n              <span style=\"color: #991B1B;\">{{ province }}</span>\n              <span style=\"color: #991B1B; font-weight: 600;\">{{ getSentimentEmoji(score) }} {{ getSentimentLabel(score) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Sectors -->\n      <div style=\"margin-bottom: 30px;\">\n        <h3 style=\"font-size: 16px; font-weight: 600; color: #2d3748; margin-bottom: 16px;\">{{ i18nText('simulator.exportCard.sentiment.sections.sectors', 'Sectors') }}</h3>\n        <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px;\">\n          <!-- Most Positive -->\n          <div style=\"background: #F0FDF4; padding: 16px; border-radius: 8px; border: 1px solid #86EFAC;\">\n            <div style=\"font-size: 14px; color: #166534; margin-bottom: 12px; font-weight: 600;\">{{ i18nText('simulator.exportCard.sentiment.mostPositive', 'Most Positive') }}</div>\n            <div v-for=\"[sector, score] in topSectorScores.positive\" :key=\"sector\"\n                 style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\">\n              <span style=\"color: #166534;\">{{ sector }}</span>\n              <span style=\"color: #166534; font-weight: 600;\">{{ getSentimentEmoji(score) }} {{ getSentimentLabel(score) }}</span>\n            </div>\n          </div>\n          <!-- Most Negative -->\n          <div style=\"background: #FEF2F2; padding: 16px; border-radius: 8px; border: 1px solid #FCA5A5;\">\n            <div style=\"font-size: 14px; color: #991B1B; margin-bottom: 12px; font-weight: 600;\">{{ i18nText('simulator.exportCard.sentiment.mostNegative', 'Most Negative') }}</div>\n            <div v-for=\"[sector, score] in topSectorScores.negative\" :key=\"sector\"\n                 style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\">\n              <span style=\"color: #991B1B;\">{{ sector }}</span>\n              <span style=\"color: #991B1B; font-weight: 600;\">{{ getSentimentEmoji(score) }} {{ getSentimentLabel(score) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Demographics -->\n      <div style=\"margin-bottom: 30px;\">\n        <h3 style=\"font-size: 16px; font-weight: 600; color: #2d3748; margin-bottom: 16px;\">{{ i18nText('simulator.exportCard.sentiment.sections.demographics', 'Demographics') }}</h3>\n        <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 20px;\">\n          <!-- Most Positive -->\n          <div style=\"background: #F0FDF4; padding: 16px; border-radius: 8px; border: 1px solid #86EFAC;\">\n            <div style=\"font-size: 14px; color: #166534; margin-bottom: 12px; font-weight: 600;\">{{ i18nText('simulator.exportCard.sentiment.mostPositive', 'Most Positive') }}</div>\n            <div v-for=\"[demographic, score] in topDemographicScores.positive\" :key=\"demographic\"\n                 style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\">\n              <span style=\"color: #166534;\">{{ demographic }}</span>\n              <span style=\"color: #166534; font-weight: 600;\">{{ getSentimentEmoji(score) }} {{ getSentimentLabel(score) }}</span>\n            </div>\n          </div>\n          <!-- Most Negative -->\n          <div style=\"background: #FEF2F2; padding: 16px; border-radius: 8px; border: 1px solid #FCA5A5;\">\n            <div style=\"font-size: 14px; color: #991B1B; margin-bottom: 12px; font-weight: 600;\">{{ i18nText('simulator.exportCard.sentiment.mostNegative', 'Most Negative') }}</div>\n            <div v-for=\"[demographic, score] in topDemographicScores.negative\" :key=\"demographic\"\n                 style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;\">\n              <span style=\"color: #991B1B;\">{{ demographic }}</span>\n              <span style=\"color: #991B1B; font-weight: 600;\">{{ getSentimentEmoji(score) }} {{ getSentimentLabel(score) }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Full Budget Breakdown (if enabled) -->\n    <div v-if=\"includeFullBreakdown\" class=\"full-breakdown-table\" style=\"padding: 0 40px; margin-bottom: 30px;\">\n      <h2 style=\"font-size: 20px; font-weight: 600; color: #1a365d; margin-bottom: 20px; padding-bottom: 8px; border-bottom: 2px solid #e2e8f0;\">\n        {{ i18nText('simulator.exportCard.breakdown.title', 'Detailed Budget Breakdown') }}\n      </h2>\n      \n      <!-- Revenue Sources (new page) -->\n      <div class=\"page-break-before\"></div>\n      <h3 style=\"font-size: 16px; font-weight: 600; color: #2d3748; margin: 12px 0 8px;\">{{ i18nText('simulator.exportCard.breakdown.revenueSources', 'Revenue Sources') }}</h3>\n      <div style=\"display: grid; grid-template-columns: repeat(2, 1fr); gap: 16px; margin-bottom: 30px; padding-top: 0;\">\n        <div v-for=\"source in getSortedRevenueSources\" :key=\"source.name\" \n             style=\"background: white; border-radius: 8px; box-shadow: 0 1px 3px rgba(0,0,0,0.05); border: 1px solid #e2e8f0; overflow: hidden; min-height: 120px; page-break-inside: avoid;\">\n          <!-- Header -->\n          <div style=\"padding: 12px; background: #f8fafc; border-bottom: 1px solid #e2e8f0;\">\n            <div style=\"font-size: 14px; font-weight: 600; color: #1a365d;\">{{ source.name }}</div>\n          </div>\n          <!-- Content -->\n          <div style=\"padding: 12px;\">\n            <!-- Base Amount -->\n            <div style=\"margin-bottom: 8px;\">\n              <div style=\"font-size: 11px; color: #64748b; margin-bottom: 2px;\">{{ i18nText('simulator.exportCard.breakdown.cards.baseAmount', 'Base Amount') }}</div>\n              <div style=\"font-size: 14px; font-weight: 600; color: #1a365d;\">{{ formatCurrency(source.baseAmount) }}</div>\n            </div>\n            <!-- Adjusted Amount -->\n            <div style=\"margin-bottom: 8px;\">\n              <div style=\"font-size: 11px; color: #64748b; margin-bottom: 2px;\">{{ i18nText('simulator.exportCard.breakdown.cards.adjustedAmount', 'Adjusted Amount') }}</div>\n              <div style=\"font-size: 14px; font-weight: 600; color: #1a365d;\">{{ formatCurrency(source.adjustedAmount) }}</div>\n            </div>\n            <!-- Change -->\n            <div>\n              <div style=\"font-size: 11px; color: #64748b; margin-bottom: 2px;\">{{ i18nText('simulator.exportCard.breakdown.cards.change', 'Change') }}</div>\n              <div :style=\"{\n                fontSize: '14px',\n                fontWeight: '600',\n                color: source.change > 0 ? '#059669' : source.change < 0 ? '#dc2626' : '#64748b',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '4px'\n              }\">\n                <span>{{ formatPercentageWithSign(source.change) }}</span>\n                <span v-if=\"source.change !== 0\" style=\"font-size: 12px;\">\n                  {{ source.change > 0 ? '\\u25B2' : '\\u25BC' }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Spending Categories (new page) -->\n      <div class=\"page-break-before\"></div>\n      <h3 style=\"font-size: 16px; font-weight: 600; color: #2d3748; margin: 12px 0 8px;\">{{ i18nText('simulator.exportCard.breakdown.spendingCategories', 'Spending Categories') }}</h3>\n      <table style=\"width: 100%; border-collapse: collapse;\">\n        <thead>\n          <tr style=\"background-color: #f8fafc;\">\n            <th style=\"padding: 12px; text-align: left; border-bottom: 2px solid #e2e8f0; color: #64748b; font-weight: 600;\">{{ i18nText('simulator.exportCard.breakdown.table.category', 'Category') }}</th>\n            <th style=\"padding: 12px; text-align: right; border-bottom: 2px solid #e2e8f0; color: #64748b; font-weight: 600;\">{{ i18nText('simulator.exportCard.breakdown.table.baseAmount', 'Base Amount') }}</th>\n            <th style=\"padding: 12px; text-align: right; border-bottom: 2px solid #e2e8f0; color: #64748b; font-weight: 600;\">{{ i18nText('simulator.exportCard.breakdown.table.adjustedAmount', 'Adjusted Amount') }}</th>\n            <th style=\"padding: 12px; text-align: right; border-bottom: 2px solid #e2e8f0; color: #64748b; font-weight: 600;\">{{ i18nText('simulator.exportCard.breakdown.table.change', 'Change') }}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"category in getSortedSpendingCategories\" :key=\"category.name\" style=\"border-bottom: 1px solid #e2e8f0;\">\n            <td style=\"padding: 12px; color: #1a365d;\">{{ category.name }}</td>\n            <td style=\"padding: 12px; text-align: right; color: #1a365d;\">{{ formatCurrency(category.baseAmount) }}</td>\n            <td style=\"padding: 12px; text-align: right; color: #1a365d;\">{{ formatCurrency(category.adjustedAmount) }}</td>\n            <td style=\"padding: 12px; text-align: right; color: #1a365d;\" :style=\"{ color: category.change > 0 ? '#059669' : category.change < 0 ? '#dc2626' : '#64748b' }\">\n              {{ formatPercentageWithSign(category.change) }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Footer -->\n    <div style=\"margin-top: 40px; padding: 20px 40px; background-color: #f8fafc; border-top: 1px solid #e2e8f0; font-size: 12px; color: #64748b;\">\n      <p style=\"margin: 0;\">{{ i18nText('simulator.exportCard.footer.disclaimer', 'This budget summary was generated using the Canada Tax Calculator\\'s Budget Simulator.') }}</p>\n      <p style=\"margin: 8px 0 0;\">{{ i18nText('simulator.exportCard.footer.cta', 'For more information, visit:') }} <a href=\"https://hj799web.github.io/Tax-calculator-website/\" style=\"color: #2c5282; text-decoration: none;\">{{ i18nText('simulator.exportCard.footer.linkLabel', 'https://hj799web.github.io/Tax-calculator-website/') }}</a></p>\n    </div>\n  </div>\n</template>\n\n<script setup>\n// Props: budgetTitle, badges, narrative, totalRevenue, totalSpending, surplus, sentimentScores, includeFullBreakdown, budget, formatCurrency, formatPercentageChange\nimport { getSentimentEmoji, getSentimentLabel } from '@/domains/sentiment/utils/computeSentimentScores';\nimport { computed, getCurrentInstance } from 'vue';\nimport { useI18n } from '@/i18n';\n\nconst props = defineProps({\n  budgetTitle: { type: String, default: '' },\n  badges: { type: Array, default: () => [] },\n  narrative: { type: String, default: '' },\n  totalRevenue: { type: Number, default: 0 },\n  totalSpending: { type: Number, default: 0 },\n  surplus: { type: Number, default: 0 },\n  sentimentScores: { type: Object, default: () => ({}) },\n  includeFullBreakdown: { type: Boolean, default: false },\n  budget: { type: Object, default: () => ({}) },\n  formatCurrency: { type: Function, default: (val) => `$${val}B` },\n  formatPercentageChange: { type: Function, default: (val) => `${val.toFixed(1)}%` }\n})\n\nconst { t } = useI18n();\nconst instance = getCurrentInstance();\nconst globalT = instance?.appContext?.config?.globalProperties?.$t || t;\n\nconst i18nText = (key, fallback = '') => {\n  const value = globalT(key);\n  return value === key ? fallback : value;\n};\n\nconst generatedAt = new Date();\nconst generatedDate = computed(() => generatedAt.toLocaleDateString());\nconst generatedTime = computed(() => generatedAt.toLocaleTimeString());\nconst generatedStamp = computed(() => {\n  const key = 'simulator.exportCard.header.generatedOn';\n  const translation = globalT(key, { date: generatedDate.value, time: generatedTime.value });\n  if (translation === key) {\n    return `Generated on ${generatedDate.value} at ${generatedTime.value}`;\n  }\n  return translation;\n});\n\nconst budgetTitleText = computed(() => props.budgetTitle || i18nText('simulator.exportCard.defaults.budgetTitle', 'Budget Summary'));\n\n// Helper function to format percentage change with proper sign\nconst formatPercentageWithSign = (value) => {\n  const percentage = (value * 100).toFixed(1);\n  return `${percentage > 0 ? '+' : ''}${percentage}%`;\n};\n\n// Helper function to calculate percentage change\nconst calculatePercentageChange = (baseAmount, adjustedAmount) => {\n  if (!baseAmount || baseAmount === 0) return 0;\n  return (adjustedAmount - baseAmount) / baseAmount;\n};\n\n// Helper function to get top positive and negative scores\nconst getTopSentimentScores = (scores, count = 2) => {\n  const entries = Object.entries(scores);\n  const sorted = entries.sort((a, b) => b[1] - a[1]);\n  return {\n    positive: sorted.slice(0, count),\n    negative: sorted.slice(-count).reverse()\n  };\n};\n\n// Computed properties for top sentiment scores\nconst topProvinceScores = computed(() => {\n  if (!props.sentimentScores?.provinces) return { positive: [], negative: [] };\n  return getTopSentimentScores(props.sentimentScores.provinces);\n});\n\nconst topSectorScores = computed(() => {\n  if (!props.sentimentScores?.sectors) return { positive: [], negative: [] };\n  return getTopSentimentScores(props.sentimentScores.sectors);\n});\n\nconst topDemographicScores = computed(() => {\n  if (!props.sentimentScores?.demographics) return { positive: [], negative: [] };\n  return getTopSentimentScores(props.sentimentScores.demographics);\n});\n\n// Computed property to get sorted revenue sources by percentage change\nconst getSortedRevenueSources = computed(() => {\n  if (!props.budget?.revenueSources) return [];\n  \n  return Object.values(props.budget.revenueSources)\n    .map(source => {\n      const baseAmount = source.base * source.rate;\n      const adjustedAmount = source.adjustedAmount;\n      const change = calculatePercentageChange(baseAmount, adjustedAmount);\n      return {\n        ...source,\n        baseAmount,\n        adjustedAmount,\n        change,\n        adjustmentFactor: 1 + change // Convert change to adjustment factor\n      };\n    })\n    .sort((a, b) => Math.abs(b.adjustmentFactor - 1) - Math.abs(a.adjustmentFactor - 1));\n});\n\n// Computed property to get sorted spending categories by percentage change\nconst getSortedSpendingCategories = computed(() => {\n  if (!props.budget?.spendingCategories) return [];\n  \n  const categories = [];\n  \n  // Process all categories\n  Object.values(props.budget.spendingCategories).forEach(category => {\n    if (category.isGroup) {\n      // Handle group categories (other categories, government operations, tax expenditures)\n      if (category.children) {\n        Object.values(category.children).forEach(child => {\n          if (child.baseAmount !== undefined) {\n            categories.push({\n              ...child,\n              baseAmount: child.baseAmount,\n              adjustedAmount: child.baseAmount * (child.adjustmentFactor || 1),\n              change: (child.adjustmentFactor || 1) - 1,\n              adjustmentFactor: child.adjustmentFactor || 1,\n              categoryType: category.id === 'loansInvestments' ? 'other' :\n                           category.id === 'governmentOperations' ? 'government' :\n                           category.id === 'taxExpenditures' ? 'tax' : 'main'\n            });\n          }\n        });\n      }\n    } else if (!category.id.includes('.')) { // Only include top-level categories\n      // Handle main categories\n      if (category.baseAmount !== undefined) {\n        categories.push({\n          ...category,\n          baseAmount: category.baseAmount,\n          adjustedAmount: category.baseAmount * (category.adjustmentFactor || 1),\n          change: (category.adjustmentFactor || 1) - 1,\n          adjustmentFactor: category.adjustmentFactor || 1,\n          categoryType: 'main'\n        });\n      }\n    }\n  });\n\n  // Sort categories by type and then by change magnitude\n  return categories.sort((a, b) => {\n    // First sort by category type\n    const typeOrder = { main: 1, other: 2, government: 3, tax: 4 };\n    const typeDiff = typeOrder[a.categoryType] - typeOrder[b.categoryType];\n    if (typeDiff !== 0) return typeDiff;\n    \n    // Then sort by change magnitude within each type\n    return Math.abs(b.adjustmentFactor - 1) - Math.abs(a.adjustmentFactor - 1);\n  });\n});\n</script>\n\n<style scoped>\n.export-container.summary-only .full-breakdown-table {\n  display: none;\n}\n\n/* Add styles for the budget breakdown section */\n.budget-breakdown {\n  display: block;\n}\n\n.summary-only .budget-breakdown {\n  display: none;\n}\n\n/* Add page break controls for PDF generation */\n@media print {\n  /* Prevent awkward breaks within sections */\n  .budget-breakdown {\n    page-break-inside: avoid;\n  }\n\n  /* Add page breaks between major sections */\n  .financial-summary-section {\n    page-break-after: always;\n  }\n\n  .sentiment-section {\n    page-break-after: always;\n  }\n\n  /* Prevent breaks within tables */\n  table {\n    page-break-inside: avoid;\n  }\n\n  /* Prevent breaks within sentiment cards */\n  .sentiment-card {\n    page-break-inside: avoid;\n  }\n\n  /* Add some spacing between sections */\n  .section-spacer {\n    margin-bottom: 2rem;\n  }\n\n  /* Ensure headers stay with their content */\n  h2, h3 {\n    page-break-after: avoid;\n  }\n\n  /* Ensure table headers repeat on new pages */\n  thead {\n    display: table-header-group;\n  }\n\n  /* Improve color contrast for print */\n  @media print and (color) {\n    * {\n      -webkit-print-color-adjust: exact;\n      print-color-adjust: exact;\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n\n.page-break-before {\n  page-break-before: always;\n  break-before: page;\n}\n</style>\n\n","import script from \"./ExportCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ExportCard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ExportCard.vue?vue&type=style&index=0&id=0d72fbe9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0d72fbe9\"]])\n\nexport default __exports__","<template>\n  <div class=\"goal-tracker bg-white rounded-lg shadow-md p-4\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <h3 class=\"text-lg font-semibold text-gray-800\">\n        {{ i18nText('simulator.goals.title', 'Budget Goals') }}\n      </h3>\n      <div class=\"flex items-center\">\n        <input \n          id=\"enable-goals\" \n          v-model=\"localGoals.enabled\" \n          type=\"checkbox\"\n          class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          @change=\"updateGoals\"\n        >\n        <label\n          for=\"enable-goals\"\n          class=\"ml-2 block text-sm text-gray-700\"\n        >\n          {{ i18nText('simulator.goals.enableGoals', 'Enable Budget Goals') }}\n        </label>\n      </div>\n    </div>\n    \n    <div\n      v-if=\"localGoals.enabled\"\n      class=\"space-y-4\"\n    >\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <!-- Target Revenue Input -->\n        <div class=\"space-y-1\">\n          <label\n            for=\"target-revenue\"\n            class=\"block text-sm font-medium text-gray-700\"\n          >\n            {{ i18nText('simulator.goals.targetRevenue', 'Target Revenue ($B)') }}\n          </label>\n          <div class=\"mt-1 relative rounded-md shadow-sm\">\n            <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span class=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input \n              id=\"target-revenue\" \n              v-model.number=\"localGoals.targetRevenue\" \n              type=\"number\"\n              class=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md\"\n              placeholder=\"0.0\"\n              min=\"0\"\n              step=\"0.1\"\n              :disabled=\"autoBalanceEnabled\"\n              @change=\"updateGoals\"\n            >\n            <div class=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n              <span class=\"text-gray-500 sm:text-sm\">B</span>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Target Deficit/Surplus Input -->\n        <div class=\"space-y-1\">\n          <label\n            for=\"target-deficit\"\n            class=\"block text-sm font-medium text-gray-700\"\n          >\n            {{ localGoals.targetDeficit !== null && localGoals.targetDeficit >= 0 \n              ? t('simulator.goals.targetDeficit', { type: i18nText('simulator.goals.deficit', 'Deficit') })\n              : t('simulator.goals.targetSurplus', { type: i18nText('simulator.goals.surplus', 'Surplus') })\n            }}\n          </label>\n          <div class=\"mt-1 relative rounded-md shadow-sm\">\n            <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span class=\"text-gray-500 sm:text-sm\">$</span>\n            </div>\n            <input \n              id=\"target-deficit\" \n              v-model.number=\"localGoals.targetDeficit\" \n              type=\"number\"\n              class=\"focus:ring-blue-500 focus:border-blue-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md\"\n              placeholder=\"0.0\"\n              step=\"0.1\"\n              :disabled=\"autoBalanceEnabled\"\n              @change=\"updateGoals\"\n            >\n            <div class=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n              <span class=\"text-gray-500 sm:text-sm\">B</span>\n            </div>\n          </div>\n          <div class=\"text-xs text-gray-500 mt-1\">\n            {{ i18nText('simulator.goals.positiveDeficitNegativeSurplus', 'Positive = Deficit, Negative = Surplus') }}\n          </div>\n        </div>\n      </div>\n      \n      <!-- Auto-balance option -->\n      <div class=\"mt-4 flex items-center\">\n        <input \n          id=\"auto-balance\" \n          v-model=\"autoBalanceEnabled\" \n          type=\"checkbox\"\n          class=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n          @change=\"handleAutoBalanceChange\"\n        >\n        <label\n          for=\"auto-balance\"\n          class=\"ml-2 block text-sm text-gray-700\"\n        >\n          {{ i18nText('simulator.goals.autoBalance', 'Auto-balance budget to match goal') }}\n        </label>\n      </div>\n\n      \n      <!-- Auto-balance message -->\n      <div\n        v-if=\"autoBalanceEnabled && autoBalanceMessage\"\n        class=\"mt-2 p-2 bg-blue-50 text-blue-700 rounded-md text-sm\"\n      >\n        {{ autoBalanceMessage }}\n      </div>\n      \n      <!-- Feedback Section -->\n      <div class=\"mt-4 border-t border-gray-200 pt-4\">\n        <h4 class=\"text-sm font-medium text-gray-700 mb-3\">\n          {{ i18nText('simulator.goals.goalStatus', 'Goal Status:') }}\n        </h4>\n        \n        <!-- Revenue Goal Status -->\n        <div\n          v-if=\"localGoals.targetRevenue !== null\"\n          class=\"mb-3\"\n        >\n          <div class=\"flex items-center mb-1\">\n            <span class=\"text-sm font-medium text-gray-600 mr-2\">{{ i18nText('simulator.goals.revenueGoal', 'Revenue Goal:') }}</span>\n            <span class=\"text-xl mr-1\">{{ revenueStatusIcon }}</span>\n            <span\n              :class=\"revenueStatusClass\"\n              class=\"text-sm font-medium\"\n            >\n              {{ revenueStatusText }}\n            </span>\n          </div>\n          <div class=\"text-xs text-gray-600\">\n            {{ revenueGapMessage }}\n          </div>\n          <div class=\"mt-2 w-full bg-gray-200 rounded-full h-2\">\n            <div\n              class=\"h-2 rounded-full\" \n              :style=\"{ width: `${Math.min(100, (props.currentRevenue / localGoals.targetRevenue) * 100)}%`, backgroundColor: revenueStatusColor }\"\n            />\n          </div>\n        </div>\n        \n        <!-- Deficit Goal Status -->\n        <div\n          v-if=\"localGoals.targetDeficit !== null\"\n          class=\"mb-3\"\n        >\n          <div class=\"flex items-center mb-1\">\n            <span class=\"text-sm font-medium text-gray-600 mr-2\">\n              {{ localGoals.targetDeficit >= 0 \n                ? i18nText('simulator.goals.deficitGoal', 'Deficit Goal:')\n                : i18nText('simulator.goals.surplusGoal', 'Surplus Goal:')\n              }}\n            </span>\n            <span class=\"text-xl mr-1\">{{ deficitStatusIcon }}</span>\n            <span\n              :class=\"deficitStatusClass\"\n              class=\"text-sm font-medium\"\n            >\n              {{ deficitStatusText }}\n            </span>\n          </div>\n          <div class=\"text-xs text-gray-600\">\n            {{ deficitGapMessage }}\n          </div>\n          <div\n            v-if=\"localGoals.targetDeficit !== 0\"\n            class=\"mt-2 w-full bg-gray-200 rounded-full h-2\"\n          >\n            <div\n              class=\"h-2 rounded-full\" \n              :style=\"{ width: `${Math.min(100, Math.abs((currentDeficit / (Math.abs(localGoals.targetDeficit) || 1)) * 100))}%`, backgroundColor: deficitStatusColor }\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div\n      v-else\n      class=\"text-center text-gray-500 italic py-2\"\n    >\n      {{ i18nText('simulator.goals.messages.enableGoalsToTrack', 'Enable budget goals to track your progress') }}\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { useBudgetSimulatorStore } from '../store/budgetSimulator';\nimport { useI18n } from '@/i18n';\n\n// Props\nconst props = defineProps({\n  currentRevenue: {\n    type: Number,\n    required: true\n  },\n  currentSpending: {\n    type: Number,\n    required: true\n  },\n  initialGoals: {\n    type: Object,\n    default: () => ({\n      enabled: false,\n      targetRevenue: null,\n      targetDeficit: null\n    })\n  }\n});\n\n// Emits\nconst emit = defineEmits(['update:goals', 'goalStatusChanged', 'autoBalanceToggled']);\n\n// Router for URL params\nconst router = useRouter();\nconst route = useRoute();\n\n// i18n setup\nconst { t } = useI18n();\nconst i18nText = (key, fallback = '') => {\n  const value = t(key);\n  return value === key ? fallback : value;\n};\n\n// Local state\nconst localGoals = ref({\n  enabled: props.initialGoals.enabled || false,\n  targetRevenue: props.initialGoals.targetRevenue || null,\n  targetDeficit: props.initialGoals.targetDeficit || null\n});\n\n// Auto-balance feature\nconst autoBalanceEnabled = ref(false);\nconst autoBalanceMessage = ref('');\n\nconst budgetStore = useBudgetSimulatorStore();\n\n// Computed properties\nconst currentDeficit = computed(() => {\n  return props.currentSpending - props.currentRevenue;\n});\n\n// Revenue goal status\nconst revenuePercentOfGoal = computed(() => {\n  if (!localGoals.value.targetRevenue) return 100;\n  return (props.currentRevenue / localGoals.value.targetRevenue) * 100;\n});\n\nconst revenueStatusIcon = computed(() => {\n  if (revenuePercentOfGoal.value >= 95 && revenuePercentOfGoal.value <= 105) {\n    return '✅';\n  } else if ((revenuePercentOfGoal.value >= 90 && revenuePercentOfGoal.value < 95) || \n             (revenuePercentOfGoal.value > 105 && revenuePercentOfGoal.value <= 110)) {\n    return '⚠️';\n  } else {\n    return '❌';\n  }\n});\n\nconst revenueStatusClass = computed(() => {\n  if (revenuePercentOfGoal.value >= 95 && revenuePercentOfGoal.value <= 105) {\n    return 'text-green-600';\n  } else if ((revenuePercentOfGoal.value >= 90 && revenuePercentOfGoal.value < 95) || \n             (revenuePercentOfGoal.value > 105 && revenuePercentOfGoal.value <= 110)) {\n    return 'text-yellow-600';\n  } else {\n    return 'text-red-600';\n  }\n});\n\nconst revenueStatusColor = computed(() => {\n  if (revenuePercentOfGoal.value >= 95 && revenuePercentOfGoal.value <= 105) {\n    return '#10B981'; // green-500\n  } else if ((revenuePercentOfGoal.value >= 90 && revenuePercentOfGoal.value < 95) || \n             (revenuePercentOfGoal.value > 105 && revenuePercentOfGoal.value <= 110)) {\n    return '#F59E0B'; // amber-500\n  } else {\n    return '#EF4444'; // red-500\n  }\n});\n\nconst revenueStatusText = computed(() => {\n  if (revenuePercentOfGoal.value >= 95 && revenuePercentOfGoal.value <= 105) {\n    return i18nText('simulator.goals.status.onTarget', 'On Target');\n  } else if (revenuePercentOfGoal.value < 95) {\n    return i18nText('simulator.goals.status.underTarget', 'Under Target');\n  } else {\n    return i18nText('simulator.goals.status.overTarget', 'Over Target');\n  }\n});\n\nconst revenueGapMessage = computed(() => {\n  if (!localGoals.value.targetRevenue) return '';\n  \n  const gap = props.currentRevenue - localGoals.value.targetRevenue;\n  const percentGap = (gap / localGoals.value.targetRevenue) * 100;\n  \n  if (Math.abs(percentGap) < 2) {\n    return i18nText('simulator.goals.messages.revenueOnTarget', 'Your revenue is right on target!');\n  } else if (gap > 0) {\n    return t('simulator.goals.messages.revenueOverTarget', { \n      amount: gap.toFixed(1), \n      percent: percentGap.toFixed(1) \n    });\n  } else {\n    return t('simulator.goals.messages.revenueUnderTarget', { \n      amount: Math.abs(gap).toFixed(1), \n      percent: Math.abs(percentGap).toFixed(1) \n    });\n  }\n});\n\n// Deficit/Surplus goal status\nconst deficitPercentOfGoal = computed(() => {\n  if (!localGoals.value.targetDeficit || localGoals.value.targetDeficit === 0) return 100;\n  // Compare current deficit with absolute target (prevent division by zero)\n  const currentDeficitValue = props.currentSpending - props.currentRevenue;\n  return (currentDeficitValue / Math.abs(localGoals.value.targetDeficit)) * 100;\n});\n\nconst deficitStatusIcon = computed(() => {\n  if (!localGoals.value.targetDeficit) return '';\n  \n  const currentDeficitValue = props.currentSpending - props.currentRevenue;\n  const signsMatch = Math.sign(currentDeficitValue) === Math.sign(localGoals.value.targetDeficit) ||\n                    localGoals.value.targetDeficit === 0;\n  \n  if (!signsMatch) {\n    return '❌';\n  }\n  \n  if (Math.abs(deficitPercentOfGoal.value - 100) <= 5) {\n    return '✅';\n  } else if (Math.abs(deficitPercentOfGoal.value - 100) <= 15) {\n    return '⚠️';\n  } else {\n    return '❌';\n  }\n});\n\nconst deficitStatusClass = computed(() => {\n  if (!localGoals.value.targetDeficit) return '';\n  \n  const currentDeficitValue = props.currentSpending - props.currentRevenue;\n  const signsMatch = Math.sign(currentDeficitValue) === Math.sign(localGoals.value.targetDeficit) ||\n                    localGoals.value.targetDeficit === 0;\n  \n  if (!signsMatch) {\n    return 'text-red-600';\n  }\n  \n  if (Math.abs(deficitPercentOfGoal.value - 100) <= 5) {\n    return 'text-green-600';\n  } else if (Math.abs(deficitPercentOfGoal.value - 100) <= 15) {\n    return 'text-yellow-600';\n  } else {\n    return 'text-red-600';\n  }\n});\n\nconst deficitStatusColor = computed(() => {\n  if (!localGoals.value.targetDeficit) return '#CBD5E0'; // gray-400\n  \n  const currentDeficitValue = props.currentSpending - props.currentRevenue;\n  const signsMatch = Math.sign(currentDeficitValue) === Math.sign(localGoals.value.targetDeficit) ||\n                    localGoals.value.targetDeficit === 0;\n  \n  if (!signsMatch) {\n    return '#EF4444'; // red-500\n  }\n  \n  if (Math.abs(deficitPercentOfGoal.value - 100) <= 5) {\n    return '#10B981'; // green-500\n  } else if (Math.abs(deficitPercentOfGoal.value - 100) <= 15) {\n    return '#F59E0B'; // amber-500\n  } else {\n    return '#EF4444'; // red-500\n  }\n});\n\nconst deficitStatusText = computed(() => {\n  if (!localGoals.value.targetDeficit) return '';\n  \n  const currentDeficitValue = props.currentSpending - props.currentRevenue;\n  const signsMatch = Math.sign(currentDeficitValue) === Math.sign(localGoals.value.targetDeficit) ||\n                    localGoals.value.targetDeficit === 0;\n  \n  if (!signsMatch) {\n    return localGoals.value.targetDeficit >= 0 \n      ? i18nText('simulator.goals.status.surplusInsteadOfDeficit', 'You have a surplus instead of a deficit')\n      : i18nText('simulator.goals.status.deficitInsteadOfSurplus', 'You have a deficit instead of a surplus');\n  }\n  \n  if (Math.abs(deficitPercentOfGoal.value - 100) <= 5) {\n    return i18nText('simulator.goals.status.onTarget', 'On Target');\n  } else if (deficitPercentOfGoal.value < 95) {\n    return localGoals.value.targetDeficit >= 0 \n      ? i18nText('simulator.goals.status.deficitTooSmall', 'Deficit is too small')\n      : i18nText('simulator.goals.status.surplusTooLarge', 'Surplus is too large');\n  } else {\n    return localGoals.value.targetDeficit >= 0 \n      ? i18nText('simulator.goals.status.deficitTooLarge', 'Deficit is too large')\n      : i18nText('simulator.goals.status.surplusTooSmall', 'Surplus is too small');\n  }\n});\n\nconst deficitGapMessage = computed(() => {\n  if (!localGoals.value.targetDeficit) return '';\n  \n  const currentDeficitValue = props.currentSpending - props.currentRevenue;\n  const gap = currentDeficitValue - localGoals.value.targetDeficit;\n  \n  if (Math.abs(gap) < 2) {\n    return i18nText('simulator.goals.messages.budgetOnTarget', 'Your budget is right on target!');\n  } else if (gap > 0) {\n    return localGoals.value.targetDeficit >= 0\n      ? t('simulator.goals.messages.deficitHigher', { amount: gap.toFixed(1) })\n      : t('simulator.goals.messages.surplusLower', { amount: Math.abs(gap).toFixed(1) });\n  } else {\n    return localGoals.value.targetDeficit >= 0\n      ? t('simulator.goals.messages.deficitLower', { amount: Math.abs(gap).toFixed(1) })\n      : t('simulator.goals.messages.surplusHigher', { amount: gap.toFixed(1) });\n  }\n});\n\n// Methods\nfunction updateGoals() {\n  emit('update:goals', { ...localGoals.value });\n  \n  if (localGoals.value.enabled) {\n    updateUrlParams();\n  } else {\n    clearUrlParams();\n  }\n  \n  emit('goalStatusChanged', {\n    revenue: {\n      status: revenueStatusClass.value,\n      icon: revenueStatusIcon.value,\n      text: revenueStatusText.value,\n      message: revenueGapMessage.value\n    },\n    deficit: {\n      status: deficitStatusClass.value,\n      icon: deficitStatusIcon.value,\n      text: deficitStatusText.value,\n      message: deficitGapMessage.value\n    }\n  });\n}\n\nfunction handleAutoBalanceChange() {\n  // Simple implementation that just emits the event and updates the message\n  emit('autoBalanceToggled', autoBalanceEnabled.value);\n  \n  // Set the message based on the current state\n  if (autoBalanceEnabled.value) {\n    if (localGoals.value.targetRevenue !== null) {\n      const amount = localGoals.value.targetRevenue.toFixed(1);\n      autoBalanceMessage.value = t('simulator.goals.messages.autoBalanceRevenue', { amount });\n      \n      // Directly update the store\n      budgetStore.budgetGoals.targetRevenue = localGoals.value.targetRevenue;\n      budgetStore.budgetGoals.enabled = true;\n      budgetStore.toggleAutoBalance(true);\n    } else if (localGoals.value.targetDeficit !== null) {\n      const isDeficit = localGoals.value.targetDeficit >= 0;\n      const amount = isDeficit ? \n        localGoals.value.targetDeficit.toFixed(1) : \n        Math.abs(localGoals.value.targetDeficit).toFixed(1);\n      \n      autoBalanceMessage.value = isDeficit ?\n        t('simulator.goals.messages.autoBalanceDeficit', { amount }) :\n        t('simulator.goals.messages.autoBalanceSurplus', { amount });\n        \n      // Directly update the store\n      budgetStore.budgetGoals.targetDeficit = localGoals.value.targetDeficit;\n      budgetStore.budgetGoals.enabled = true;\n      budgetStore.toggleAutoBalance(true);\n    } else {\n      autoBalanceMessage.value = i18nText('simulator.goals.messages.setGoalFirst', 'Please set either a revenue goal or a deficit/surplus goal to auto-balance the budget.');\n      autoBalanceEnabled.value = false;\n    }\n  } else {\n    autoBalanceMessage.value = '';\n    budgetStore.toggleAutoBalance(false);\n  }\n}\n\n\nfunction updateUrlParams() {\n  if (!localGoals.value.enabled) return;\n  \n  const query = { ...route.query };\n  \n  if (localGoals.value.targetRevenue !== null) {\n    query.revenueGoal = localGoals.value.targetRevenue.toString();\n  } else {\n    delete query.revenueGoal;\n  }\n  \n  if (localGoals.value.targetDeficit !== null) {\n    query.deficitGoal = localGoals.value.targetDeficit.toString();\n  } else {\n    delete query.deficitGoal;\n  }\n  \n  router.replace({ query });\n}\n\nfunction clearUrlParams() {\n  const query = { ...route.query };\n  delete query.revenueGoal;\n  delete query.deficitGoal;\n  router.replace({ query });\n}\n\nfunction loadFromUrlParams() {\n  const { revenueGoal, deficitGoal } = route.query;\n  \n  if (revenueGoal !== undefined || deficitGoal !== undefined) {\n    const updatedGoals = { ...localGoals.value, enabled: true };\n    \n    if (revenueGoal !== undefined) {\n      updatedGoals.targetRevenue = parseFloat(revenueGoal);\n    }\n    \n    if (deficitGoal !== undefined) {\n      updatedGoals.targetDeficit = parseFloat(deficitGoal);\n    }\n    \n    localGoals.value = updatedGoals;\n    updateGoals();\n  }\n}\n\n// Watchers\nwatch(() => props.initialGoals, (newGoals) => {\n  if (newGoals) {\n    localGoals.value = { ...newGoals };\n  }\n}, { deep: true });\n\nwatch(() => route.query, (newQuery) => {\n  if (newQuery.revenueGoal !== undefined || newQuery.deficitGoal !== undefined) {\n    loadFromUrlParams();\n  }\n}, { deep: true });\n\n// Initialize from URL params on mount\nonMounted(() => {\n  loadFromUrlParams();\n});\n</script>\n\n<style scoped>\n.goal-tracker {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 1rem;\n  box-shadow: \n    0 10px 20px rgba(0, 0, 0, 0.19),\n    0 6px 6px rgba(0, 0, 0, 0.23);\n  backdrop-filter: blur(10px);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n  contain: content;\n}\n\n.goal-tracker:hover {\n  transform: translateY(-5px) translateZ(0);\n  box-shadow: \n    0 15px 30px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.goal-item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.1),\n    0 2px 4px rgba(0, 0, 0, 0.06);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n}\n\n.goal-item:hover {\n  transform: translateY(-2px) translateZ(0);\n  box-shadow: \n    0 6px 8px rgba(0, 0, 0, 0.12),\n    0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n.goal-info {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.goal-icon {\n  width: 2.5rem;\n  height: 2.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f7fafc;\n  border-radius: 0.5rem;\n  color: #4299e1;\n  font-size: 1.5rem;\n}\n\n.goal-details {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.goal-title {\n  font-size: 1.125rem;\n  font-weight: 600;\n  color: #2d3748;\n}\n\n.goal-description {\n  font-size: 0.875rem;\n  color: #4a5568;\n}\n\n.goal-progress {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.progress-bar {\n  width: 200px;\n  height: 0.5rem;\n  background: #e2e8f0;\n  border-radius: 0.25rem;\n  overflow: hidden;\n}\n\n.progress-fill {\n  height: 100%;\n  background: #4299e1;\n  border-radius: 0.25rem;\n  transition: width 0.3s ease;\n  will-change: width;\n}\n\n.progress-value {\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: #2d3748;\n  min-width: 3rem;\n  text-align: right;\n}\n\n.goal-status {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  padding: 0.5rem 1rem;\n  background: #f7fafc;\n  border-radius: 0.5rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.status-achieved {\n  color: #38a169;\n  background: #f0fff4;\n}\n\n.status-in-progress {\n  color: #3182ce;\n  background: #ebf8ff;\n}\n\n.status-not-started {\n  color: #718096;\n  background: #f7fafc;\n}\n\n/* Responsive Design */\n@container (max-width: 768px) {\n  .goal-tracker {\n    padding: 1rem;\n  }\n  \n  .goal-item {\n    padding: 0.75rem;\n  }\n  \n  .goal-title {\n    font-size: 1rem;\n  }\n  \n  .progress-bar {\n    width: 150px;\n  }\n}\n\n@container (max-width: 480px) {\n  .goal-tracker {\n    padding: 0.75rem;\n  }\n  \n  .goal-item {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 1rem;\n  }\n  \n  .goal-info {\n    width: 100%;\n  }\n  \n  .goal-progress {\n    width: 100%;\n    justify-content: space-between;\n  }\n  \n  .progress-bar {\n    width: 100%;\n    flex: 1;\n  }\n}\n\n/* Touch Device Optimizations */\n@media (hover: none) {\n  .goal-tracker:hover,\n  .goal-item:hover {\n    transform: none;\n  }\n  \n  .goal-tracker:active,\n  .goal-item:active {\n    transform: translateY(-2px) translateZ(0);\n  }\n}\n\n/* Reduced Motion */\n@media (prefers-reduced-motion: reduce) {\n  .goal-tracker,\n  .goal-item,\n  .progress-fill {\n    transition: none;\n    transform: none !important;\n  }\n}\n\n/* High Contrast Mode */\n@media (forced-colors: active) {\n  .goal-tracker,\n  .goal-item {\n    border: 2px solid CanvasText;\n  }\n  \n  .goal-icon,\n  .goal-status {\n    border: 2px solid CanvasText;\n  }\n}\n\n/* Print Styles */\n@media print {\n  .goal-tracker {\n    box-shadow: none;\n    border: 1px solid #000;\n  }\n  \n  .goal-item {\n    break-inside: avoid;\n    box-shadow: none;\n    border: 1px solid #000;\n  }\n  \n  .goal-icon,\n  .goal-status {\n    border: 1px solid #000;\n  }\n}\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n  appearance: textfield;\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n</style>\n","import script from \"./GoalTracker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GoalTracker.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GoalTracker.vue?vue&type=style&index=0&id=2fa6a469&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2fa6a469\"]])\n\nexport default __exports__"],"names":["__exports__","t","useI18n","showBadges","ref","budgetStore","useBudgetSimulatorStore","totalRevenueValue","computed","lastRevenueSourceUpdate","lastTaxExpenditureUpdate","lastUpdate","totalRevenue","error","handleComponentError","totalSpendingValue","totalSpending","surplusValue","surplus","earnedBadges","lastBadgeUpdate","isMobileView","window","innerWidth","activeTab","warningDismissed","showDeficitInfo","checkDeficitWarning","value","watch","console","log","onMounted","addEventListener","handleResize","onUnmounted","removeEventListener","deficitWarningLevel","deficitWarningMessage","deficitWarningClass","dismissWarning","downloadChart","chartType","element","document","querySelector","html2canvas","then","canvas","link","createElement","download","href","toDataURL","click","formatPercentage","total","Math","round","emit","__emit","throttledShareBudget","throttle","throttledResetBudget","throttledSaveBudget","formatCurrency","undefined","isNaN","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","activeTooltip","showTooltip","text","hideTooltip","throttledDownloadChart","props","__props","toggleExpansion","event","stopPropagation","groupId","toFixed","localizedName","id","type","fallback","getCategoryName","localizedDescription","getCategoryDescription","i18nText","key","isUpdating","debouncedUpdateCategory","createDebouncedFunction","categoryId","factor","updateSpendingFactor","validSpendingFactors","result","spendingFactors","mainCategoriesList","forEach","category","otherCategoriesGroups","group","children","getGroupChildren","child","sortedGovOpsChildren","taxExpendituresArray","taxExpenditures","Object","keys","length","values","categories","mainCategories","spendingCategories","filter","toggleGroup","updateCategoryAdjustment","Date","now","resetOtherCategories","isGroup","resetGovernmentOperations","govOps","governmentOperations","handleTaxExpenditureUpdate","expenditureId","updateTaxExpenditureAdjustment","resetTaxExpenditure","resetAllTaxExpenditures","resetTaxExpenditures","formatAmount","amount","calculateImpact","expenditure","netAmount","adjustmentFactor","getImpactClass","getImpactPrefix","getImpactPercentage","impact","totalImpact","abs","taxExpenditureRevenueImpact","getTotalImpactClass","getTotalImpactPrefix","selectYear","year","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","isRevenueExpanded","isSpendingExpanded","displayMode","chartUpdateKey","isMobile","chartHeight","chartWidth","errorMessage","revenueSources","deep","source","name","Number","adjustedAmount","sort","a","b","getIncomeTaxTotal","personal","personalIncomeTax","corporate","corporateIncomeTax","e","handleError","msg","getConsumptionTaxTotal","gst","excise","exciseTaxes","getOtherRevenueTotal","otherSources","s","includes","reduce","sum","amt","getTotalRevenue","incomeTaxSources","consumptionTaxSources","otherRevenueSources","revenueChartData","sources","labels","map","data","datasets","backgroundColor","color","borderColor","borderWidth","revenueChartOptions","indexAxis","responsive","maintainAspectRatio","animation","duration","plugins","legend","display","tooltip","callbacks","label","context","dataIndex","percentage","scales","x","beginAtZero","grid","drawBorder","drawOnChartArea","drawTicks","ticks","callback","font","size","family","maxRotation","padding","title","top","bottom","y","index","this","getLabelForValue","substring","layout","left","right","debounce","instance","getCurrentInstance","globalT","appContext","config","globalProperties","$t","generatedAt","generatedDate","toLocaleDateString","generatedTime","toLocaleTimeString","generatedStamp","translation","date","time","budgetTitleText","budgetTitle","formatPercentageWithSign","calculatePercentageChange","baseAmount","getTopSentimentScores","scores","count","entries","sorted","positive","slice","negative","reverse","topProvinceScores","sentimentScores","provinces","topSectorScores","sectors","topDemographicScores","demographics","getSortedRevenueSources","budget","base","rate","change","getSortedSpendingCategories","push","categoryType","typeOrder","main","other","government","tax","typeDiff","router","useRouter","route","useRoute","localGoals","enabled","initialGoals","targetRevenue","targetDeficit","autoBalanceEnabled","autoBalanceMessage","currentDeficit","currentSpending","currentRevenue","revenuePercentOfGoal","revenueStatusIcon","revenueStatusClass","revenueStatusColor","revenueStatusText","revenueGapMessage","gap","percentGap","percent","deficitPercentOfGoal","currentDeficitValue","deficitStatusIcon","signsMatch","sign","deficitStatusClass","deficitStatusColor","deficitStatusText","deficitGapMessage","updateGoals","updateUrlParams","clearUrlParams","revenue","status","icon","message","deficit","handleAutoBalanceChange","budgetGoals","toggleAutoBalance","isDeficit","query","revenueGoal","toString","deficitGoal","replace","loadFromUrlParams","updatedGoals","parseFloat","newGoals","newQuery"],"sourceRoot":""}