{"version":3,"file":"js/common-ed88f657.b10bedde.js","mappings":"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","sources":["webpack://my-new-project/./src/domains/budget/components/PanelBanner.vue","webpack://my-new-project/./src/domains/budget/components/PanelBanner.vue?6e01","webpack://my-new-project/./src/domains/budget/components/MultiYearItemPlanModal.vue","webpack://my-new-project/./src/domains/budget/components/MultiYearItemPlanModal.vue?3006","webpack://my-new-project/./src/domains/budget/components/PanelHost.vue","webpack://my-new-project/./src/domains/budget/components/PanelHost.vue?1704","webpack://my-new-project/./src/domains/budget/components/PercentageInput.vue","webpack://my-new-project/./src/domains/budget/components/PercentageInput.vue?7d31","webpack://my-new-project/./src/domains/budget/components/ProjectionsPanelLite.vue","webpack://my-new-project/./src/domains/budget/components/ProjectionsPanelLite.vue?e784","webpack://my-new-project/./src/domains/budget/components/RevenueSliders.vue","webpack://my-new-project/./src/domains/budget/components/RevenueSliders.vue?809b","webpack://my-new-project/./src/domains/budget/components/SpendingGrowthControls.vue","webpack://my-new-project/./src/domains/budget/components/SpendingGrowthControls.vue?f1f3","webpack://my-new-project/./src/domains/budget/components/SpendingPieChart.vue","webpack://my-new-project/./src/domains/budget/components/SpendingPieChart.vue?90c4"],"sourcesContent":["<template>\n  <div class=\"panel-banner\" :class=\"{ compact }\" role=\"tablist\" :aria-label=\"i18nText('panelBanner.sections', 'Sections')\" tabindex=\"0\" @keydown=\"onKeydown\">\n    <div v-for=\"grp in visibleGroups\" :key=\"grp.key\" class=\"group-block\" :data-panel-group=\"grp.key\">\n      <div class=\"group-label\" aria-hidden=\"true\">{{ grp.title }}</div>\n      <button v-for=\"p in grp.items\" :key=\"p.key\"\n              class=\"tab\"\n              role=\"tab\"\n              :title=\"p.label\"\n              :aria-label=\"p.label\"\n              :aria-selected=\"p.key===modelValue\"\n              :class=\"{ active: p.key===modelValue }\"\n              :data-panel-key=\"p.key\"\n              @click=\"emit('update:modelValue', p.key)\">\n        <span class=\"material-icons\" aria-hidden=\"true\">{{ p.icon }}</span>\n        <span class=\"label\">{{ p.label }}</span>\n      </button>\n    </div>\n    <button v-if=\"isMobile && collapsibleExists\" class=\"more-toggle\" @click=\"showMore = !showMore\">\n      <span class=\"material-icons\" aria-hidden=\"true\">{{ showMore ? 'expand_less' : 'expand_more' }}</span>\n      <span class=\"label\">{{ showMore ? i18nText('panelBanner.less', 'Less') : i18nText('panelBanner.more', 'More') }}</span>\n    </button>\n  </div>\n  \n</template>\n\n<script setup>\nimport { computed, ref, onMounted, onUnmounted } from 'vue';\nimport { useI18n } from '@/i18n';\n\n// i18n setup\nconst { t } = useI18n();\nconst i18nText = (key, fallback = '') => {\n  const value = t(key);\n  return value === key ? fallback : value;\n};\n\nconst props = defineProps({\n  modelValue: { type: String, required: true },\n  panels: { type: Array, required: true },\n  pinnedKeys: { type: Array, default: () => [] },\n  compact: { type: Boolean, default: false },\n});\nconst emit = defineEmits(['update:modelValue']);\n\nconst order = ['pinned','core','adjust','insights','planning','share'];\n\nconst titles = computed(() => ({ \n  core: i18nText('panelBanner.groups.core', 'Core'), \n  adjust: i18nText('panelBanner.groups.adjust', 'Adjust'), \n  insights: i18nText('panelBanner.groups.insights', 'Insights'), \n  planning: i18nText('panelBanner.groups.planning', 'Planning'), \n  share: i18nText('panelBanner.groups.share', 'Share') \n}));\n\nconst pinnedSet = computed(() => new Set((props.pinnedKeys || []).filter(Boolean)));\n\nconst baseGroups = computed(() => {\n  const map = new Map();\n  // Pinned group\n  const pinned = (props.panels || []).filter(p => pinnedSet.value.has(p.key));\n  if (pinned.length) map.set('pinned', pinned);\n\n  for (const p of props.panels || []) {\n    if (pinnedSet.value.has(p.key)) continue; // skip already in pinned\n    const g = p.group || 'core';\n    if (!map.has(g)) map.set(g, []);\n    map.get(g).push(p);\n  }\n  const keys = Array.from(map.keys()).sort((a,b) => order.indexOf(a) - order.indexOf(b));\n  return keys.map(k => ({ key: k, title: k === 'pinned' ? 'Pinned' : (titles.value[k] || k), items: map.get(k) }));\n});\n\n// Mobile collapse state\nconst isMobile = ref(false);\nconst showMore = ref(false);\n\nfunction updateIsMobile() {\n  try { isMobile.value = window.innerWidth <= 768; } catch (_) { isMobile.value = false; }\n}\nonMounted(() => { updateIsMobile(); window.addEventListener('resize', updateIsMobile); });\nonUnmounted(() => { window.removeEventListener('resize', updateIsMobile); });\n\nconst collapsibleExists = computed(() => baseGroups.value.some(g => g.key !== 'core' && g.key !== 'pinned'));\n\nconst visibleGroups = computed(() => {\n  if (!isMobile.value) return baseGroups.value;\n  if (showMore.value) return baseGroups.value;\n  // Only show pinned and core when collapsed on mobile\n  return baseGroups.value.filter(g => g.key === 'pinned' || g.key === 'core');\n});\n\nconst flatPanels = computed(() => {\n  const out = [];\n  for (const g of baseGroups.value) { for (const p of g.items) out.push(p); }\n  return out;\n});\nconst currentIndex = computed(() => flatPanels.value.findIndex(p => p.key === props.modelValue));\nfunction onKeydown(e) {\n  if (!props.panels?.length) return;\n  if (e.key === 'ArrowRight') {\n    const i = (currentIndex.value + 1) % props.panels.length;\n    emit('update:modelValue', props.panels[i].key);\n    e.preventDefault();\n  } else if (e.key === 'ArrowLeft') {\n    const i = (currentIndex.value - 1 + props.panels.length) % props.panels.length;\n    emit('update:modelValue', props.panels[i].key);\n    e.preventDefault();\n  }\n}\n</script>\n\n<style scoped>\n.panel-banner {\n  position: sticky; top: 0; z-index: 5;\n  display: flex; flex-wrap: wrap; gap: 10px 14px; align-items: center; justify-content: flex-start;\n  background: rgba(255,255,255,0.75);\n  backdrop-filter: blur(8px);\n  border: 1px solid #e5e7eb; border-radius: 12px;\n  padding: 10px; box-shadow: 0 8px 30px rgba(0,0,0,0.06);\n  overflow-x: auto; -webkit-overflow-scrolling: touch;\n}\n.group-block { display: inline-flex; align-items: center; gap: 8px; flex-wrap: wrap; padding-right: 4px; }\n.group-label { font-size: 10px; letter-spacing: .08em; text-transform: uppercase; color: #6b7280; background: #f3f4f6; border: 1px solid #e5e7eb; border-radius: 9999px; padding: 4px 8px; }\n\n.tab { position: relative; display: inline-flex; align-items: center; gap: 6px; padding: 8px 12px; border-radius: 12px;\n  border: 1px solid #e5e7eb; background: #ffffff; cursor: pointer; color: #374151; font-weight: 600; line-height: 1; box-shadow: 0 1px 2px rgba(0,0,0,0.04); transition: all .15s ease; }\n.tab { min-height: 36px; }\n.tab .material-icons { font-size: 18px; opacity: .8; }\n.tab .label { white-space: nowrap; font-size: clamp(0.78rem, 0.6rem + 0.4vw, 0.9rem); }\n.tab.active { color: #0f172a; background: #eef2ff; border-color: #c7d2fe; box-shadow: 0 2px 8px rgba(99,102,241,0.15); }\n.tab:not(.active):hover { background: #f9fafb; transform: translateY(-1px); }\n\n.more-toggle { display: inline-flex; align-items: center; gap: 6px; padding: 8px 12px; border-radius: 12px; border: 1px solid #e5e7eb; background: #f9fafb; color: #374151; font-weight: 600; }\n.more-toggle .material-icons { font-size: 18px; }\n\n@media (max-width: 640px) {\n  .tab { padding: 6px 10px; min-height: 44px; }\n  .tab .label { font-size: 0.85rem; }\n}\n\n.compact .label { display: none; }\n</style>\n","import script from \"./PanelBanner.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PanelBanner.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PanelBanner.vue?vue&type=style&index=0&id=038d0246&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-038d0246\"]])\n\nexport default __exports__","<template>\n  <div v-if=\"show\" class=\"modal-backdrop\" @click=\"close\">\n    <div class=\"modal\" @click.stop>\n      <div class=\"header\">\n        <h3>Multi-Year Plan: {{ itemName }}</h3>\n        <button @click=\"close\" class=\"close-btn\">&times;</button>\n      </div>\n      <div class=\"body\">\n        <div class=\"section\">\n          <h4>Growth Profile</h4>\n          <div class=\"row\">\n            <label>Baseline growth (%)</label>\n            <input type=\"number\" step=\"0.1\" v-model.number=\"plan.baselineGrowth\" />\n            <label>Demographic adjustment (%)</label>\n            <input type=\"number\" step=\"0.1\" v-model.number=\"plan.demographicAdjustment\" />\n          </div>\n        </div>\n        \n        <div class=\"section\">\n          <h4>Level Adjustments</h4>\n          <div class=\"row\">\n            <label>One-time adjustment (%)</label>\n            <input type=\"number\" step=\"0.1\" v-model.number=\"plan.levelAdjustment\" />\n            <label>Apply from year</label>\n            <input type=\"number\" v-model.number=\"plan.startYear\" min=\"2024\" max=\"2040\" />\n          </div>\n        </div>\n\n        <div class=\"section\">\n          <h4>Policy Options</h4>\n          <div class=\"row\">\n            <label>Policy type</label>\n            <select v-model=\"plan.policyType\">\n              <option value=\"none\">No policy change</option>\n              <option value=\"expansion\">Program expansion</option>\n              <option value=\"efficiency\">Efficiency improvement</option>\n              <option value=\"reform\">Structural reform</option>\n            </select>\n            <label>Impact magnitude (%)</label>\n            <input type=\"number\" step=\"0.1\" v-model.number=\"plan.policyImpact\" />\n          </div>\n        </div>\n\n        <div class=\"section\">\n          <h4>Scenario Analysis</h4>\n          <div class=\"row\">\n            <label>Scenario</label>\n            <select v-model=\"selectedScenario\" @change=\"applyScenario\">\n              <option value=\"baseline\">Baseline</option>\n              <option value=\"conservative\">Conservative</option>\n              <option value=\"optimistic\">Optimistic</option>\n              <option value=\"crisis\">Crisis response</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div class=\"footer\">\n        <button class=\"btn\" @click=\"reset\">Reset</button>\n        <button class=\"btn\" @click=\"close\">Cancel</button>\n        <button class=\"btn primary\" @click=\"save\">Save Plan</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\n\nconst props = defineProps({\n  show: Boolean,\n  itemName: String,\n  itemId: String\n});\n\nconst emit = defineEmits(['close', 'save']);\n\nconst selectedScenario = ref('baseline');\n\nconst plan = reactive({\n  baselineGrowth: 2.0,\n  demographicAdjustment: 0.0,\n  levelAdjustment: 0.0,\n  startYear: 2024,\n  policyType: 'none',\n  policyImpact: 0.0\n});\n\nfunction close() {\n  emit('close');\n}\n\nfunction save() {\n  emit('save', { itemId: props.itemId, plan: { ...plan } });\n  close();\n}\n\nfunction reset() {\n  plan.baselineGrowth = 2.0;\n  plan.demographicAdjustment = 0.0;\n  plan.levelAdjustment = 0.0;\n  plan.startYear = 2024;\n  plan.policyType = 'none';\n  plan.policyImpact = 0.0;\n  selectedScenario.value = 'baseline';\n}\n\nfunction applyScenario() {\n  switch (selectedScenario.value) {\n    case 'conservative':\n      plan.baselineGrowth = 1.5;\n      plan.demographicAdjustment = 0.5;\n      break;\n    case 'optimistic':\n      plan.baselineGrowth = 3.0;\n      plan.demographicAdjustment = -0.2;\n      break;\n    case 'crisis':\n      plan.baselineGrowth = 5.0;\n      plan.levelAdjustment = 10.0;\n      break;\n    default:\n      reset();\n  }\n}\n</script>\n\n<style scoped>\n.modal-backdrop { position: fixed; inset: 0; background: rgba(0,0,0,0.5); display: flex; align-items: center; justify-content: center; z-index: 1000; }\n.modal { background: #fff; border-radius: 12px; max-width: 600px; width: 90vw; max-height: 80vh; overflow: hidden; box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1); }\n.header { display: flex; justify-content: space-between; align-items: center; padding: 12px 16px; border-bottom: 1px solid #e5e7eb; }\n.header h3 { margin: 0; font-size: 1.1rem; }\n.close-btn { background: none; border: none; font-size: 1.5rem; cursor: pointer; color: #6b7280; }\n.body { padding: 16px; max-height: 60vh; overflow-y: auto; }\n.section { margin-bottom: 16px; }\n.section h4 { margin: 0 0 8px 0; font-size: 0.9rem; color: #374151; }\n.row { display: grid; grid-template-columns: 1fr auto 1fr auto; gap: 6px; align-items: center; }\ninput, select { padding: 6px 8px; border: 1px solid #d1d5db; border-radius: 6px; }\n.footer { display: flex; justify-content: end; gap: 8px; padding: 10px 12px; border-top: 1px solid #e5e7eb; }\n\n.btn {\n  padding: 8px 16px;\n  border: 1px solid #3b82f6;\n  border-radius: 8px;\n  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);\n  color: #374151;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 2px 8px rgba(107, 114, 128, 0.15);\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  position: relative;\n  overflow: hidden;\n}\n\n.btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n  transition: left 0.5s;\n}\n\n.btn:hover {\n  background: linear-gradient(135deg, #e5e7eb 0%, #d1d5db 100%);\n  box-shadow: 0 4px 16px rgba(107, 114, 128, 0.2);\n  transform: translateY(-1px);\n  border-color: #6b7280;\n}\n\n.btn:hover::before {\n  left: 100%;\n}\n\n.btn:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 8px rgba(107, 114, 128, 0.15);\n}\n\n.btn.primary {\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  color: white;\n  border-color: #3b82f6;\n  box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n\n.btn.primary::before {\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n}\n\n.btn.primary:hover {\n  background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);\n  box-shadow: 0 4px 16px rgba(59, 130, 246, 0.4);\n  border-color: #2563eb;\n}\n\n.btn:disabled {\n  background: #6b7280;\n  border-color: #6b7280;\n  box-shadow: none;\n  cursor: not-allowed;\n  opacity: 0.6;\n  transform: none;\n}\n</style>","import script from \"./MultiYearItemPlanModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MultiYearItemPlanModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MultiYearItemPlanModal.vue?vue&type=style&index=0&id=fd6c5c18&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fd6c5c18\"]])\n\nexport default __exports__","<template>\n  <div class=\"panel-host\">\n    <PanelBanner \n      v-model=\"panel\" \n      :panels=\"panelDefs\" \n      :pinned-keys=\"pinned\"\n      :compact=\"isCompact\"\n    />\n\n    <div class=\"panel-body\">\n      <KeepAlive>\n        <component :is=\"currentComp\" @open-plan=\"openPlan\" />\n      </KeepAlive>\n    </div>\n\n    <MultiYearItemPlanModal\n      v-if=\"modal.open\"\n      :type=\"modal.type\"\n      :id=\"modal.id\"\n      :year=\"planning.baseYear\"\n      @close=\"modal.open = false\" />\n  </div>\n</template>\n\n<script setup>\nimport { computed, ref, watch, onMounted, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { defineAsyncComponent } from 'vue';\nimport PanelBanner from '@/domains/budget/components/PanelBanner.vue';\nimport MultiYearItemPlanModal from '@/domains/budget/components/MultiYearItemPlanModal.vue';\nimport { useMultiYearSettingsStore } from '@/domains/budget/store/multiYearSettings.js';\n\nconst planning = computed(() => useMultiYearSettingsStore().planning);\n\n// Pinned tabs and compact mode\nconst pinned = ['revenue','spending'];\nconst isCompact = ref(false);\nfunction handleResize() { try { isCompact.value = window.innerWidth < 900; } catch (_) { isCompact.value = false; } }\nonMounted(() => { handleResize(); window.addEventListener('resize', handleResize); });\nonUnmounted(() => { window.removeEventListener('resize', handleResize); });\n\nconst AssumptionsPanel = defineAsyncComponent(() => import('@/domains/budget/components/AssumptionsPanel.vue'));\nconst MultiYearProjectionsPanel = defineAsyncComponent(() => import('@/domains/budget/components/MultiYearProjectionsPanel.vue'));\nconst OverviewPanel = defineAsyncComponent(() => import('@/domains/budget/components/panels/OverviewPanel.vue'));\nconst AnalysisPanel = defineAsyncComponent(() => import('@/domains/budget/components/panels/AnalysisPanel.vue'));\nconst GoalsPanel = defineAsyncComponent(() => import('@/domains/budget/components/panels/GoalsPanel.vue'));\nconst PresetsPanel = defineAsyncComponent(() => import('@/domains/budget/components/panels/PresetsPanel.vue'));\nconst ItemsPlanList = defineAsyncComponent(() => import('@/domains/budget/components/ItemsPlanList.vue'));\nconst BudgetExportPanel = defineAsyncComponent(() => import('@/domains/budget/components/BudgetExportPanel.vue'));\nconst ResultsPanel = defineAsyncComponent(() => import('@/domains/budget/components/BudgetResults.vue'));\nconst RevenuePanel = defineAsyncComponent(() => import('@/domains/budget/components/RevenuePanel.vue'));\nconst SpendingPanel = defineAsyncComponent(() => import('@/domains/budget/components/SpendingPanel.vue'));\nconst SentimentPanel = defineAsyncComponent(() => import('@/domains/sentiment/components/SentimentPanel.vue'));\n\n// Concise labels + intuitive grouping to reduce overwhelm\nconst panelDefs = [\n  { key: 'overview',    label: 'Overview',   icon: 'dashboard',              comp: OverviewPanel,        group: 'core' },\n  { key: 'goals',       label: 'Goals',      icon: 'flag',                   comp: GoalsPanel,           group: 'core' },\n\n  { key: 'revenue',     label: 'Revenue',    icon: 'payments',               comp: RevenuePanel,         group: 'adjust' },\n  { key: 'spending',    label: 'Spending',   icon: 'account_balance_wallet', comp: SpendingPanel,        group: 'adjust' },\n  { key: 'presets',     label: 'Presets',    icon: 'tune',                   comp: PresetsPanel,         group: 'adjust' },\n  { key: 'assumptions', label: 'Assumptions',icon: 'tune',                   comp: AssumptionsPanel,     group: 'adjust' },\n  { key: 'items',       label: 'Items',      icon: 'list_alt',               comp: ItemsPlanList,        group: 'adjust' },\n\n  { key: 'results',     label: 'Results',    icon: 'analytics',              comp: ResultsPanel,         group: 'insights' },\n  { key: 'analysis',    label: 'Analysis',   icon: 'bar_chart',              comp: AnalysisPanel,        group: 'insights' },\n  { key: 'sentiment',   label: 'Sentiment',  icon: 'sentiment_satisfied',    comp: SentimentPanel,       group: 'insights' },\n\n  { key: 'projections', label: 'Projections',icon: 'stacked_line_chart',     comp: MultiYearProjectionsPanel, group: 'planning' },\n  { key: 'export',      label: 'Export',     icon: 'ios_share',              comp: BudgetExportPanel,    group: 'share' },\n];\n\nconst route = useRoute?.() || null;\nconst router = useRouter?.() || null;\n\nconst panel = ref(resolveInitialPanel());\nfunction resolveInitialPanel() {\n  const qp = route?.query?.panel;\n  const valid = panelDefs.some(d => d.key === qp);\n  return valid ? qp : 'overview';\n}\n\nwatch(panel, (p) => {\n  if (!router || !route) return;\n  router.replace({ query: { ...route.query, panel: p } }).catch(() => {});\n});\n\nconst currentComp = computed(() => (panelDefs.find(d => d.key === panel.value) || panelDefs[0]).comp);\n\nconst modal = ref({ open: false, type: 'revenue', id: null });\nfunction openPlan(type, id) { modal.value = { open: true, type, id }; }\n</script>\n\n<style scoped>\n.panel-host { display: grid; gap: 12px; max-width: 1100px; margin: 0 auto; width: 100%; }\n.panel-body { min-height: 320px; border: 1px solid #e5e7eb; border-radius: 12px; padding: 12px; background: #fff; box-shadow: 0 8px 24px rgba(0,0,0,0.04); }\n</style>\n","import script from \"./PanelHost.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PanelHost.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PanelHost.vue?vue&type=style&index=0&id=50dd07e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-50dd07e2\"]])\n\nexport default __exports__","<template>\n  <div class=\"w-full\">\n    <div class=\"slider-labels\">\n      <span>{{ min }}%</span>\n      <span class=\"current-rate\">Current: {{ modelValue }}%</span>\n      <span>{{ max }}%</span>\n    </div>\n    <input \n      :id=\"id\" \n      type=\"range\" \n      :value=\"modelValue\" \n      :min=\"min\"\n      :max=\"max\" \n      :step=\"step\" \n      class=\"slider\"\n      :disabled=\"disabled\"\n      @input=\"updateValue($event.target.value)\"\n    >\n    <div class=\"input-controls\">\n      <div class=\"input-group\">\n        <input \n          type=\"number\" \n          :value=\"modelValue\"\n          :min=\"min\"\n          :max=\"max\"\n          :step=\"step\"\n          class=\"percentage-input\"\n          :disabled=\"disabled\"\n          @input=\"updateValue($event.target.value)\"\n        >\n        <span class=\"input-suffix\">%</span>\n      </div>\n      <div class=\"input-group\">\n        <input \n          type=\"number\" \n          :value=\"amountValue\"\n          class=\"amount-input\"\n          :step=\"0.1\"\n          :disabled=\"disabled\"\n          @input=\"updateAmountValue($event.target.value)\"\n        >\n        <span class=\"input-suffix\">B</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { createDebouncedFunction } from '@/utils/debounceUtils';\n\nconst props = defineProps({\n  modelValue: {\n    type: Number,\n    required: true\n  },\n  min: {\n    type: Number,\n    default: 0\n  },\n  max: {\n    type: Number,\n    default: 200\n  },\n  step: {\n    type: Number,\n    default: 1\n  },\n  id: {\n    type: String,\n    default: ''\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  baseAmount: {\n    type: Number,\n    default: 0\n  }\n});\n\nconst emit = defineEmits(['update:modelValue']);\n\n// Use the new debouncing utility\nconst debouncedEmitUpdate = createDebouncedFunction((numValue) => {\n  emit('update:modelValue', numValue);\n}, 200);\n\nfunction updateValue(value) {\n  const numValue = Number(value);\n  if (numValue >= props.min && numValue <= props.max) {\n    debouncedEmitUpdate(numValue);\n  }\n}\n\n// Calculate the amount based on the percentage\nconst amountValue = computed(() => {\n  return (props.baseAmount * props.modelValue / 100).toFixed(1);\n});\n\n// Use the same debounced function for amount input updates\nfunction updateAmountValue(value) {\n  const numValue = Number(value);\n  if (props.baseAmount > 0) {\n    const newPercentage = (numValue / props.baseAmount) * 100;\n    if (newPercentage >= props.min && newPercentage <= props.max) {\n      debouncedEmitUpdate(newPercentage);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.slider-labels {\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.7rem;\n  color: #718096;\n  margin-bottom: 2px;\n}\n\n.slider {\n  width: 100%;\n  -webkit-appearance: none;\n  appearance: none;\n  height: 6px;\n  border-radius: 3px;\n  background: #e2e8f0;\n  outline: none;\n  margin: 5px 0;\n}\n\n.slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: var(--tile-color, #4299E1);\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.slider::-moz-range-thumb {\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: var(--tile-color, #4299E1);\n  cursor: pointer;\n  transition: all 0.2s ease;\n  border: none;\n}\n\n.slider::-webkit-slider-thumb:hover {\n  transform: scale(1.2);\n}\n\n.slider::-moz-range-thumb:hover {\n  transform: scale(1.2);\n}\n\n.input-controls {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 8px;\n  gap: 8px;\n}\n\n.input-group {\n  display: flex;\n  align-items: center;\n  position: relative;\n  flex: 1;\n}\n\n.percentage-input, .amount-input {\n  width: 100%;\n  padding: 4px 24px 4px 8px;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  font-size: 0.875rem;\n  outline: none;\n  transition: border-color 0.2s ease;\n}\n\n.percentage-input:focus, .amount-input:focus {\n  border-color: #4299e1;\n  box-shadow: 0 0 0 2px rgba(66, 153, 225, 0.1);\n}\n\n.input-suffix {\n  position: absolute;\n  right: 8px;\n  color: #718096;\n  font-size: 0.75rem;\n  pointer-events: none;\n}\n\n.current-rate {\n  font-weight: 500;\n}\n\n/* Disabled state */\n.slider:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.percentage-input:disabled, .amount-input:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  background-color: #f7fafc;\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n</style>\n","import script from \"./PercentageInput.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PercentageInput.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PercentageInput.vue?vue&type=style&index=0&id=418bea50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-418bea50\"]])\n\nexport default __exports__","<template>\n  <div class=\"proj-lite\">\n    <div class=\"panel-header\">\n      <h4>{{ t('projectionsPanel.title', 'Projections') }}</h4>\n    </div>\n\n    <details v-if=\"showControls\" class=\"planning-controls\" open>\n      <summary>{{ t('projectionsPanel.planningControls', 'Planning Controls') }}</summary>\n      <div class=\"controls-grid\">\n        <div class=\"row\">\n          <label :title=\"t('projectionsPanel.programSpendingBoostTooltip', 'One-time adjustment to all program spending levels')\">{{ t('projectionsPanel.programSpendingBoost', 'Program spending boost (%)') }}\n            <span class=\"info-icon\" :title=\"t('projectionsPanel.programSpendingBoostTooltip', 'Applies a one-time level change to program spending in the base year (and carried through).')\">info</span>\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.5\"\n            :min=\"-15\"\n            :max=\"15\"\n            v-model.number=\"settings.spendingGlobal.levelPct\"\n            @change=\"clampGlobal()\"\n          />\n        </div>\n        <div class=\"row\">\n          <label :title=\"t('projectionsPanel.speedUpSpendingGrowthTooltip', 'Adjusts how fast program spending grows each year. +0.5 means all categories grow 0.5 percentage points faster annually.')\">{{ t('projectionsPanel.speedUpSpendingGrowth', 'Speed up spending growth (pp)') }}\n            <span class=\"info-icon\" :title=\"t('projectionsPanel.speedUpSpendingGrowthTooltip', 'Adds or subtracts percentage points to the annual growth rate applied to all categories.')\">info</span>\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            v-model.number=\"settings.spendingGlobal.growthDeltaPct\"\n            @change=\"clampGlobal()\"\n          />\n        </div>\n      </div>\n      <SpendingGrowthControls />\n    </details>\n    <!-- Interactive multi-series line chart -->\n    <div class=\"interactive-chart\">\n      <div class=\"chart-box\">\n        <Line :data=\"lineData\" :options=\"lineOptions\" />\n      </div>\n    </div>\n    <div class=\"mini-charts\">\n      <!-- Deficit chart (historical + projected) using Chart.js for clarity & tooltips -->\n      <div class=\"chart\" :aria-label=\"t('projectionsPanel.charts.deficitChartAria', 'Historical and projected deficit line chart')\" ref=\"defChartEl\">\n        <div class=\"chart-title\">{{ t('projectionsPanel.charts.deficitChartTitle', 'Deficit: Historical + Projections') }}</div>\n        <div class=\"chart-box-tall\">\n          <Line :data=\"defChartData\" :options=\"defChartOptions\" />\n        </div>\n      </div>\n\n      <!-- Debt/GDP chart (historical + projected) using Chart.js -->\n      <div class=\"chart\" :aria-label=\"t('projectionsPanel.charts.debtGdpChartAria', 'Historical and projected debt-to-GDP line chart')\">\n        <div class=\"chart-title\">{{ t('projectionsPanel.charts.debtGdpChartTitle', 'Debt-to-GDP: Historical + Projections (%)') }}</div>\n        <div class=\"chart-box-tall\">\n          <Line :data=\"debtGdpChartData\" :options=\"debtGdpChartOptions\" />\n        </div>\n      </div>\n    </div>\n    <!-- Removed nested projections table to avoid duplication -->\n  </div>\n</template>\n\n<script setup>\ndefineProps({ showControls: { type: Boolean, default: true } });\nimport { computed, ref, onMounted, onUnmounted } from 'vue';\nimport { useBudgetSimulatorStore } from '@/domains/budget/store/budgetSimulator';\nimport { useMultiYearSettingsStore } from '@/domains/budget/store/multiYearSettings.js';\nimport { makeBaseSnapshotFromStore } from '@/domains/budget/utils/projectionAdapters.js';\nimport { useI18n } from '@/i18n';\n\nconst { t } = useI18n();\nimport { projectAll } from '@/domains/budget/utils/projections.js';\nimport { Line } from 'vue-chartjs'\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js'\nimport annotationPlugin from 'chartjs-plugin-annotation'\nimport SpendingGrowthControls from '@/domains/budget/components/SpendingGrowthControls.vue';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler, annotationPlugin)\n\nconst budget = useBudgetSimulatorStore();\nconst settings = useMultiYearSettingsStore();\n\n// Nested table removed; keep charts focused here\n// Responsive width for the mini SVG charts\nconst defChartEl = ref(null);\nconst width = ref(520);\n// height variable removed - Chart.js handles sizing\n\n// ResizeObserver for responsive chart sizing\nlet resizeObserver = null;\n\nonMounted(() => {\n  if (typeof window !== 'undefined' && defChartEl.value) {\n    try {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(defChartEl.value);\n    } catch (_) {\n      // Ignore resize errors in SSR/test environments\n    }\n  }\n});\n\nonUnmounted(() => {\n  if (resizeObserver) {\n    try {\n      resizeObserver.disconnect();\n    } catch (_) {\n      // Ignore cancellation errors for cleanup safety\n    }\n  }\n});\n\nfunction handleResize() {\n  if (defChartEl.value) {\n    width.value = defChartEl.value.clientWidth;\n  }\n}\n\n// Historical deficit data (2004-05 to 2023-24)\nconst historicalDeficitData = [\n  { year: '2004-05', value: 1.5 },\n  { year: '2005-06', value: 13.2 },\n  { year: '2006-07', value: 13.8 },\n  { year: '2007-08', value: 9.6 },\n  { year: '2008-09', value: -9.1 },\n  { year: '2009-10', value: -56.4 },\n  { year: '2010-11', value: -35.0 },\n  { year: '2011-12', value: -28.0 },\n  { year: '2012-13', value: -21.3 },\n  { year: '2013-14', value: -8.1 },\n  { year: '2014-15', value: -0.6 },\n  { year: '2015-16', value: -2.9 },\n  { year: '2016-17', value: -19.0 },\n  { year: '2017-18', value: -19.0 },\n  { year: '2018-19', value: -14.0 },\n  { year: '2019-20', value: -39.4 },\n  { year: '2020-21', value: -327.7 },\n  { year: '2021-22', value: -90.3 },\n  { year: '2022-23', value: -35.3 },\n  { year: '2023-24', value: -61.9 },\n];\n\nconst rows = computed(() => {\n  const base = makeBaseSnapshotFromStore(budget);\n  const projectionSettings = {\n    planning: settings.planning,\n    economic: settings.economic,\n    revenueElasticity: settings.revenueElasticity,\n    spendingGrowth: settings.spendingGrowth,\n    categoryUserDelta: settings.categoryUserDelta,\n    spendingGlobal: settings.spendingGlobal,\n    yearOverrides: settings.yearOverrides,\n  };\n  return projectAll({ base, settings: projectionSettings });\n});\n\n// Multi-series line chart data\nconst lineData = computed(() => {\n  const labels = rows.value.map(r => r.year.toString());\n  return {\n    labels,\n  datasets: [\n      {\n        label: 'Revenue',\n        data: rows.value.map(r => r.revenueTotal),\n        borderColor: '#10b981',\n        backgroundColor: 'rgba(16, 185, 129, 0.1)',\n        fill: false,\n        tension: 0.1,\n      },\n      {\n        label: 'Program Spending',\n        data: rows.value.map(r => r.programSpending),\n        borderColor: '#3b82f6',\n        backgroundColor: 'rgba(59, 130, 246, 0.1)',\n        fill: false,\n        tension: 0.1,\n      },\n      {\n        label: 'Interest',\n        data: rows.value.map(r => r.interest),\n        borderColor: '#f59e0b',\n        backgroundColor: 'rgba(245, 158, 11, 0.1)',\n        fill: false,\n        tension: 0.1,\n      },\n      {\n        label: 'Deficit',\n        data: rows.value.map(r => r.deficit),\n        borderColor: '#ef4444',\n        backgroundColor: 'rgba(239, 68, 68, 0.1)',\n        fill: false,\n        tension: 0.1,\n      },\n    ],\n  };\n});\n\nconst lineOptions = computed(() => ({\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    title: {\n      display: true,\n      text: 'Multi-Year Fiscal Projections',\n      font: { size: 16, weight: 'bold' },\n    },\n    legend: {\n      position: 'top',\n      labels: {\n        usePointStyle: true,\n        padding: 20,\n      },\n    },\n    tooltip: {\n      callbacks: {\n        label: (context) => {\n          const label = context.dataset.label || '';\n          const value = context.parsed.y;\n          return `${label}: $${value.toFixed(1)}B`;\n        },\n      },\n    },\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: 'Year',\n      },\n      grid: {\n        color: 'rgba(0,0,0,0.06)',\n      },\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Billions ($)',\n      },\n      grid: {\n        color: 'rgba(0,0,0,0.06)',\n      },\n      ticks: {\n        callback: (value) => `$${value}B`,\n      },\n    },\n  },\n  interaction: {\n    intersect: false,\n    mode: 'index',\n  },\n}));\n\n// Deficit chart data (historical + projected)\nconst defChartData = computed(() => {\n  const historicalLabels = historicalDeficitData.map(d => d.year);\n  const projectedLabels = rows.value.map(r => r.year.toString());\n  const allLabels = [...historicalLabels, ...projectedLabels];\n  \n  const historicalValues = historicalDeficitData.map(d => d.value);\n  const projectedValues = rows.value.map(r => r.deficit);\n  \n  // Create separate datasets for historical vs projected\n  const historicalData = [...historicalValues, ...new Array(projectedValues.length).fill(null)];\n  const projectedData = [...new Array(historicalValues.length).fill(null), ...projectedValues];\n  \n  return {\n    labels: allLabels,\n    datasets: [\n      {\n        label: 'Historical',\n        data: historicalData,\n        borderColor: '#6b7280',\n        backgroundColor: 'rgba(107, 114, 128, 0.1)',\n        borderDash: [5, 5],\n        fill: false,\n        tension: 0.1,\n        pointRadius: 3,\n        pointHoverRadius: 5,\n      },\n      {\n        label: 'Projected',\n        data: projectedData,\n        borderColor: (ctx) => {\n          const value = ctx.parsed?.y;\n          return value >= 0 ? '#10b981' : '#ef4444'; // Green for surplus, red for deficit\n        },\n        backgroundColor: (ctx) => {\n          const value = ctx.parsed?.y;\n          return value >= 0 ? 'rgba(16, 185, 129, 0.1)' : 'rgba(239, 68, 68, 0.1)';\n        },\n        fill: false,\n        tension: 0.1,\n        pointRadius: 4,\n        pointHoverRadius: 6,\n      },\n    ],\n  };\n});\n\nconst defChartOptions = computed(() => {\n  const allValues = [\n    ...historicalDeficitData.map(d => d.value),\n    ...rows.value.map(r => r.deficit)\n  ];\n  const min = Math.min(...allValues);\n  const max = Math.max(...allValues);\n  const padding = (max - min) * 0.1;\n  \n  return {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Deficit: Historical + Projections',\n        font: { size: 14, weight: 'bold' },\n      },\n      legend: {\n        position: 'top',\n        labels: {\n          usePointStyle: true,\n          padding: 15,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const label = context.dataset.label || '';\n            const value = context.parsed?.y;\n            if (value === null) return null;\n            const sign = value >= 0 ? '+' : '';\n            return `${label}: ${sign}$${value.toFixed(1)}B`;\n          },\n        },\n      },\n      annotation: {\n        annotations: {\n          line1: {\n            type: 'line',\n            yMin: 0,\n            yMax: 0,\n            borderColor: '#374151',\n            borderWidth: 2,\n            borderDash: [3, 3],\n            label: {\n              content: 'Balanced Budget',\n              enabled: true,\n              position: 'end',\n            },\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Year',\n        },\n        grid: {\n          color: 'rgba(0,0,0,0.06)',\n        },\n        ticks: {\n          maxTicksLimit: Math.max(4, Math.floor(width.value / 80)),\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Billions ($)',\n        },\n        suggestedMin: min - padding,\n        suggestedMax: max + padding,\n        ticks: {\n          callback: (v) => `$${v}B`,\n        },\n        grid: {\n          color: 'rgba(0,0,0,0.06)',\n        },\n      },\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index',\n    },\n  };\n});\n\n// Debt-to-GDP chart data\nconst debtGdpChartData = computed(() => {\n  const labels = rows.value.map(r => r.year.toString());\n  return {\n    labels,\n    datasets: [\n      {\n        label: 'Debt-to-GDP',\n        data: rows.value.map(r => r.debtToGDP * 100),\n        borderColor: '#8b5cf6',\n        backgroundColor: 'rgba(139, 92, 246, 0.1)',\n        fill: false,\n        tension: 0.1,\n        pointRadius: 4,\n        pointHoverRadius: 6,\n      },\n    ],\n  };\n});\n\nconst debtGdpChartOptions = computed(() => {\n  const values = rows.value.map(r => r.debtToGDP * 100);\n  const min = Math.min(...values);\n  const max = Math.max(...values);\n  const padding = (max - min) * 0.1;\n  \n  return {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Debt-to-GDP: Historical + Projections (%)',\n        font: { size: 14, weight: 'bold' },\n      },\n      legend: {\n        position: 'top',\n        labels: {\n          usePointStyle: true,\n          padding: 15,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const value = context.parsed.y;\n            return `Debt-to-GDP: ${value.toFixed(1)}%`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Year',\n        },\n        grid: {\n          color: 'rgba(0,0,0,0.06)',\n        },\n        ticks: {\n          maxTicksLimit: Math.max(4, Math.floor(width.value / 80)),\n        },\n      },\n      y: {\n        title: {\n          display: true,\n          text: '% of GDP',\n        },\n        suggestedMin: Math.max(0, min - padding),\n        suggestedMax: max + padding,\n        ticks: {\n          callback: (v) => `${v}%`,\n        },\n        grid: {\n          color: 'rgba(0,0,0,0.06)',\n        },\n      },\n    },\n    interaction: {\n      intersect: false,\n      mode: 'index',\n    },\n  };\n});\n\nfunction clampGlobal() {\n  settings.spendingGlobal.levelPct = Math.max(-15, Math.min(15, Number(settings.spendingGlobal.levelPct || 0)));\n  settings.spendingGlobal.growthDeltaPct = Number(settings.spendingGlobal.growthDeltaPct || 0);\n}\n</script>\n\n<style scoped>\n.proj-lite { display: grid; gap: 16px; }\n.panel-header { display: flex; align-items: center; justify-content: space-between; margin-bottom: 8px; }\n.panel-header h4 { margin: 0; font-size: 1.125rem; color: #111827; }\n.actions { display: flex; gap: 8px; }\n\n.btn {\n  padding: 6px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: #fff;\n  color: #374151;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n.btn:hover:not(:disabled) {\n  background: #f9fafb;\n  border-color: #9ca3af;\n}\n.btn:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.interactive-chart {\n  background: #fff;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n}\n\n.chart-box {\n  height: clamp(300px, 25vh, 500px);\n  position: relative;\n}\n\n.mini-charts {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 16px;\n}\n\n.chart {\n  background: #fff;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 12px;\n}\n\n.chart-title {\n  font-size: 0.875rem;\n  font-weight: 600;\n  color: #374151;\n  margin-bottom: 8px;\n  text-align: center;\n}\n\n.chart-box-tall {\n  height: clamp(200px, 20vh, 350px);\n  position: relative;\n}\n\n.table-wrap {\n  background: #fff;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n}\n\ndetails.planning-controls { border: 1px solid #e5e7eb; border-radius: 8px; background: #fafbff; padding: 8px 10px; }\ndetails.planning-controls > summary { font-weight: 600; color: #374151; cursor: pointer; }\n.controls-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px; margin: 8px 0 4px; }\n.controls-grid .row { display: flex; flex-direction: column; gap: 4px; }\n.controls-grid input { padding: 6px 8px; border: 1px solid #d1d5db; border-radius: 6px; }\n</style>\n","import script from \"./ProjectionsPanelLite.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProjectionsPanelLite.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProjectionsPanelLite.vue?vue&type=style&index=0&id=7a1452d5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7a1452d5\"]])\n\nexport default __exports__","<template>\n  <div class=\"revenue-sliders\">\n    <details class=\"revenue-explanation mb-4 bg-gray-50 rounded-lg\">\n      <summary class=\"p-3 cursor-pointer text-gray-800 font-medium\">{{ i18nText('simulator.controls.revenue.summaryTitle', 'About these sliders') }}</summary>\n      <div class=\"p-4 pt-2\">\n        <p class=\"text-sm text-gray-700 mb-2\">{{ i18nText('simulator.controls.revenue.summaryBody', 'The Budget Simulator uses a simplified approach to tax calculations to help you understand the fiscal impact of tax changes. Instead of detailed tax brackets, it uses average effective rates:') }}</p>\n        <ul class=\"text-sm text-gray-600 list-disc pl-5 mb-2\">\n          <li>{{ i18nText('simulator.controls.revenue.summaryItems.personal', 'Personal Income Tax: Base rate of 21% (2024) with $10 billion in revenue per percentage point') }}</li>\n          <li>{{ i18nText('simulator.controls.revenue.summaryItems.corporate', 'Corporate Income Tax: Base rate of 15% (2024) with $5.33 billion in revenue per percentage point') }}</li>\n          <li>{{ i18nText('simulator.controls.revenue.summaryItems.credits', 'Tax credits and expenditures can be adjusted separately to see their impact on revenue') }}</li>\n        </ul>\n        <p class=\"text-sm text-gray-700\">{{ i18nText('simulator.controls.revenue.summaryFooter', 'This approach focuses on overall revenue impact rather than individual taxpayer scenarios.') }}</p>\n      </div>\n    </details>\n    <div class=\"revenue-controls\">\n      <div class=\"overflow-y-auto pr-2 max-h-[60vh]\">\n        <!-- {{ i18nText('simulator.controls.revenue.groupTitle.incomeTaxes', 'Income Taxes') }} Group -->\n        <div class=\"mb-4\">\n          <div\n            class=\"group-header\"\n            @click=\"toggleGroupExpansion('incomeTaxes')\"\n          >\n            <h3 class=\"text-sm font-medium text-gray-700\">\n              {{ i18nText('simulator.controls.revenue.groupTitle.incomeTaxes', 'Income Taxes') }}\n            </h3>\n            <div class=\"group-total\">\n              ${{ formatCurrency(incomeTaxTotal, 1) }}B\n            </div>\n            <div class=\"toggle-button\">\n              {{ expandedGroups.incomeTaxes ? i18nText('simulator.controls.common.collapse', 'Collapse') : i18nText('simulator.controls.common.expand', 'Expand') }}\n              <span\n                class=\"icon ml-1\"\n                :class=\"{ 'rotated': expandedGroups.incomeTaxes }\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"12\"\n                  height=\"12\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <polyline points=\"6 9 12 15 18 9\" />\n                </svg>\n              </span>\n            </div>\n          </div>\n          \n          <div\n            class=\"group-content\"\n            :class=\"{ 'expanded': expandedGroups.incomeTaxes }\"\n          >\n            <div class=\"revenue-grid\">\n              <!-- {{ i18nText('simulator.controls.revenue.labels.personal', 'Personal Income Tax') }} -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.personalIncomeTax?.color || '#4299E1' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('personalIncomeTax', 'revenue', budgetStore.revenueSources.personalIncomeTax?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('personalIncomeTax', 'revenue', budgetStore.revenueSources.personalIncomeTax?.name || '')\"\n                      :description=\"localizedDescription('personalIncomeTax', 'revenue', budgetStore.revenueSources.personalIncomeTax?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.personalIncomeTax?.base || 0\"\n                      :current-setting=\"revenueRates.personalIncomeTax\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.personalIncomeTax?.adjustedAmount || budgetStore.revenueSources.personalIncomeTax?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('personalIncomeTax') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('personalIncomeTax') > 0,\n                        'negative': getAdditionalRevenue('personalIncomeTax') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('personalIncomeTax') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('personalIncomeTax'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.personalIncomeTax?.base * budgetStore.revenueSources.personalIncomeTax?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.personalIncomeTax?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.personalIncomeTax?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.personalIncomeTax?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.personalIncomeTax?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.personalIncomeTax?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    {{ i18nText('simulator.controls.revenue.notes.personalIncomeTax', 'Personal Income Tax represents the federal income tax collected from individuals and households, including employment income, investment income, and other taxable sources. This is the largest source of federal revenue and is represented as \"personalIncomeTax\" in all calculations.') }}\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.personalIncomeTax?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  {{ i18nText('simulator.controls.revenue.personal.expenditureNote', 'This revenue figure includes the impact of personal tax credit and deferral adjustments.') }}\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('personalIncomeTax', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.personalIncomeTax }}%</span>\n                    <span>{{ getLabel('personalIncomeTax', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.personalIncomeTax\" \n                    type=\"range\" \n                    :min=\"getLabel('personalIncomeTax', 'min')\" \n                    :max=\"getLabel('personalIncomeTax', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('personalIncomeTax', localSliderValues.personalIncomeTax)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.personalIncomeTax\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('personalIncomeTax', 'min')\"\n                        :max=\"getLabel('personalIncomeTax', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('personalIncomeTax')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.personalIncomeTax\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('personalIncomeTax')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- {{ i18nText('simulator.controls.revenue.labels.corporate', 'Corporate Income Tax') }} -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.corporateIncomeTax?.color || '#48BB78' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('corporateIncomeTax', 'revenue', budgetStore.revenueSources.corporateIncomeTax?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('corporateIncomeTax', 'revenue', budgetStore.revenueSources.corporateIncomeTax?.name || '')\"\n                      :description=\"localizedDescription('corporateIncomeTax', 'revenue', budgetStore.revenueSources.corporateIncomeTax?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.corporateIncomeTax?.base || 0\"\n                      :current-setting=\"revenueRates.corporateIncomeTax\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.corporateIncomeTax?.adjustedAmount || budgetStore.revenueSources.corporateIncomeTax?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('corporateIncomeTax') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('corporateIncomeTax') > 0,\n                        'negative': getAdditionalRevenue('corporateIncomeTax') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('corporateIncomeTax') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('corporateIncomeTax'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.corporateIncomeTax?.base * budgetStore.revenueSources.corporateIncomeTax?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.corporateIncomeTax?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.corporateIncomeTax?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.corporateIncomeTax?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.corporateIncomeTax?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.corporateIncomeTax?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    {{ i18nText('simulator.controls.revenue.notes.corporateIncomeTax', 'Corporate Income Tax is a federal tax levied on the taxable income of corporations operating in Canada. It includes both the general corporate tax rate (15%) and the small business rate (9%), with various deductions and credits available.') }}\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.corporateIncomeTax?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  {{ i18nText('simulator.controls.revenue.corporate.expenditureNote', 'This revenue figure includes the impact of corporate tax expenditure adjustments.') }}\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('corporateIncomeTax', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.corporateIncomeTax }}%</span>\n                    <span>{{ getLabel('corporateIncomeTax', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.corporateIncomeTax\" \n                    type=\"range\" \n                    :min=\"getLabel('corporateIncomeTax', 'min')\" \n                    :max=\"getLabel('corporateIncomeTax', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('corporateIncomeTax', localSliderValues.corporateIncomeTax)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.corporateIncomeTax\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('corporateIncomeTax', 'min')\"\n                        :max=\"getLabel('corporateIncomeTax', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('corporateIncomeTax')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.corporateIncomeTax\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('corporateIncomeTax')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- {{ i18nText('simulator.controls.revenue.groupTitle.consumptionTaxes', 'Consumption Taxes') }} Group -->\n        <div class=\"mb-4\">\n          <div\n            class=\"group-header\"\n            @click=\"toggleGroupExpansion('consumptionTaxes')\"\n          >\n            <h3 class=\"text-sm font-medium text-gray-700\">\n              {{ i18nText('simulator.controls.revenue.groupTitle.consumptionTaxes', 'Consumption Taxes') }}\n            </h3>\n            <div class=\"group-total\">\n              ${{ formatCurrency(consumptionTaxTotal, 1) }}B\n            </div>\n            <div class=\"toggle-button\">\n              {{ expandedGroups.consumptionTaxes ? i18nText('simulator.controls.common.collapse', 'Collapse') : i18nText('simulator.controls.common.expand', 'Expand') }}\n              <span\n                class=\"icon ml-1\"\n                :class=\"{ 'rotated': expandedGroups.consumptionTaxes }\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"12\"\n                  height=\"12\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <polyline points=\"6 9 12 15 18 9\" />\n                </svg>\n              </span>\n            </div>\n          </div>\n          \n          <div\n            class=\"group-content\"\n            :class=\"{ 'expanded': expandedGroups.consumptionTaxes }\"\n          >\n            <div class=\"revenue-grid\">\n              <!-- GST/HST -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.gst?.color || '#ED8936' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('gst', 'revenue', budgetStore.revenueSources.gst?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('gst', 'revenue', budgetStore.revenueSources.gst?.name || '')\"\n                      :description=\"localizedDescription('gst', 'revenue', budgetStore.revenueSources.gst?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.gst?.base || 0\"\n                      :current-setting=\"revenueRates.gst\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.gst?.adjustedAmount || budgetStore.revenueSources.gst?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('gst') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('gst') > 0,\n                        'negative': getAdditionalRevenue('gst') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('gst') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('gst'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.gst?.base * budgetStore.revenueSources.gst?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.gst?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.gst?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.gst?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.gst?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.gst?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    The Goods and Services Tax (GST) and Harmonized Sales Tax (HST) is a 5% federal value-added tax applied to most goods and services in Canada. The HST combines the GST with provincial sales tax in participating provinces. This tax is a significant source of federal revenue.\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.gst?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  This revenue figure includes the impact of GST/HST expenditure adjustments.\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('gst', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.gst }}%</span>\n                    <span>{{ getLabel('gst', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.gst\" \n                    type=\"range\" \n                    :min=\"getLabel('gst', 'min')\" \n                    :max=\"getLabel('gst', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('gst', localSliderValues.gst)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.gst\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('gst', 'min')\"\n                        :max=\"getLabel('gst', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('gst')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.gst\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('gst')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Customs Duties -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.customsDuties?.color || '#F56565' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('customsAndImportDuties', 'revenue', budgetStore.revenueSources.customsDuties?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('customsAndImportDuties', 'revenue', budgetStore.revenueSources.customsDuties?.name || '')\"\n                      :description=\"localizedDescription('customsAndImportDuties', 'revenue', budgetStore.revenueSources.customsDuties?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.customsDuties?.base || 0\"\n                      :current-setting=\"revenueRates.customsDuties\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.customsDuties?.adjustedAmount || budgetStore.revenueSources.customsDuties?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('customsDuties') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('customsDuties') > 0,\n                        'negative': getAdditionalRevenue('customsDuties') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('customsDuties') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('customsDuties'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.customsDuties?.base * budgetStore.revenueSources.customsDuties?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.customsDuties?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.customsDuties?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.customsDuties?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.customsDuties?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.customsDuties?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    Customs Duties are federal taxes and charges imposed on goods imported into Canada. These include tariffs based on international trade agreements, anti-dumping duties, and countervailing duties. The rates vary by product category and country of origin.\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.customsDuties?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  This revenue figure includes the impact of customs duties expenditure adjustments.\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('customsDuties', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.customsDuties }}%</span>\n                    <span>{{ getLabel('customsDuties', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.customsDuties\" \n                    type=\"range\" \n                    :min=\"getLabel('customsDuties', 'min')\" \n                    :max=\"getLabel('customsDuties', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('customsDuties', localSliderValues.customsDuties)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.customsDuties\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('customsDuties', 'min')\"\n                        :max=\"getLabel('customsDuties', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('customsDuties')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.customsDuties\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('customsDuties')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"revenue-grid mt-3\">\n              <!-- Carbon Pricing -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.carbonPricing?.color || '#38B2AC' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('carbonPricing', 'revenue', budgetStore.revenueSources.carbonPricing?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('carbonPricing', 'revenue', budgetStore.revenueSources.carbonPricing?.name || '')\"\n                      :description=\"localizedDescription('carbonPricing', 'revenue', budgetStore.revenueSources.carbonPricing?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.carbonPricing?.base || 0\"\n                      :current-setting=\"revenueRates.carbonPricing\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.carbonPricing?.adjustedAmount || budgetStore.revenueSources.carbonPricing?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('carbonPricing') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('carbonPricing') > 0,\n                        'negative': getAdditionalRevenue('carbonPricing') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('carbonPricing') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('carbonPricing'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.carbonPricing?.base * budgetStore.revenueSources.carbonPricing?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.carbonPricing?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.carbonPricing?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.carbonPricing?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.carbonPricing?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.carbonPricing?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    Carbon Pricing includes revenue from both carbon taxes and cap-and-trade systems, designed to reduce greenhouse gas emissions.\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.carbonPricing?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  This revenue figure includes the impact of carbon pricing expenditure adjustments.\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('carbonPricing', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.carbonPricing }}%</span>\n                    <span>{{ getLabel('carbonPricing', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.carbonPricing\" \n                    type=\"range\" \n                    :min=\"getLabel('carbonPricing', 'min')\" \n                    :max=\"getLabel('carbonPricing', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('carbonPricing', localSliderValues.carbonPricing)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.carbonPricing\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('carbonPricing', 'min')\"\n                        :max=\"getLabel('carbonPricing', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('carbonPricing')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.carbonPricing\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('carbonPricing')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Excise Taxes -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.exciseTaxes?.color || '#9F7AEA' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('exciseTaxes', 'revenue', budgetStore.revenueSources.exciseTaxes?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('exciseTaxes', 'revenue', budgetStore.revenueSources.exciseTaxes?.name || '')\"\n                      :description=\"localizedDescription('exciseTaxes', 'revenue', budgetStore.revenueSources.exciseTaxes?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.exciseTaxes?.base || 0\"\n                      :current-setting=\"revenueRates.exciseTaxes\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.exciseTaxes?.adjustedAmount || budgetStore.revenueSources.exciseTaxes?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('exciseTaxes') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('exciseTaxes') > 0,\n                        'negative': getAdditionalRevenue('exciseTaxes') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('exciseTaxes') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('exciseTaxes'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.exciseTaxes?.base * budgetStore.revenueSources.exciseTaxes?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.exciseTaxes?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.exciseTaxes?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.exciseTaxes?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.exciseTaxes?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.exciseTaxes?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    Excise Taxes include federal taxes on specific goods such as alcohol, tobacco, and fuel, designed to discourage consumption of these products.\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.exciseTaxes?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  This revenue figure includes the impact of excise taxes expenditure adjustments.\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('exciseTaxes', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.exciseTaxes }}%</span>\n                    <span>{{ getLabel('exciseTaxes', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.exciseTaxes\" \n                    type=\"range\" \n                    :min=\"getLabel('exciseTaxes', 'min')\" \n                    :max=\"getLabel('exciseTaxes', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('exciseTaxes', localSliderValues.exciseTaxes)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.exciseTaxes\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('exciseTaxes', 'min')\"\n                        :max=\"getLabel('exciseTaxes', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('exciseTaxes')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.exciseTaxes\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('exciseTaxes')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- {{ i18nText('simulator.controls.revenue.groupTitle.otherRevenues', 'Other Revenue Sources') }} Group -->\n        <div class=\"mb-4\">\n          <div\n            class=\"group-header\"\n            @click=\"toggleGroupExpansion('otherRevenues')\"\n          >\n            <h3 class=\"text-sm font-medium text-gray-700\">\n              {{ i18nText('simulator.controls.revenue.groupTitle.otherRevenues', 'Other Revenue Sources') }}\n            </h3>\n            <div class=\"group-total\">\n              ${{ formatCurrency(otherRevenueTotal, 1) }}B\n            </div>\n            <div class=\"toggle-button\">\n              {{ expandedGroups.otherRevenues ? i18nText('simulator.controls.common.collapse', 'Collapse') : i18nText('simulator.controls.common.expand', 'Expand') }}\n              <span\n                class=\"icon ml-1\"\n                :class=\"{ 'rotated': expandedGroups.otherRevenues }\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"12\"\n                  height=\"12\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                >\n                  <polyline points=\"6 9 12 15 18 9\" />\n                </svg>\n              </span>\n            </div>\n          </div>\n          \n          <div\n            class=\"group-content\"\n            :class=\"{ 'expanded': expandedGroups.otherRevenues }\"\n          >\n            <div class=\"revenue-grid\">\n              <!-- Employment Insurance Premiums -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.eiPremiums?.color || '#667EEA' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('employmentInsurancePremiums', 'revenue', budgetStore.revenueSources.eiPremiums?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('employmentInsurancePremiums', 'revenue', budgetStore.revenueSources.eiPremiums?.name || '')\"\n                      :description=\"localizedDescription('employmentInsurancePremiums', 'revenue', budgetStore.revenueSources.eiPremiums?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.eiPremiums?.base || 0\"\n                      :current-setting=\"revenueRates.eiPremiums\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.eiPremiums?.adjustedAmount || budgetStore.revenueSources.eiPremiums?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('eiPremiums') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('eiPremiums') > 0,\n                        'negative': getAdditionalRevenue('eiPremiums') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('eiPremiums') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('eiPremiums'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.eiPremiums?.base * budgetStore.revenueSources.eiPremiums?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.eiPremiums?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.eiPremiums?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.eiPremiums?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.eiPremiums?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.eiPremiums?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    Employment Insurance (EI) Premiums are mandatory payroll contributions collected from employees and employers to fund the EI program, which provides temporary financial assistance to unemployed workers.\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.eiPremiums?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  This revenue figure includes the impact of employment insurance premiums expenditure adjustments.\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('eiPremiums', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.eiPremiums }}%</span>\n                    <span>{{ getLabel('eiPremiums', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.eiPremiums\" \n                    type=\"range\" \n                    :min=\"getLabel('eiPremiums', 'min')\" \n                    :max=\"getLabel('eiPremiums', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('eiPremiums', localSliderValues.eiPremiums)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.eiPremiums\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('eiPremiums', 'min')\"\n                        :max=\"getLabel('eiPremiums', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('eiPremiums')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.eiPremiums\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('eiPremiums')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Crown Corporation Profits -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.crownProfits?.color || '#F687B3' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('crownCorporationProfits', 'revenue', budgetStore.revenueSources.crownProfits?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('crownCorporationProfits', 'revenue', budgetStore.revenueSources.crownProfits?.name || '')\"\n                      :description=\"localizedDescription('crownCorporationProfits', 'revenue', budgetStore.revenueSources.crownProfits?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.crownProfits?.base || 0\"\n                      :current-setting=\"revenueRates.crownProfits\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.crownProfits?.adjustedAmount || budgetStore.revenueSources.crownProfits?.amount, 1) }}B\n                      <span\n                        v-if=\"getAdditionalRevenue('crownProfits') !== 0\"\n                        :class=\"{\n                          'positive': getAdditionalRevenue('crownProfits') > 0,\n                          'negative': getAdditionalRevenue('crownProfits') < 0\n                        }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('crownProfits') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('crownProfits'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.crownProfits?.base * budgetStore.revenueSources.crownProfits?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"getAdditionalRevenue('crownProfits') !== 0\"\n                      class=\"additional-revenue\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('crownProfits') > 0,\n                        'negative': getAdditionalRevenue('crownProfits') < 0\n                      }\"\n                    >\n                      {{ getAdditionalRevenue('crownProfits') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('crownProfits'), 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.crownProfits?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.crownProfits?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.crownProfits?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.crownProfits?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.crownProfits?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    Crown Corporation Profits are net profits from government-owned businesses, including enterprises like Canada Post, VIA Rail, and other federal Crown corporations.\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.crownProfits?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  This revenue figure includes the impact of crown corporation profits expenditure adjustments.\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('crownProfits', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.crownProfits }}%</span>\n                    <span>{{ getLabel('crownProfits', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.crownProfits\" \n                    type=\"range\" \n                    :min=\"getLabel('crownProfits', 'min')\" \n                    :max=\"getLabel('crownProfits', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('crownProfits', localSliderValues.crownProfits)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.crownProfits\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('crownProfits', 'min')\"\n                        :max=\"getLabel('crownProfits', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('crownProfits')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.crownProfits\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('crownProfits')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"revenue-grid mt-3\">\n              <!-- Resource Royalties -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.resourceRoyalties?.color || '#B794F4' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ localizedName('resourceRoyalties', 'revenue', budgetStore.revenueSources.resourceRoyalties?.name || '') }}\n                    <CategoryInfo\n                      :name=\"localizedName('resourceRoyalties', 'revenue', budgetStore.revenueSources.resourceRoyalties?.name || '')\"\n                      :description=\"localizedDescription('resourceRoyalties', 'revenue', budgetStore.revenueSources.resourceRoyalties?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.resourceRoyalties?.base || 0\"\n                      :current-setting=\"revenueRates.resourceRoyalties\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.resourceRoyalties?.adjustedAmount || budgetStore.revenueSources.resourceRoyalties?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('resourceRoyalties') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('resourceRoyalties') > 0,\n                        'negative': getAdditionalRevenue('resourceRoyalties') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('resourceRoyalties') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('resourceRoyalties'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.resourceRoyalties?.base * budgetStore.revenueSources.resourceRoyalties?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.resourceRoyalties?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.resourceRoyalties?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.resourceRoyalties?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.resourceRoyalties?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.resourceRoyalties?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    Resource Royalties are payments received by the federal government for the extraction of natural resources such as oil, gas, and minerals from federal lands and offshore areas.\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.resourceRoyalties?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  This revenue figure includes the impact of resource royalties expenditure adjustments.\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('resourceRoyalties', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.resourceRoyalties }}%</span>\n                    <span>{{ getLabel('resourceRoyalties', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.resourceRoyalties\" \n                    type=\"range\" \n                    :min=\"getLabel('resourceRoyalties', 'min')\" \n                    :max=\"getLabel('resourceRoyalties', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('resourceRoyalties', localSliderValues.resourceRoyalties)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.resourceRoyalties\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('resourceRoyalties', 'min')\"\n                        :max=\"getLabel('resourceRoyalties', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('resourceRoyalties')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.resourceRoyalties\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('resourceRoyalties')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <!-- Non-Tax Revenue -->\n              <div\n                class=\"revenue-tile\"\n                :style=\"{ '--tile-color': budgetStore.revenueSources.nonTaxRevenue?.color || '#FC8181' }\"\n              >\n                <div class=\"tile-header\">\n                  <div class=\"tile-title\">\n                    <span class=\"material-icons tile-icon\">payments</span>\n                    {{ i18nText('simulator.controls.revenue.nonTaxRevenue.title', 'Non-Tax Revenue') }}\n                    <CategoryInfo\n                      :name=\"localizedName('nonTaxRevenue', 'revenue', budgetStore.revenueSources.nonTaxRevenue?.name || t('simulator.controls.revenue.nonTaxRevenue.title'))\"\n                      :description=\"localizedDescription('nonTaxRevenue', 'revenue', budgetStore.revenueSources.nonTaxRevenue?.description || '')\"\n                      :base-amount=\"budgetStore.revenueSources.nonTaxRevenue?.base || 0\"\n                      :current-setting=\"revenueRates.nonTaxRevenue\"\n                      @show-tooltip=\"showTooltip\"\n                      @hide-tooltip=\"hideTooltip\"\n                    />\n                  </div>\n                  <div class=\"tile-amount\">\n                    <div class=\"total-amount\">\n                      ${{ formatCurrency(budgetStore.revenueSources.nonTaxRevenue?.adjustedAmount || budgetStore.revenueSources.nonTaxRevenue?.amount, 1) }}B\n                      <span\n                      v-if=\"getAdditionalRevenue('nonTaxRevenue') !== 0\"\n                      :class=\"{\n                        'positive': getAdditionalRevenue('nonTaxRevenue') > 0,\n                        'negative': getAdditionalRevenue('nonTaxRevenue') < 0\n                      }\"\n                        style=\"font-size: 0.9em; margin-left: 4px;\"\n                      >\n                        ({{ getAdditionalRevenue('nonTaxRevenue') > 0 ? '+' : '' }}${{ formatCurrency(getAdditionalRevenue('nonTaxRevenue'), 1) }}B)\n                      </span>\n                    </div>\n                    <div class=\"base-amount\">\n                      {{ i18nText('simulator.controls.common.base', 'Base:') }} ${{ formatCurrency(budgetStore.revenueSources.nonTaxRevenue?.base * budgetStore.revenueSources.nonTaxRevenue?.rateByYear[budgetStore.currentYear], 1) }}B\n                    </div>\n                    <div\n                      v-if=\"budgetStore.revenueSources.nonTaxRevenue?.expenditureImpact !== 0\"\n                      class=\"tax-expenditure-impact\"\n                    >\n                      <span class=\"impact-label\">{{ i18nText('simulator.controls.common.taxImpact', 'Tax Expenditure Impact:') }}</span>\n                      <span\n                        class=\"impact-value\"\n                        :class=\"{'positive': budgetStore.revenueSources.nonTaxRevenue?.expenditureImpact > 0, 'negative': budgetStore.revenueSources.nonTaxRevenue?.expenditureImpact < 0}\"\n                      >\n                        {{ budgetStore.revenueSources.nonTaxRevenue?.expenditureImpact > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.revenueSources.nonTaxRevenue?.expenditureImpact, 1) }}B\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"tile-note\">\n                  <span>\n                    {{ i18nText('simulator.controls.revenue.nonTaxRevenue.description', 'Non-Tax Revenue includes government income from various sources such as fees, licenses, permits, fines, and returns on investments that are not classified as taxes.') }}\n                  </span>\n                </div>\n                <div\n                  v-if=\"budgetStore.revenueSources.nonTaxRevenue?.expenditureImpact !== 0\"\n                  class=\"tax-expenditure-note\"\n                >\n                  {{ i18nText('simulator.controls.revenue.nonTaxRevenue.expenditureNote', 'This revenue figure includes the impact of non-tax revenue expenditure adjustments.') }}\n                </div>\n                <div class=\"slider-container\">\n                  <div class=\"slider-labels\">\n                    <span>{{ getLabel('nonTaxRevenue', 'min') }}%</span>\n                    <span class=\"current-rate\">{{ i18nText('simulator.controls.common.current', 'Current:') }} {{ revenueRates.nonTaxRevenue }}%</span>\n                    <span>{{ getLabel('nonTaxRevenue', 'max') }}%</span>\n                  </div>\n                  <input \n                    v-model=\"localSliderValues.nonTaxRevenue\" \n                    type=\"range\" \n                    :min=\"getLabel('nonTaxRevenue', 'min')\" \n                    :max=\"getLabel('nonTaxRevenue', 'max')\" \n                    :step=\"0.1\" \n                    class=\"slider-input\"\n                    @input=\"onSliderInput('nonTaxRevenue', localSliderValues.nonTaxRevenue)\" \n                    /> <!-- 🆕 PERFORMANCE NOTE: Debounced slider commit using localSliderValues -->\n                  <div class=\"input-controls\">\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"revenueRates.nonTaxRevenue\" \n                        type=\"number\" \n                        class=\"percentage-input\"\n                        :min=\"getLabel('nonTaxRevenue', 'min')\"\n                        :max=\"getLabel('nonTaxRevenue', 'max')\"\n                        step=\"0.1\"\n                        @change=\"updateRevenueRate('nonTaxRevenue')\"\n                      >\n                      <span class=\"input-suffix\">%</span>\n                    </div>\n                    <div class=\"input-group\">\n                      <input \n                        v-model.number=\"amountInputs.nonTaxRevenue\" \n                        type=\"number\" \n                        class=\"amount-input\"\n                        step=\"0.1\"\n                        @change=\"updateAmountInput('nonTaxRevenue')\"\n                      >\n                      <span class=\"input-suffix\">B</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Revenue Summary Section -->\n    <div class=\"revenue-summary\">\n      <div class=\"summary-card\">\n        <div class=\"summary-title\">\n          {{ t('simulator.common.totalRevenue') }}\n        </div>\n        <div class=\"summary-amount\">\n          ${{ formatCurrency(budgetStore.totalRevenue, 1) }}B\n        </div>\n        <div\n          v-if=\"budgetStore.additionalRevenue !== 0\"\n          class=\"additional-revenue-total\"\n        >\n          {{ budgetStore.additionalRevenue > 0 ? '+' : '' }}${{ formatCurrency(budgetStore.additionalRevenue, 1) }}B\n        </div>\n      </div>\n    </div>\n  </div>\n  <Teleport to=\"body\">\n    <div \n      v-if=\"activeTooltip\"\n      class=\"tooltip-text\"\n      :style=\"{ \n        visibility: activeTooltip ? 'visible' : 'hidden',\n        opacity: activeTooltip ? 1 : 0\n      }\"\n    >\n      {{ activeTooltip }}\n    </div>\n  </Teleport>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch, computed, shallowRef, nextTick } from 'vue';\nimport CategoryInfo from '@/domains/budget/components/BudgetCategoryInfo.vue';\nimport { useI18n, getCategoryName, getCategoryDescription } from '@/i18n'\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport { useBudgetSimulatorStore } from '../store/budgetSimulator';\n\nconst budgetStore = useBudgetSimulatorStore();\nconst { t } = useI18n();\n\nconst localizedName = (id, type = 'revenue', fallback = '') =>\n  getCategoryName(id, type) || fallback || id\nconst localizedDescription = (id, type = 'revenue', fallback = '') =>\n  getCategoryDescription(id, type) || fallback\n\nconst i18nText = (key, fallback = '') => {\n  const value = t(key)\n  return value == key ? fallback : value\n};\nconst activeTooltip = ref('');\n\n// Local reactive state\nconst expandedGroups = ref({\n  incomeTaxes: true,\n  consumptionTaxes: true,\n  otherRevenues: true\n});\n\n// Use shallowRef for better performance with large objects\nconst revenueRates = shallowRef({});\nconst localSliderValues = shallowRef({});\n\n// Local reactive object for amount inputs\nconst amountInputs = ref({\n  personalIncomeTax: 0,\n  corporateIncomeTax: 0,\n  gst: 0,\n  exciseTaxes: 0,\n  carbonPricing: 0,\n  eiPremiums: 0,\n  customsDuties: 0,\n  crownProfits: 0,\n  nonTaxRevenue: 0,\n  resourceRoyalties: 0\n});\n\n// Memoized computed properties\nconst totalRevenue = computed(() => {\n  // Only depend on the specific values we need\n  return budgetStore.totalRevenue;\n});\n\nconst additionalRevenue = computed(() => {\n  return budgetStore.additionalRevenue;\n});\n\n// Computed properties for category totals\nconst incomeTaxTotal = computed(() => {\n  return budgetStore.incomeTaxTotal;\n});\n\nconst consumptionTaxTotal = computed(() => {\n  return budgetStore.consumptionTaxTotal;\n});\n\nconst otherRevenueTotal = computed(() => {\n  return budgetStore.otherRevenueTotal;\n});\n\n// eslint-disable-next-line no-unused-vars\nconst formattedAdditionalRevenue = computed(() => {\n  const value = additionalRevenue.value;\n  return `${value > 0 ? '+' : ''}$${value.toFixed(1)}B`;\n});\n\n// eslint-disable-next-line no-unused-vars\nconst formattedTotalRevenue = computed(() => {\n  return `$${(totalRevenue.value).toFixed(1)}B`;\n});\n\n// Helper: Return min or max label for a given revenue source.\nfunction getLabel(source, type) {\n  const sourceData = budgetStore.revenueSources[source] || {};\n  if (type === 'min') return sourceData.minRate || getDefaultMin(source);\n  if (type === 'max') return sourceData.maxRate || getDefaultMax(source);\n  return sourceData.rate || 0;\n}\n\n// Fallback defaults if min/max are not provided in the store.\nfunction getDefaultMin(source) {\n  switch(source) {\n    case 'personalIncomeTax': return 0;\n    case 'corporateIncomeTax': return 0;\n    case 'gst': return 0;\n    case 'exciseTaxes': return 0;\n    case 'carbonPricing': return 0;\n    case 'eiPremiums': return 0;\n    case 'customsDuties': return 0;\n    case 'crownProfits': return 0;\n    case 'nonTaxRevenue': return 0;\n    case 'resourceRoyalties': return 0;\n    default: return 0;\n  }\n}\n\nfunction getDefaultMax(source) {\n  switch(source) {\n    case 'personalIncomeTax': return 50;\n    case 'corporateIncomeTax': return 40;\n    case 'gst': return 15;\n    case 'exciseTaxes': return 10;\n    case 'carbonPricing': return 5;\n    case 'eiPremiums': return 5;\n    case 'customsDuties': return 5;\n    case 'crownProfits': return 10;\n    case 'nonTaxRevenue': return 10;\n    case 'resourceRoyalties': return 5;\n    default: return 100;\n  }\n}\n\nfunction showTooltip(text) {\n  activeTooltip.value = text;\n}\n\nfunction hideTooltip() {\n  activeTooltip.value = '';\n}\n\n// Toggle expansion state of a revenue group.\nfunction toggleGroupExpansion(groupName) {\n  expandedGroups.value[groupName] = !expandedGroups.value[groupName];\n}\n\n// Initialize local slider values from the store.\nfunction initializeLocalValues() {\n  const sources = budgetStore.revenueSources;\n  const newRates = {};\n  const newSliderValues = {};\n  \n  Object.keys(sources).forEach(sourceId => {\n    const source = sources[sourceId];\n    if (source) {\n      newRates[sourceId] = source.rate || 0;\n      newSliderValues[sourceId] = source.rate || 0;\n    }\n  });\n  \n  // Batch update reactive refs\n  revenueRates.value = newRates;\n  localSliderValues.value = newSliderValues;\n  \n  // Update amount inputs\n  updateAmountInputs();\n}\n\n// Debounced store updates\nconst debouncedStoreUpdate = debounce((sourceId, value) => {\n  budgetStore.updateRevenueRate(sourceId, value);\n}, 150);\n\n// Throttled UI updates\nconst throttledUIUpdate = throttle((sourceId, value) => {\n  localSliderValues.value[sourceId] = value;\n}, 16); // ~60fps\n\n// Optimized slider input handler\nfunction onSliderInput(sourceId, value) {\n  // Update UI immediately for responsiveness\n  throttledUIUpdate(sourceId, value);\n  \n  // Debounce store update to prevent excessive calculations\n  debouncedStoreUpdate(sourceId, value);\n}\n\n// Update revenue rate in the store.\nfunction updateRevenueRate(sourceId) {\n  budgetStore.updateRevenueRate(sourceId, revenueRates.value[sourceId]);\n  // Update the corresponding amount input\n  updateAmountInput(sourceId, true);\n}\n\n// Update amount inputs based on current rates\nfunction updateAmountInputs() {\n  Object.keys(revenueRates.value).forEach(sourceId => {\n    updateAmountInput(sourceId, true);\n  });\n}\n\n// Update amount input for a specific source\nfunction updateAmountInput(sourceId, fromRate = false) {\n  const source = budgetStore.revenueSources[sourceId];\n  if (!source) return;\n  \n  if (fromRate) {\n    // Calculate amount from rate\n    amountInputs.value[sourceId] = parseFloat(formatCurrency(source.amount, 1));\n  } else {\n    // Calculate rate from amount\n    const newRate = amountInputs.value[sourceId] / source.base;\n    // Ensure rate is within bounds\n    const minRate = getLabel(sourceId, 'min');\n    const maxRate = getLabel(sourceId, 'max');\n    revenueRates.value[sourceId] = Math.max(minRate, Math.min(maxRate, newRate));\n    // Update the store\n    budgetStore.updateRevenueRate(sourceId, revenueRates.value[sourceId]);\n  }\n}\n\n// Function to calculate additional revenue for a source with proper precision\nconst getAdditionalRevenue = (sourceId) => {\n  const source = budgetStore.revenueSources[sourceId];\n  if (!source) return 0;\n  \n  const defaultRate = source.rateByYear[budgetStore.currentYear];\n  const baselineAmount = source.base * defaultRate;\n  // Use Math.round to avoid floating point precision issues\n  return Math.round((source.amount - baselineAmount) * 100) / 100;\n};\n\n// Format currency with proper precision\nconst formatCurrency = (value, decimals = 1) => {\n  return (Math.round(value * Math.pow(10, decimals)) / Math.pow(10, decimals)).toFixed(decimals);\n};\n\n// Optimized watchers with proper dependencies\nwatch(\n  () => budgetStore.stateVersion,\n  () => {\n    console.log('[REVENUE SLIDERS] State version changed, refreshing values');\n    nextTick(() => {\n      initializeLocalValues();\n    });\n  }\n);\n\n// Watch for changes in the store's revenue sources and reinitialize if necessary.\nwatch(() => budgetStore.revenueSources, () => {\n  initializeLocalValues();\n}, { deep: true });\n\n// Watch for state version changes to detect batch updates (like preset applications)\nwatch(() => budgetStore.stateVersion, (newVersion, oldVersion) => {\n  console.log(`[REVENUE SLIDERS] Detected state version change: ${oldVersion} → ${newVersion}, refreshing local values`);\n  initializeLocalValues();\n  \n  // Special handling for carbon tax to ensure UI is in sync\n  if (budgetStore.revenueSources.carbonPricing) {\n    console.log(`[CARBON TAX] Ensuring UI is in sync with store value: ${budgetStore.revenueSources.carbonPricing.rate}%`);\n    localSliderValues.value.carbonPricing = budgetStore.revenueSources.carbonPricing.rate;\n  }\n});\n\n// Watch for budget resets specifically (using lastUpdate as a trigger)\nwatch(() => budgetStore.lastUpdate, () => {\n  console.log('Budget update detected - reinitializing sliders');\n  // Force a complete reinitialization of all slider values\n  // This ensures sliders reflect the reset values in the store\n  setTimeout(() => {\n    initializeLocalValues();\n  }, 50); // Small delay to ensure store has completed all updates\n});\n\n// Watch for changes in the revenue source update timestamp\nwatch(() => budgetStore.lastRevenueSourceUpdate, () => {\n  console.log('Revenue source update detected - reinitializing sliders');\n  // Force a complete reinitialization of all slider values\n  setTimeout(() => {\n    initializeLocalValues();\n  }, 50); // Small delay to ensure store has completed all updates\n});\n\n// Watch for changes in auto-balance state\nwatch(() => budgetStore.autoBalanceActive, (newValue, oldValue) => {\n  // When auto-balance is turned off (especially during reset), reinitialize sliders\n  if (oldValue === true && newValue === false) {\n    console.log('Auto-balance turned off - reinitializing sliders');\n    setTimeout(() => {\n      initializeLocalValues();\n    }, 50);\n  }\n});\n\n// Watch for changes in revenue rates to update amount inputs\nwatch(() => revenueRates.value, () => {\n  updateAmountInputs();\n}, { deep: true });\n\n// Initialize on component mount\nonMounted(() => {\n    initializeLocalValues();\n});\n</script>\n\n<style scoped>\n.revenue-sliders {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 1rem;\n  box-shadow: \n    0 10px 20px rgba(0, 0, 0, 0.19),\n    0 6px 6px rgba(0, 0, 0, 0.23);\n  backdrop-filter: blur(10px);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n  contain: content;\n}\n\n.revenue-sliders:hover {\n  transform: translateY(-5px) translateZ(0);\n  box-shadow: \n    0 15px 30px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n}\n\n.slider-group {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 1.25rem;\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.1),\n    0 2px 4px rgba(0, 0, 0, 0.06);\n  transform: translateZ(0);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n}\n\n.slider-group:hover {\n  transform: translateY(-2px) translateZ(0);\n  box-shadow: \n    0 6px 8px rgba(0, 0, 0, 0.12),\n    0 3px 6px rgba(0, 0, 0, 0.1);\n}\n\n.slider-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 1rem;\n}\n\n.slider-title {\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: #2d3748;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.slider-title .material-icons {\n  color: #4299e1;\n}\n\n.slider-value {\n  font-size: 1.25rem;\n  font-weight: 700;\n  color: #2d3748;\n}\n\n.slider-container {\n  padding: 0.5rem 1.25rem 0.5rem 1.25rem;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  min-width: 0;\n  align-items: center;\n}\n.slider {\n  max-width: 280px;\n  width: 100%;\n  margin: 0 auto;\n  display: block;\n}\n\n.slider-input {\n  width: 100%;\n  height: 0.5rem;\n  -webkit-appearance: none;\n  appearance: none;\n  background: #e2e8f0;\n  border-radius: 0.25rem;\n  outline: none;\n  transform: translateZ(0);\n  will-change: transform;\n}\n\n.slider-input::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 1.25rem;\n  height: 1.25rem;\n  background: #4299e1;\n  border-radius: 50%;\n  cursor: pointer;\n  box-shadow: \n    0 2px 4px rgba(0, 0, 0, 0.1),\n    0 1px 2px rgba(0, 0, 0, 0.06);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n}\n\n.slider-input::-webkit-slider-thumb:hover {\n  transform: scale(1.1) translateZ(0);\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.12),\n    0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.slider-input::-moz-range-thumb {\n  width: 1.25rem;\n  height: 1.25rem;\n  background: #4299e1;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  box-shadow: \n    0 2px 4px rgba(0, 0, 0, 0.1),\n    0 1px 2px rgba(0, 0, 0, 0.06);\n  transition: all 0.3s ease;\n  will-change: transform, box-shadow;\n}\n\n.slider-input::-moz-range-thumb:hover {\n  transform: scale(1.1) translateZ(0);\n  box-shadow: \n    0 4px 6px rgba(0, 0, 0, 0.12),\n    0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.slider-labels {\n  font-size: 0.675rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1.36rem;\n  color: #4a5568;\n}\n.current-rate {\n  min-width: 170px;\n  text-align: center;\n  display: inline-block;\n}\n.slider-description {\n  font-size: 0.875rem;\n  color: #4a5568;\n  line-height: 1.5;\n  margin-top: 0.5rem;\n}\n\n/* Responsive Design */\n@container (max-width: 768px) {\n  .revenue-sliders {\n    padding: 1rem;\n  }\n  \n  .slider-group {\n    padding: 1rem;\n  }\n  \n  .slider-title {\n    font-size: 1rem;\n  }\n  \n  .slider-value {\n    font-size: 1.125rem;\n  }\n}\n\n@container (max-width: 480px) {\n  .revenue-sliders {\n    padding: 0.75rem;\n  }\n  \n  .slider-group {\n    padding: 0.75rem;\n  }\n  \n  .slider-header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .slider-value {\n    text-align: left;\n  }\n  \n  .slider-labels {\n    font-size: 0.75rem;\n  }\n}\n\n/* Touch Device Optimizations */\n@media (hover: none) {\n  .revenue-sliders:hover,\n  .slider-group:hover {\n    transform: none;\n  }\n  \n  .revenue-sliders:active,\n  .slider-group:active {\n    transform: translateY(-2px) translateZ(0);\n  }\n  \n  .slider-input::-webkit-slider-thumb:hover,\n  .slider-input::-moz-range-thumb:hover {\n    transform: none;\n  }\n  \n  .slider-input::-webkit-slider-thumb:active,\n  .slider-input::-moz-range-thumb:active {\n    transform: scale(1.1) translateZ(0);\n  }\n}\n\n/* Reduced Motion */\n@media (prefers-reduced-motion: reduce) {\n  .revenue-sliders,\n  .slider-group,\n  .slider-input::-webkit-slider-thumb,\n  .slider-input::-moz-range-thumb {\n    transition: none;\n    transform: none !important;\n  }\n}\n\n/* High Contrast Mode */\n@media (forced-colors: active) {\n  .revenue-sliders,\n  .slider-group {\n    border: 2px solid CanvasText;\n  }\n  \n  .slider-title .material-icons {\n    border: 2px solid CanvasText;\n  }\n  \n  .slider-input {\n    border: 2px solid CanvasText;\n  }\n  \n  .slider-input::-webkit-slider-thumb,\n  .slider-input::-moz-range-thumb {\n    border: 2px solid CanvasText;\n  }\n}\n\n/* Print Styles */\n@media print {\n  .revenue-sliders {\n    box-shadow: none;\n    border: 1px solid #000;\n  }\n  \n  .slider-group {\n    break-inside: avoid;\n    box-shadow: none;\n    border: 1px solid #000;\n  }\n  \n  .slider-input {\n    -webkit-print-color-adjust: exact;\n    print-color-adjust: exact;\n  }\n}\n\n.group-content > .grid {\n  grid-template-columns: repeat(auto-fit, minmax(290px, 1fr));\n  gap: 1.5rem;\n}\n\n.revenue-tile {\n  background: white;\n  border-radius: 0.75rem;\n  box-shadow: 0 4px 12px rgba(0,0,0,0.10), 0 1.5px 4px rgba(0,0,0,0.08);\n  border: 1.5px solid #e2e8f0;\n  overflow: hidden;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-height: 220px;\n  transition: box-shadow 0.25s, transform 0.25s;\n  will-change: transform, box-shadow;\n  word-break: break-word;\n}\n.revenue-tile::before {\n  content: '';\n  display: block;\n  height: 6px;\n  width: 100%;\n  background: var(--tile-color, #4299E1);\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-top-left-radius: 0.75rem;\n  border-top-right-radius: 0.75rem;\n}\n.revenue-tile:hover {\n  box-shadow: 0 10px 24px rgba(66,99,235,0.13), 0 4px 12px rgba(0,0,0,0.13);\n  transform: translateY(-4px) scale(1.025) translateZ(10px);\n  border-color: var(--tile-color, #4299E1);\n}\n.tile-header {\n  padding: 1rem 1.25rem 0.5rem 1.25rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  min-width: 0;\n}\n.tile-title, .tile-amount, .tile-note, .tax-expenditure-note {\n  word-break: break-word;\n  white-space: normal;\n}\n.tile-title {\n  font-size: 0.85rem;\n  font-weight: 600;\n  color: #2d3748;\n  margin-bottom: 0.25rem;\n}\n.tile-amount {\n  font-size: 0.78rem;\n  font-weight: 500;\n  color: #374151;\n  display: flex;\n  flex-direction: column;\n  gap: 0.15rem;\n  min-width: 0;\n}\n.tile-note, .tax-expenditure-note {\n  padding: 0.35rem 0.8rem 0 0.8rem;\n  font-size: 0.69rem;\n  color: #4a5568;\n  opacity: 0.95;\n}\n.percentage-input, .amount-input {\n  width: 60px;\n  padding: 0.25rem 0.5rem;\n  font-size: 0.75rem;\n  border-radius: 0.25rem;\n}\n.input-group {\n  max-width: 70px;\n}\n.input-controls {\n  gap: 0.25rem;\n  max-width: 150px;\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n\n.additional-revenue {\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n.additional-revenue.positive {\n  color: #059669; /* green-600 */\n}\n\n.additional-revenue.negative {\n  color: #DC2626; /* red-600 */\n}\n\n.tax-expenditure-impact {\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n.impact-value.positive {\n  color: #059669; /* green-600 */\n}\n\n.impact-value.negative {\n  color: #DC2626; /* red-600 */\n}\n\n.tooltip-text {\n  visibility: hidden;\n  width: 250px;\n  background-color: #2d3748;\n  color: #fff;\n  text-align: left;\n  border-radius: 6px;\n  padding: 8px 12px;\n  position: fixed;\n  z-index: 1000;\n  bottom: 20px;\n  left: 20px;\n  opacity: 0;\n  transition: opacity 0.3s;\n  font-size: 0.85rem;\n  pointer-events: none;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n/* ======================== */\n/* Square card + compact UI */\n/* ======================== */\n\n/* Match spending grid density */\n/* Dedicated grid like spending */\n.revenue-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  gap: 0.75rem;\n}\n\n/* Match spending card chrome */\n.revenue-tile {\n  background: #fbfcfd;\n  border: 1px solid #e6edf3;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 1px 2px rgba(16, 24, 40, 0.04);\n  transition: background-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease, border-color 0.2s ease;\n  min-height: auto;\n  position: relative;\n}\n\n/* Thin accent bar using tile color */\n.revenue-tile::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 3px;\n  background: var(--tile-color, #4098d7);\n}\n\n.revenue-tile:hover {\n  transform: translateY(-1px);\n  box-shadow:\n    0 8px 16px rgba(16, 24, 40, 0.08);\n  border-color: var(--tile-color, #4098d7);\n}\n\n/* Header styling similar to spending headers */\n.tile-header {\n  background-color: #f8fafc;\n  padding: 0.55rem 0.8rem; /* tighter */\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.tile-title {\n  margin: 0;\n  font-size: 0.95rem;\n  font-weight: 650;\n  letter-spacing: 0.2px;\n  color: #0f172a;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n.tile-icon {\n  font-size: 18px;\n  color: #64748b;\n}\n\n.tile-amount {\n  font-size: 0.83rem;\n  color: #4a5568;\n}\n\n/* Compact slider row: labels full width, slider left, inputs right */\n.slider-container {\n  padding: 0.7rem; /* tighter */\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-template-rows: auto auto;\n  align-items: center;\n  gap: 0.75rem 0.75rem;\n}\n\n.slider-labels { grid-column: 1 / -1; }\n\n/* Tighten inputs */\n.input-controls {\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: min-content;\n  column-gap: 0.5rem;\n  align-items: center;\n}\n\n.percentage-input, .amount-input {\n  width: 56px;\n  padding: 0.25rem 0.4rem;\n  font-size: 0.75rem;\n  border-radius: 0.25rem;\n}\n\n.input-group { max-width: 64px; }\n\n/* Clamp long notes to 3 lines like spending */\n.tile-note > span {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n/* Make slider style override global gradient styles */\ninput.slider-input[type=\"range\"] {\n  width: 100%;\n  height: 6px;\n  -webkit-appearance: none;\n  appearance: none;\n  background: linear-gradient(180deg, #e9eef4, #e5ebf1);\n  border-radius: 6px;\n  outline: none;\n}\n\ninput.slider-input[type=\"range\"]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 16px;\n  height: 16px;\n  background: #4098d7;\n  border-radius: 50%;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.18), 0 0 0 2px #fff inset;\n  cursor: pointer;\n  transition: transform 0.15s ease, box-shadow 0.15s ease;\n}\n\ninput.slider-input[type=\"range\"]::-webkit-slider-thumb:hover {\n  transform: scale(1.06);\n  box-shadow: 0 2px 6px rgba(0,0,0,0.18);\n}\n\ninput.slider-input[type=\"range\"]::-moz-range-thumb {\n  width: 16px;\n  height: 16px;\n  background: #4098d7;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.18);\n  cursor: pointer;\n  transition: transform 0.15s ease, box-shadow 0.15s ease;\n}\n\ninput.slider-input[type=\"range\"]::-moz-range-thumb:hover {\n  transform: scale(1.06);\n  box-shadow: 0 2px 6px rgba(0,0,0,0.18);\n}\n\n@media (max-width: 600px) {\n  .slider-labels { margin-bottom: 0.25rem; }\n  .slider-container {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto auto;\n  }\n  .input-controls {\n    grid-column: 1;\n    justify-self: start;\n    grid-auto-flow: column;\n    column-gap: 0.5rem;\n  }\n}\n</style>\n","import script from \"./RevenueSliders.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RevenueSliders.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RevenueSliders.vue?vue&type=style&index=0&id=07e703c5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-07e703c5\"]])\n\nexport default __exports__","<template>\n  <details class=\"spend-growth\" :open=\"openByDefault\">\n    <summary>\n      <span class=\"summary-title\">\n        {{ i18nText('spendingGrowthControls.title', 'Program Spending Growth (%)') }}\n        <span\n          class=\"info-icon\"\n          :title=\"i18nText('spendingGrowthControls.titleTooltip', 'Set annual growth rates for each program spending category. Baseline is underlying growth; Demographic adds growth from population/aging.')\"\n          :aria-label=\"i18nText('spendingGrowthControls.titleAriaLabel', 'About Program Spending Growth')\"\n        >info</span>\n      </span>\n    </summary>\n\n    <div class=\"growth-toolbar\">\n      <div class=\"search\">\n        <span class=\"material-icons\" aria-hidden=\"true\">search</span>\n        <input\n          class=\"filter\"\n          v-model=\"growthFilter\"\n          :placeholder=\"i18nText('spendingGrowthControls.search.placeholder', 'Filter categories (e.g., health, seniors)')\"\n        />\n      </div>\n      <div class=\"spacer\"></div>\n      <button class=\"btn subtle\" @click=\"onResetAll\">\n        <span class=\"material-icons\" aria-hidden=\"true\">restart_alt</span>\n        {{ i18nText('spendingGrowthControls.buttons.resetAll', 'Reset all') }}\n      </button>\n    </div>\n\n    <div class=\"growth-head\">\n      <div class=\"label\" :title=\"i18nText('spendingGrowthControls.headers.categoryTooltip', 'Spending categories used in the projections')\">{{ i18nText('spendingGrowthControls.headers.category', 'Category') }}</div>\n      <div class=\"inputs-head\">\n        <span :title=\"i18nText('spendingGrowthControls.headers.baselineTooltip', 'Underlying per‑year growth rate for this category')\">{{ i18nText('spendingGrowthControls.headers.baseline', 'Baseline') }}</span>\n        <span :title=\"i18nText('spendingGrowthControls.headers.demographicTooltip', 'Additional per‑year growth from demographics (aging, population)')\">{{ i18nText('spendingGrowthControls.headers.demographic', 'Demographic') }}</span>\n      </div>\n      <div class=\"actions\"></div>\n    </div>\n\n    <div class=\"growth-grid\">\n      <div\n        v-for=\"key in filteredKeys\"\n        :key=\"key\"\n        class=\"growth-row\"\n      >\n        <div class=\"label\">{{ prettyKey(key) }}</div>\n        <div class=\"inputs\">\n          <label class=\"sub\" :title=\"i18nText('spendingGrowthControls.headers.baselineTooltip', 'Underlying per‑year growth rate for this category')\">{{ i18nText('spendingGrowthControls.headers.baseline', 'Baseline') }}</label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            :min=\"-10\"\n            :max=\"15\"\n            v-model.number=\"settingsStore.spendingGrowth[key].baseline\"\n          />\n          <label class=\"sub\" :title=\"i18nText('spendingGrowthControls.headers.demographicTooltip', 'Additional per‑year growth from demographics')\">{{ i18nText('spendingGrowthControls.headers.demographic', 'Demographic') }}</label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            :min=\"-5\"\n            :max=\"10\"\n            v-model.number=\"settingsStore.spendingGrowth[key].demographic\"\n          />\n        </div>\n        <div class=\"actions\">\n          <button class=\"icon-btn\" :title=\"`${i18nText('spendingGrowthControls.buttons.reset', 'Reset')} ${prettyKey(key)}`\" @click=\"onResetRow(key)\">\n            <span class=\"material-icons\" aria-hidden=\"true\">restart_alt</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </details>\n</template>\n\n<script setup>\nimport { computed, ref } from 'vue';\nimport { useMultiYearSettingsStore } from '@/domains/budget/store/multiYearSettings.js';\nimport { useI18n } from '@/i18n';\n\n// i18n setup\nconst { t } = useI18n();\nconst i18nText = (key, fallback = '') => {\n  const value = t(key);\n  return value === key ? fallback : value;\n};\n\ndefineProps({ openByDefault: { type: Boolean, default: false } });\n\nconst settingsStore = useMultiYearSettingsStore();\nconst growthFilter = ref('');\n\nconst filteredKeys = computed(() => {\n  const q = growthFilter.value.trim().toLowerCase();\n  const keys = Object.keys(settingsStore.spendingGrowth || {});\n  if (!q) return keys;\n  return keys.filter(k => prettyKey(k).toLowerCase().includes(q));\n});\n\nfunction prettyKey(key) {\n  return String(key).replace(/([A-Z])/g, ' $1').replace(/^./, c => c.toUpperCase());\n}\n\nfunction onResetRow(key) {\n  if (settingsStore.resetSpendingGrowthKey) settingsStore.resetSpendingGrowthKey(key);\n}\n\nfunction onResetAll() {\n  if (settingsStore.resetAllSpendingGrowth) settingsStore.resetAllSpendingGrowth();\n}\n</script>\n\n<style scoped>\ndetails.spend-growth {\n  grid-column: 1 / -1;\n  background: linear-gradient(180deg, #fafbff 0%, #ffffff 60%);\n  border: 1px solid #e5e7eb;\n  border-radius: 12px;\n  padding: 8px 10px 12px;\n  box-shadow: 0 2px 10px rgba(0,0,0,0.04);\n}\ndetails.spend-growth > summary {\n  font-weight: 700;\n  color: #111827;\n  cursor: pointer;\n  list-style: none;\n}\ndetails.spend-growth > summary::-webkit-details-marker { display: none; }\n.summary-title { display: inline-flex; align-items: center; gap: 6px; }\n.info-icon { font-family: 'Material Icons'; font-size: 18px; line-height: 1; color: #6b7280; border: 1px solid #e5e7eb; border-radius: 50%; width: 18px; height: 18px; display: inline-grid; place-items: center; cursor: help; }\n.info-icon:hover { color: #1d4ed8; border-color: #c7d2fe; }\n\n.growth-toolbar {\n  position: sticky; top: 0; z-index: 1;\n  display: flex; gap: 8px; align-items: center;\n  padding: 8px 6px; margin: 6px -6px 8px;\n  background: rgba(255,255,255,0.92);\n  backdrop-filter: blur(6px);\n  border-bottom: 1px solid #e5e7eb;\n}\n.growth-toolbar .search { display: inline-flex; align-items: center; gap: 6px; padding: 6px 10px; border: 1px solid #e5e7eb; border-radius: 10px; background: #fff; }\n.growth-toolbar .filter { width: min(380px, 50vw); border: none; outline: none; }\n.growth-toolbar .spacer { flex: 1 1 auto; }\n\n.growth-head { display: grid; grid-template-columns: 1fr 2fr auto; gap: 8px; align-items: center; padding: 4px 6px; color: #6b7280; font-size: .75rem; }\n.growth-head .inputs-head { display: grid; grid-template-columns: 1fr 1fr; gap: 6px; justify-items: start; }\n\n.growth-grid { display: grid; grid-template-columns: 1fr; gap: 10px; margin-top: 4px; }\n.growth-row {\n  display: grid; grid-template-columns: 1fr 2fr auto; gap: 10px; align-items: center;\n  padding: 10px; border: 1px solid #e5e7eb; border-radius: 12px; background: #fff;\n  transition: box-shadow .15s ease, border-color .15s ease;\n}\n.growth-row:hover { border-color: #c7d2fe; box-shadow: 0 4px 14px rgba(29,78,216,0.08); }\n.growth-row .label { font-size: 0.9rem; color: #111827; font-weight: 600; }\n.growth-row .inputs { display: grid; grid-template-columns: auto 1fr auto 1fr; gap: 8px; align-items: center; }\n.growth-row .inputs input { padding: 8px 10px; border: 1px solid #d1d5db; border-radius: 10px; transition: border-color .15s, box-shadow .15s; }\n.growth-row .inputs input:focus { border-color: #3b82f6; box-shadow: 0 0 0 3px rgba(59,130,246,0.15); outline: none; }\n.growth-row .sub { font-size: 0.75rem; color: #6b7280; }\n\n.btn { padding: 8px 12px; border: 1px solid #d1d5db; border-radius: 10px; background: #fff; color: #374151; font-size: 0.875rem; cursor: pointer; transition: all 0.2s; }\n.btn.subtle { border-color: #e5e7eb; background: #f9fafb; }\n.btn:hover { background: #f3f4f6; border-color: #9ca3af; }\n.icon-btn { border: 1px solid #e5e7eb; background: #f9fafb; color: #374151; border-radius: 10px; width: 36px; height: 34px; display: inline-flex; align-items: center; justify-content: center; cursor: pointer; transition: all .15s; }\n.icon-btn:hover { background: #eef2ff; border-color: #c7d2fe; color: #1d4ed8; box-shadow: 0 4px 10px rgba(29,78,216,0.12); }\n</style>\n","import script from \"./SpendingGrowthControls.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SpendingGrowthControls.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SpendingGrowthControls.vue?vue&type=style&index=0&id=60f8dc92&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60f8dc92\"]])\n\nexport default __exports__","<template>\n  <div\n    class=\"spending-pie-chart\"\n    :class=\"{ 'dark-mode': darkMode }\"\n  >\n    <h3 class=\"chart-title\">\n      Federal Spending Breakdown\n    </h3>\n    \n    <div\n      v-if=\"totalSpending === 0 || !hasValidData\"\n      class=\"no-data-message\"\n    >\n      Adjust spending sliders to view the breakdown.\n    </div>\n    \n    <div\n      v-else\n      class=\"chart-container\"\n    >\n      <Pie \n        v-if=\"chartMounted\"\n        :data=\"chartData\" \n        :options=\"chartOptions\"\n        :height=\"height\"\n        :width=\"width\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue';\nimport { Pie } from 'vue-chartjs';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\nimport { useBudgetSimulatorStore } from '@/domains/budget/store/budgetSimulator';\n\n// Register Chart.js components\nChartJS.register(ArcElement, Tooltip, Legend, Title);\n\n// Props\nconst props = defineProps({\n  darkMode: {\n    type: Boolean,\n    default: false\n  },\n  height: {\n    type: [String, Number],\n    default: 300\n  },\n  width: {\n    type: [String, Number],\n    default: 300\n  }\n});\n\n// Store\nconst budgetStore = useBudgetSimulatorStore();\n\n// Computed properties\nconst totalSpending = computed(() => budgetStore.totalSpending);\n\n// Chart mounting state\nconst chartMounted = ref(false);\n\n// Check if data is valid for chart rendering\nconst hasValidData = computed(() => {\n  return Array.isArray(categories.value) && \n         categories.value.length > 0 && \n         categories.value.every(cat => cat && typeof cat.amount === 'number');\n});\n\n// Get categories including main categories and group totals for Other Categories and Government Operations\nconst categories = computed(() => {\n  const result = [];\n  \n  // Add main categories (healthcare, seniors, etc.)\n  for (const key in budgetStore.spendingCategories) {\n    const category = budgetStore.spendingCategories[key];\n    \n    // Include direct categories (not groups) and not children of groups\n    if (!category.isGroup && category.baseAmount && !key.includes('.')) {\n      result.push({\n        id: category.id,\n        name: category.name,\n        amount: category.baseAmount * category.adjustmentFactor,\n        color: category.color\n      });\n    }\n  }\n  \n  // Add Loans, Investments & Advances as a whole section\n  if (budgetStore.spendingCategories.loansInvestments) {\n    result.push({\n      id: 'loansInvestments',\n      name: 'Loans, Investments & Advances',\n      amount: budgetStore.loansInvestmentsSpending,\n      color: '#ECC94B' // yellow-500\n    });\n  }\n  \n  // Add Government Operations as a whole section\n  if (budgetStore.spendingCategories.governmentOperations) {\n    result.push({\n      id: 'governmentOperations',\n      name: 'Government Operations',\n      amount: budgetStore.governmentOperationsSpending,\n      color: '#ED64A6' // pink-500\n    });\n  }\n  \n  // Add Debt Servicing as a separate fixed cost category\n  if (budgetStore.fixedCosts.debtServicing) {\n    result.push({\n      id: 'debtServicing',\n      name: 'Debt Servicing (Fixed)',\n      amount: budgetStore.debtServicing,\n      color: '#667EEA' // indigo-500\n    });\n  }\n  \n  return result;\n});\n\n// Chart data\nconst chartData = computed(() => {\n  // Ensure categories is an array and has items\n  const safeCategories = Array.isArray(categories.value) ? categories.value : [];\n  \n  // Safely extract data with null checks\n  const labels = safeCategories.map(cat => cat?.name || 'Unknown');\n  const data = safeCategories.map(cat => {\n    const amount = cat?.amount;\n    return (typeof amount === 'number' && !isNaN(amount)) ? amount : 0;\n  });\n  const backgroundColor = safeCategories.map(cat => cat?.color || '#CBD5E0');\n  \n  return {\n    labels,\n    datasets: [\n      {\n        data,\n        backgroundColor,\n        borderWidth: 1,\n        borderColor: props.darkMode ? '#2D3748' : '#FFFFFF'\n      }\n    ]\n  };\n});\n\n// Chart options\nconst chartOptions = computed(() => {\n  return {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: {\n      animateRotate: true,\n      animateScale: true,\n      duration: 800\n    },\n    plugins: {\n      legend: {\n        position: window.innerWidth < 768 ? 'bottom' : 'right',\n        align: 'center',\n        labels: {\n          color: props.darkMode ? '#E2E8F0' : '#2D3748',\n          font: {\n            size: window.innerWidth < 768 ? 10 : 12\n          },\n          boxWidth: window.innerWidth < 768 ? 12 : 15,\n          padding: window.innerWidth < 768 ? 10 : 15,\n          generateLabels: (chart) => {\n            const datasets = chart.data.datasets;\n            return chart.data.labels.map((label, i) => {\n              const value = datasets[0].data[i];\n              const total = datasets[0].data.reduce((a, b) => a + b, 0);\n              const percentage = total > 0 ? Math.round((value / total) * 100) : 0;\n              return {\n                text: `${label} (${percentage}%)`,\n                fillStyle: datasets[0].backgroundColor[i],\n                strokeStyle: datasets[0].backgroundColor[i],\n                lineWidth: 0,\n                hidden: isNaN(datasets[0].data[i]),\n                index: i\n              };\n            });\n          }\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            if (!context || context.raw === undefined || context.raw === null) {\n              return 'No data available';\n            }\n            \n            const value = Number(context.raw);\n            if (isNaN(value)) {\n              return `${context.label || 'Unknown'}: Invalid data`;\n            }\n            \n            const total = context.chart?.getDatasetMeta?.(0)?.total || 0;\n            const percentage = total > 0 ? Math.round((value / total) * 100) : 0;\n            \n            return `${context.label || 'Unknown'}: $${value.toFixed(1)}B (${percentage}%)`;\n          }\n        },\n        backgroundColor: props.darkMode ? '#4A5568' : '#FFFFFF',\n        titleColor: props.darkMode ? '#E2E8F0' : '#2D3748',\n        bodyColor: props.darkMode ? '#E2E8F0' : '#2D3748',\n        borderColor: props.darkMode ? '#2D3748' : '#E2E8F0',\n        borderWidth: 1,\n        padding: window.innerWidth < 768 ? 8 : 10,\n        displayColors: true,\n        usePointStyle: true,\n        bodyFont: {\n          size: window.innerWidth < 768 ? 11 : 12\n        },\n        titleFont: {\n          size: window.innerWidth < 768 ? 12 : 14\n        },\n        maxWidth: window.innerWidth < 768 ? 200 : 300\n      },\n      title: {\n        display: false\n      }\n    }\n  };\n});\n\n// Handle responsive legend and tooltip\nconst updateResponsiveSettings = () => {\n  const isMobile = window.innerWidth < 768;\n  chartOptions.value.plugins.legend.position = isMobile ? 'bottom' : 'right';\n  chartOptions.value.plugins.legend.labels.font.size = isMobile ? 10 : 12;\n  chartOptions.value.plugins.legend.labels.boxWidth = isMobile ? 12 : 15;\n  chartOptions.value.plugins.legend.labels.padding = isMobile ? 10 : 15;\n  chartOptions.value.plugins.tooltip.padding = isMobile ? 8 : 10;\n  chartOptions.value.plugins.tooltip.bodyFont.size = isMobile ? 11 : 12;\n  chartOptions.value.plugins.tooltip.titleFont.size = isMobile ? 12 : 14;\n  chartOptions.value.plugins.tooltip.maxWidth = isMobile ? 200 : 300;\n};\n\n// Watch for spending changes to update the chart\nwatch(totalSpending, () => {\n  // Chart will automatically update due to reactivity\n}, { deep: true });\n\n// Watch for dark mode changes\nwatch(() => props.darkMode, () => {\n  // Update chart colors for dark mode\n  chartOptions.value.plugins.legend.labels.color = props.darkMode ? '#E2E8F0' : '#2D3748';\n  chartOptions.value.plugins.tooltip.backgroundColor = props.darkMode ? '#4A5568' : '#FFFFFF';\n  chartOptions.value.plugins.tooltip.titleColor = props.darkMode ? '#E2E8F0' : '#2D3748';\n  chartOptions.value.plugins.tooltip.bodyColor = props.darkMode ? '#E2E8F0' : '#2D3748';\n  chartOptions.value.plugins.tooltip.borderColor = props.darkMode ? '#2D3748' : '#E2E8F0';\n  chartData.value.datasets[0].borderColor = props.darkMode ? '#2D3748' : '#FFFFFF';\n}, { immediate: true });\n\n// Set up resize listener for responsive settings\nonMounted(() => {\n  window.addEventListener('resize', updateResponsiveSettings);\n  updateResponsiveSettings(); // Initial setup\n  \n  // Safely mount the chart after a short delay to ensure DOM is ready\n  setTimeout(() => {\n    chartMounted.value = true;\n    console.log('Chart mounted');\n  }, 50);\n});\n\n// Clean up event listener and chart resources\nonUnmounted(() => {\n  window.removeEventListener('resize', updateResponsiveSettings);\n  \n  // Ensure chart is unmounted before component is destroyed\n  chartMounted.value = false;\n  console.log('Chart unmounted');\n});\n</script>\n\n<style scoped>\n.spending-pie-chart {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 1rem;\n  background-color: white;\n  border-radius: 0.5rem;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 100%;\n  overflow: hidden;\n}\n\n.dark-mode {\n  background-color: #2D3748;\n  color: #E2E8F0;\n}\n\n.chart-title {\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: #2d3748;\n  margin-bottom: 1rem;\n  text-align: center;\n  width: 100%;\n}\n\n.chart-container {\n  width: 100%;\n  height: 100%;\n  min-height: 300px;\n  position: relative;\n}\n\n.no-data-message {\n  text-align: center;\n  color: #718096;\n  padding: 2rem;\n  font-style: italic;\n}\n\n@media (max-width: 768px) {\n  .spending-pie-chart {\n    padding: 0.75rem;\n  }\n  \n  .chart-title {\n    font-size: 1.1rem;\n    margin-bottom: 0.75rem;\n  }\n  \n  .chart-container {\n    min-height: 250px;\n  }\n  \n  .no-data-message {\n    padding: 1.5rem;\n    font-size: 0.9rem;\n  }\n}\n\n@media (max-width: 600px) {\n  .card-title, .card-content, .summary-card, .main-category-header, .other-category-header, .subcategory-header, .gov-ops-header, .tax-expenditure-header, .tile-title, .tile-amount, .slider-labels {\n    writing-mode: initial !important;\n    text-orientation: initial !important;\n    transform: none !important;\n    display: block !important;\n    white-space: normal !important;\n    word-break: break-word !important;\n  }\n}\n</style>\n","import script from \"./SpendingPieChart.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SpendingPieChart.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SpendingPieChart.vue?vue&type=style&index=0&id=9f0d820a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9f0d820a\"]])\n\nexport default __exports__"],"names":["t","useI18n","i18nText","key","fallback","value","props","__props","emit","__emit","order","titles","computed","core","adjust","insights","planning","share","pinnedSet","Set","pinnedKeys","filter","Boolean","baseGroups","map","Map","pinned","panels","p","has","length","set","g","group","get","push","keys","Array","from","sort","a","b","indexOf","k","title","items","isMobile","ref","showMore","updateIsMobile","window","innerWidth","_","onMounted","addEventListener","onUnmounted","removeEventListener","collapsibleExists","some","visibleGroups","flatPanels","out","currentIndex","findIndex","modelValue","onKeydown","e","i","preventDefault","__exports__","selectedScenario","plan","reactive","baselineGrowth","demographicAdjustment","levelAdjustment","startYear","policyType","policyImpact","close","save","itemId","reset","applyScenario","useMultiYearSettingsStore","isCompact","handleResize","AssumptionsPanel","defineAsyncComponent","MultiYearProjectionsPanel","OverviewPanel","AnalysisPanel","GoalsPanel","PresetsPanel","ItemsPlanList","BudgetExportPanel","ResultsPanel","RevenuePanel","SpendingPanel","SentimentPanel","panelDefs","label","icon","comp","route","useRoute","router","useRouter","panel","resolveInitialPanel","qp","query","valid","d","watch","replace","catch","currentComp","find","modal","open","type","id","openPlan","debouncedEmitUpdate","createDebouncedFunction","numValue","updateValue","Number","min","max","amountValue","baseAmount","toFixed","updateAmountValue","newPercentage","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","annotationPlugin","budget","useBudgetSimulatorStore","settings","defChartEl","width","resizeObserver","clientWidth","ResizeObserver","observe","disconnect","historicalDeficitData","year","rows","base","makeBaseSnapshotFromStore","projectionSettings","economic","revenueElasticity","spendingGrowth","categoryUserDelta","spendingGlobal","yearOverrides","projectAll","lineData","labels","r","toString","datasets","data","revenueTotal","borderColor","backgroundColor","fill","tension","programSpending","interest","deficit","lineOptions","responsive","maintainAspectRatio","plugins","display","text","font","size","weight","legend","position","usePointStyle","padding","tooltip","callbacks","context","dataset","parsed","y","scales","x","grid","color","ticks","callback","interaction","intersect","mode","defChartData","historicalLabels","projectedLabels","allLabels","historicalValues","projectedValues","historicalData","projectedData","borderDash","pointRadius","pointHoverRadius","ctx","defChartOptions","allValues","Math","sign","annotation","annotations","line1","yMin","yMax","borderWidth","content","enabled","maxTicksLimit","floor","suggestedMin","suggestedMax","v","debtGdpChartData","debtToGDP","debtGdpChartOptions","values","clampGlobal","levelPct","growthDeltaPct","budgetStore","localizedName","getCategoryName","localizedDescription","getCategoryDescription","activeTooltip","expandedGroups","incomeTaxes","consumptionTaxes","otherRevenues","revenueRates","shallowRef","localSliderValues","amountInputs","personalIncomeTax","corporateIncomeTax","gst","exciseTaxes","carbonPricing","eiPremiums","customsDuties","crownProfits","nonTaxRevenue","resourceRoyalties","totalRevenue","additionalRevenue","incomeTaxTotal","consumptionTaxTotal","otherRevenueTotal","getLabel","source","sourceData","revenueSources","minRate","getDefaultMin","maxRate","getDefaultMax","rate","showTooltip","hideTooltip","toggleGroupExpansion","groupName","initializeLocalValues","sources","newRates","newSliderValues","Object","forEach","sourceId","updateAmountInputs","debouncedStoreUpdate","debounce","updateRevenueRate","throttledUIUpdate","throttle","onSliderInput","updateAmountInput","fromRate","parseFloat","formatCurrency","amount","newRate","getAdditionalRevenue","defaultRate","rateByYear","currentYear","baselineAmount","round","decimals","pow","stateVersion","console","log","nextTick","deep","newVersion","oldVersion","lastUpdate","setTimeout","lastRevenueSourceUpdate","autoBalanceActive","newValue","oldValue","settingsStore","growthFilter","filteredKeys","q","trim","toLowerCase","prettyKey","includes","String","c","toUpperCase","onResetRow","resetSpendingGrowthKey","onResetAll","resetAllSpendingGrowth","ArcElement","totalSpending","chartMounted","hasValidData","isArray","categories","every","cat","result","spendingCategories","category","isGroup","name","adjustmentFactor","loansInvestments","loansInvestmentsSpending","governmentOperations","governmentOperationsSpending","fixedCosts","debtServicing","chartData","safeCategories","isNaN","darkMode","chartOptions","animation","animateRotate","animateScale","duration","align","boxWidth","generateLabels","chart","total","reduce","percentage","fillStyle","strokeStyle","lineWidth","hidden","index","undefined","raw","getDatasetMeta","titleColor","bodyColor","displayColors","bodyFont","titleFont","maxWidth","updateResponsiveSettings","immediate"],"sourceRoot":""}