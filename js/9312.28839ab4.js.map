{"version":3,"file":"js/9312.28839ab4.js","mappings":"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","sources":["webpack://my-new-project/./src/domains/budget/components/MultiYearProjectionsPanel.vue","webpack://my-new-project/./src/domains/budget/components/MultiYearProjectionsPanel.vue?24fa"],"sourcesContent":["<template>\n  <div class=\"multi-year-panel\">\n    <div class=\"header-row\">\n      <h3 class=\"title\">{{ i18nText('multiYearProjections.title', 'Multi-Year Projections') }}</h3>\n      <button class=\"btn primary\" @click=\"showPlanner = !showPlanner\">\n        <span class=\"material-icons\" aria-hidden=\"true\">timeline</span>\n        {{ showPlanner ? i18nText('multiYearProjections.buttons.hideCharts', 'Hide Charts') : i18nText('multiYearProjections.buttons.showCharts', 'Show Charts') }}\n      </button>\n    </div>\n    <div v-if=\"!FEATURES.MULTI_YEAR_PLANNING\" class=\"flag-disabled\">\n      <p>{{ i18nText('multiYearProjections.featureDisabled', 'This feature is disabled. Enable MULTI_YEAR_PLANNING to view projections.') }}</p>\n    </div>\n    <div v-else>\n      <div class=\"assumptions editable\">\n        <div class=\"row\">\n          <label>{{ i18nText('multiYearProjections.labels.baseYear', 'Base year') }}</label>\n          <input type=\"number\" v-model.number=\"settingsStore.planning.baseYear\" @change=\"normalize()\" min=\"2000\" max=\"2100\" />\n        </div>\n        <div class=\"row\">\n          <label>{{ i18nText('multiYearProjections.labels.horizon', 'Horizon (years)') }}</label>\n          <input type=\"number\" v-model.number=\"settingsStore.planning.horizonYears\" @change=\"normalize()\" min=\"1\" max=\"50\" />\n        </div>\n        <div class=\"row\">\n          <label>{{ i18nText('multiYearProjections.labels.realGdpGrowth', 'Real GDP growth (%)') }}</label>\n          <input type=\"number\" step=\"0.1\" v-model.number=\"settingsStore.economic.gdpReal\" @change=\"normalize()\" min=\"-5\" max=\"10\" />\n        </div>\n        <div class=\"row\">\n          <label>{{ i18nText('multiYearProjections.labels.inflation', 'Inflation (%)') }}</label>\n          <input type=\"number\" step=\"0.1\" v-model.number=\"settingsStore.economic.inflation\" @change=\"normalize()\" min=\"-2\" max=\"20\" />\n        </div>\n        <div class=\"row\">\n          <label>{{ i18nText('multiYearProjections.labels.interestRate', 'Interest rate (%)') }}</label>\n          <input type=\"number\" step=\"0.1\" v-model.number=\"settingsStore.economic.interestRate\" @change=\"normalize()\" min=\"0\" max=\"20\" />\n        </div>\n        <div class=\"row\">\n          <label :title=\"i18nText('multiYearProjections.tooltips.programSpendingBoost', 'One-time adjustment to all program spending levels')\">{{ i18nText('multiYearProjections.labels.programSpendingBoost', 'Program spending boost (%)') }}</label>\n          <input\n            type=\"number\"\n            step=\"0.5\"\n            :min=\"-15\"\n            :max=\"15\"\n            v-model.number=\"settingsStore.spendingGlobal.levelPct\"\n            @change=\"clampGlobal()\"\n          />\n        </div>\n        <div class=\"row\">\n          <label :title=\"i18nText('multiYearProjections.tooltips.speedUpSpendingGrowth', 'Adjusts how fast program spending grows each year. +0.5 means all categories grow 0.5 percentage points faster annually.')\">{{ i18nText('multiYearProjections.labels.speedUpSpendingGrowth', 'Speed up spending growth (pp)') }}</label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            v-model.number=\"settingsStore.spendingGlobal.growthDeltaPct\"\n            @change=\"clampGlobal()\"\n          />\n        </div>\n        <div class=\"row preset-row\">\n          <label>Preset</label>\n          <select v-model=\"selectedPreset\" @change=\"applyPreset()\">\n            <option value=\"\">Custom</option>\n            <option value=\"conservative\">Conservative</option>\n            <option value=\"moderate\">Moderate</option>\n            <option value=\"optimistic\">Optimistic</option>\n          </select>\n        </div>\n        <div class=\"row\">\n          <button class=\"btn\" @click=\"resetToDefaults()\">Reset to defaults</button>\n        </div>\n        \n        <details class=\"spend-growth\" open>\n          <summary>Annual Program Spending Growth Rates (%)</summary>\n          \n          <div class=\"growth-explanation\">\n            <p><strong>How spending grows each year:</strong></p>\n            <ul>\n              <li><strong>Baseline:</strong> Normal program cost increases (inflation, policy changes, etc.)</li>\n              <li><strong>Demographic:</strong> Extra growth due to population aging and demographic changes</li>\n              <li><strong>Total Growth = Baseline + Demographic</strong> (e.g., Healthcare: 3.5% + 1.2% = 4.7% per year)</li>\n            </ul>\n          </div>\n\n          <div class=\"growth-toolbar\">\n            <input\n              class=\"filter\"\n              v-model=\"growthFilter\"\n              placeholder=\"Filter categories (e.g., health, seniors)…\"\n            />\n            <div class=\"spacer\"></div>\n            <button class=\"btn\" @click=\"onResetAll()\">Reset all</button>\n          </div>\n\n          <div class=\"growth-head\">\n            <div class=\"label\">Category</div>\n            <div class=\"inputs-head\">\n              <span :title=\"t('simulator.multiYearProjections.tooltips.baseline', 'Normal program cost increases (inflation, policy changes, etc.)')\">\n                Baseline\n                <span class=\"help-icon\">ⓘ</span>\n              </span>\n              <span :title=\"t('simulator.multiYearProjections.tooltips.extraGrowth', 'Extra growth due to population aging and demographic changes')\">\n                Demographic\n                <span class=\"help-icon\">ⓘ</span>\n              </span>\n            </div>\n            <div class=\"actions\"></div>\n          </div>\n\n          <div class=\"growth-grid\">\n            <div\n              v-for=\"key in filteredKeys\"\n              :key=\"key\"\n              class=\"growth-row\"\n            >\n              <div class=\"label\">{{ prettyKey(key) }}</div>\n              <div class=\"inputs\">\n                <label class=\"sub\" :title=\"t('simulator.multiYearProjections.tooltips.baseline', 'Normal program cost increases')\">Baseline</label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  :min=\"-10\"\n                  :max=\"15\"\n                  v-model.number=\"settingsStore.spendingGrowth[key].baseline\"\n                  :title=\"`Baseline growth rate for ${prettyKey(key)}`\"\n                />\n                <label class=\"sub\" :title=\"t('simulator.multiYearProjections.tooltips.demographic', 'Extra growth due to population aging')\">Demographic</label>\n                <input\n                  type=\"number\"\n                  step=\"0.1\"\n                  :min=\"-5\"\n                  :max=\"10\"\n                  v-model.number=\"settingsStore.spendingGrowth[key].demographic\"\n                  :title=\"`Demographic growth rate for ${prettyKey(key)}`\"\n                />\n              </div>\n              <div class=\"actions\">\n                <button class=\"icon-btn\" :title=\"`Reset ${prettyKey(key)}`\" @click=\"onResetRow(key)\">\n                  <span class=\"material-icons\" aria-hidden=\"true\">restart_alt</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </details>\n      </div>\n\n      <div v-if=\"showPlanner\" class=\"charts-section\">\n        <ProjectionsPanelLite :show-controls=\"false\" />\n      </div>\n\n      <div class=\"table-wrapper\">\n        <table class=\"proj-table\">\n          <thead>\n            <tr>\n              <th>Year</th>\n              <th>GDP (B$)</th>\n              <th>Revenue (B$)</th>\n              <th>Spending (B$)</th>\n              <th>Surplus/Deficit (B$)</th>\n              <th>Debt (B$)</th>\n              <th>Debt/GDP (%)</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"r in rows\" :key=\"r.year\">\n              <td>\n                <button class=\"year-link\" @click=\"openYearEditor(r.year)\">{{ r.year }}</button>\n              </td>\n              <td>{{ fmt(r.gdp) }}</td>\n              <td>{{ fmt(r.revenueTotal) }}</td>\n              <td>{{ fmt(r.spendingTotal) }}</td>\n              <td :class=\"{ positive: r.deficit >= 0, negative: r.deficit < 0 }\">{{ fmt(r.deficit) }}</td>\n              <td>{{ fmt(r.debt) }}</td>\n              <td>{{ (r.debtToGDP * 100).toFixed(1) }}%</td>\n            </tr>\n          </tbody>\n        </table>\n        <div v-if=\"rows.length === 0\" class=\"empty\">\n          No projection data available. Check settings.\n        </div>\n      </div>\n      <div v-if=\"showYearModal\" class=\"year-editor\">\n        <div class=\"ye-header\">\n          <h4>Edit {{ selectedYear }} (program spending)</h4>\n          <button class=\"btn\" @click=\"closeYearEditor\">Close</button>\n        </div>\n        <div class=\"ye-grid\">\n          <div class=\"row\">\n            <label :title=\"t('projectionsPanel.spendingBoostTooltip', 'One-time adjustment to program spending for this year')\">{{ t('projectionsPanel.spendingBoost', 'Spending boost (%)') }}</label>\n            <input type=\"number\" step=\"0.5\" :min=\"-15\" :max=\"15\" v-model.number=\"yearLevel\" />\n          </div>\n          <div class=\"row\">\n            <label :title=\"t('projectionsPanel.growthRateBoostTooltip', 'Adjusts growth rate for this year and forward. +0.5 means spending grows 0.5 percentage points faster.')\">{{ t('projectionsPanel.growthRateBoost', 'Growth rate boost (pp)') }}</label>\n            <input type=\"number\" step=\"0.1\" v-model.number=\"yearGrowth\" />\n          </div>\n          <div class=\"row\">\n            <label>Apply forward</label>\n            <input type=\"checkbox\" v-model=\"applyForward\" />\n          </div>\n        </div>\n        <div class=\"ye-actions\">\n          <button class=\"btn\" @click=\"resetYearOverrides\">Reset year</button>\n          <button class=\"btn primary\" @click=\"applyYearOverrides\">Apply</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { useBudgetSimulatorStore } from '@/domains/budget/store/budgetSimulator';\nimport { useMultiYearSettingsStore } from '@/domains/budget/store/multiYearSettings.js';\nimport { makeBaseSnapshotFromStore } from '@/domains/budget/utils/projectionAdapters.js';\nimport { projectAll } from '@/domains/budget/utils/projections.js';\nimport { FEATURES } from '@/features.js';\nimport ProjectionsPanelLite from '@/domains/budget/components/ProjectionsPanelLite.vue';\nimport { useI18n } from '@/i18n';\n\n// i18n setup\nconst { t } = useI18n();\nconst i18nText = (key, fallback = '') => {\n  const value = t(key);\n  return value === key ? fallback : value;\n};\n\nconst budget = useBudgetSimulatorStore();\nconst settingsStore = useMultiYearSettingsStore();\nconst showPlanner = ref(true); // Changed from false to true - planner open by default\nconst selectedPreset = ref('');\nconst showYearModal = ref(false);\nconst selectedYear = ref(null);\nconst yearLevel = ref(0);\nconst yearGrowth = ref(0);\nconst applyForward = ref(false);\nconst growthFilter = ref('');\n\nconst filteredKeys = computed(() => {\n  const q = growthFilter.value.trim().toLowerCase();\n  const keys = Object.keys(settingsStore.spendingGrowth || {});\n  if (!q) return keys;\n  return keys.filter(k => prettyKey(k).toLowerCase().includes(q));\n});\n\nfunction normalize() {\n  // Ensure base year is reasonable\n  if (settingsStore.planning.baseYear < 2000) settingsStore.planning.baseYear = 2000;\n  if (settingsStore.planning.baseYear > 2100) settingsStore.planning.baseYear = 2100;\n  \n  // Ensure horizon is reasonable\n  if (settingsStore.planning.horizonYears < 1) settingsStore.planning.horizonYears = 1;\n  if (settingsStore.planning.horizonYears > 50) settingsStore.planning.horizonYears = 50;\n  \n  // Clamp economic assumptions\n  settingsStore.economic.gdpReal = Math.max(-5, Math.min(10, Number(settingsStore.economic.gdpReal || 0)));\n  settingsStore.economic.inflation = Math.max(-2, Math.min(20, Number(settingsStore.economic.inflation || 0)));\n  settingsStore.economic.interestRate = Math.max(0, Math.min(20, Number(settingsStore.economic.interestRate || 0)));\n}\n\nconst rows = computed(() => {\n  const base = makeBaseSnapshotFromStore(budget);\n  const settings = {\n    planning: settingsStore.planning,\n    economic: settingsStore.economic,\n    revenueElasticity: settingsStore.revenueElasticity,\n    spendingGrowth: settingsStore.spendingGrowth,\n    categoryUserDelta: settingsStore.categoryUserDelta,\n    spendingGlobal: settingsStore.spendingGlobal,\n    yearOverrides: settingsStore.yearOverrides,\n  };\n  return projectAll({ base, settings });\n});\n\nfunction applyPreset() {\n  if (!selectedPreset.value) return;\n  \n  const presets = {\n    conservative: {\n      gdpReal: 1.5,\n      inflation: 2.0,\n      interestRate: 3.5,\n    },\n    moderate: {\n      gdpReal: 2.0,\n      inflation: 2.5,\n      interestRate: 4.0,\n    },\n    optimistic: {\n      gdpReal: 2.5,\n      inflation: 2.0,\n      interestRate: 3.0,\n    },\n  };\n  \n  const preset = presets[selectedPreset.value];\n  if (preset) {\n    settingsStore.economic.gdpReal = preset.gdpReal;\n    settingsStore.economic.inflation = preset.inflation;\n    settingsStore.economic.interestRate = preset.interestRate;\n  }\n}\n\nfunction resetToDefaults() {\n  settingsStore.economic.gdpReal = 2.0;\n  settingsStore.economic.inflation = 2.0;\n  settingsStore.economic.interestRate = 4.0;\n  settingsStore.spendingGlobal.levelPct = 0;\n  settingsStore.spendingGlobal.growthDeltaPct = 0;\n  selectedPreset.value = '';\n}\n\nfunction clampGlobal() {\n  settingsStore.spendingGlobal.levelPct = Math.max(-15, Math.min(15, Number(settingsStore.spendingGlobal.levelPct || 0)));\n  // Removed growth rate restrictions - users can set any value they want\n  settingsStore.spendingGlobal.growthDeltaPct = Number(settingsStore.spendingGlobal.growthDeltaPct || 0);\n}\n\nfunction openYearEditor(year) {\n  selectedYear.value = year;\n  const ov = settingsStore.yearOverrides[year]?.spending || {};\n  yearLevel.value = Number(ov.levelPct || 0);\n  yearGrowth.value = Number(ov.growthDeltaPct || 0);\n  applyForward.value = Boolean(ov.applyForward);\n  showYearModal.value = true;\n}\n\nfunction closeYearEditor() {\n  showYearModal.value = false;\n  selectedYear.value = null;\n  yearLevel.value = 0;\n  yearGrowth.value = 0;\n  applyForward.value = false;\n}\n\nfunction applyYearOverrides() {\n  if (!selectedYear.value) return;\n  const yr = Number(selectedYear.value);\n  \n  const cur = settingsStore.yearOverrides[yr] || {};\n  settingsStore.setYearSpendingOverride(yr, {\n    spending: {\n      ...(cur.spending || {}),\n      levelPct: Math.max(-15, Math.min(15, Number(yearLevel.value || 0))),\n      // Removed growth rate restrictions - users can set any value they want\n      growthDeltaPct: Number(yearGrowth.value || 0),\n    },\n    applyForward: applyForward.value,\n  });\n  \n  closeYearEditor();\n}\n\nfunction resetYearOverrides() {\n  if (!selectedYear.value) return;\n  settingsStore.clearYearSpendingOverride(Number(selectedYear.value));\n  closeYearEditor();\n}\n\nfunction fmt(n) {\n  return typeof n === 'number' ? n.toFixed(1) : '0.0';\n}\n\nfunction prettyKey(key) {\n  return key\n    .replace(/([A-Z])/g, ' $1')\n    .replace(/^./, c => c.toUpperCase());\n}\n\nfunction onResetRow(key) {\n  if (settingsStore.resetSpendingGrowthKey) settingsStore.resetSpendingGrowthKey(key);\n}\n\nfunction onResetAll() {\n  if (settingsStore.resetAllSpendingGrowth) settingsStore.resetAllSpendingGrowth();\n}\n</script>\n\n<style scoped>\n.multi-year-panel { display: grid; gap: 12px; }\n.header-row { display: flex; align-items: center; justify-content: space-between; }\n.title { margin: 0; font-size: 1rem; color: #111827; }\n.assumptions { display: grid; grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); gap: 12px; margin-bottom: 16px; }\n.assumptions.editable { align-items: flex-end; }\n.assumptions .row { display: flex; flex-direction: column; gap: 4px; }\n.assumptions .row input, .assumptions .row select { padding: 6px 8px; border: 1px solid #d1d5db; border-radius: 6px; min-width: 140px; }\n.assumptions .row label { \n  font-size: 0.8rem; \n  color: #6b7280; \n  cursor: help;\n  position: relative;\n}\n.assumptions .row label:hover {\n  color: #374151;\n}\n.assumptions .preset-row { flex-direction: row; align-items: center; gap: 8px; }\n\n.growth-toolbar { position: sticky; top: 0; z-index: 1; display: flex; gap: 8px; align-items: center; padding: 8px 6px; margin: 6px -6px 8px; background: rgba(255,255,255,0.92); backdrop-filter: blur(6px); border-bottom: 1px solid #e5e7eb; }\n.growth-toolbar .filter { width: min(380px, 50vw); padding: 6px 10px; border: 1px solid #e5e7eb; border-radius: 10px; }\n.growth-toolbar .spacer { flex: 1 1 auto; }\n\ndetails.spend-growth { grid-column: 1 / -1; background: linear-gradient(180deg, #fafbff 0%, #ffffff 60%); border: 1px solid #e5e7eb; border-radius: 12px; padding: 8px 10px 12px; box-shadow: 0 2px 10px rgba(0,0,0,0.04); }\ndetails.spend-growth > summary { font-weight: 700; color: #111827; cursor: pointer; }\n\n.growth-head { display: grid; grid-template-columns: 1fr 2fr auto; gap: 8px; align-items: center; padding: 4px 6px; color: #6b7280; font-size: .75rem; }\n.growth-head .inputs-head { display: grid; grid-template-columns: 1fr 1fr; gap: 6px; justify-items: start; }\n\n.growth-grid { display: grid; grid-template-columns: 1fr; gap: 10px; margin-top: 4px; }\n.growth-row { display: grid; grid-template-columns: 1fr 2fr auto; gap: 10px; align-items: center; padding: 10px; border: 1px solid #e5e7eb; border-radius: 12px; background: #fff; transition: box-shadow .15s ease, border-color .15s ease; }\n.growth-row:hover { border-color: #c7d2fe; box-shadow: 0 4px 14px rgba(29,78,216,0.08); }\n.growth-row .label { font-size: 0.9rem; color: #111827; font-weight: 600; }\n.growth-row .inputs { display: grid; grid-template-columns: auto 1fr auto 1fr; gap: 8px; align-items: center; }\n.growth-row .inputs input { padding: 8px 10px; border: 1px solid #d1d5db; border-radius: 10px; transition: border-color .15s, box-shadow .15s; }\n.growth-row .inputs input:focus { border-color: #3b82f6; box-shadow: 0 0 0 3px rgba(59,130,246,0.15); outline: none; }\n.growth-row .sub { font-size: 0.75rem; color: #6b7280; }\n.actions { display: flex; justify-content: flex-end; }\n.icon-btn { border: 1px solid #e5e7eb; background: #f9fafb; color: #374151; border-radius: 8px; width: 36px; height: 32px; display: inline-flex; align-items: center; justify-content: center; cursor: pointer; }\n.icon-btn:hover { background: #eef2ff; border-color: #c7d2fe; color: #1d4ed8; }\n\n.btn {\n  padding: 8px 16px;\n  border: 1px solid #3b82f6;\n  border-radius: 8px;\n  background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);\n  color: #374151;\n  font-weight: 600;\n  font-size: 0.875rem;\n  cursor: pointer;\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 2px 8px rgba(107, 114, 128, 0.15);\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  position: relative;\n  overflow: hidden;\n}\n\n.btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);\n  transition: left 0.5s;\n}\n\n.btn:hover::before {\n  left: 100%;\n}\n\n.btn.primary {\n  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);\n  color: white;\n  border-color: #1d4ed8;\n  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);\n}\n\n.btn.primary:hover {\n  background: linear-gradient(135deg, #1d4ed8 0%, #1e40af 100%);\n  transform: translateY(-1px);\n  box-shadow: 0 6px 16px rgba(59, 130, 246, 0.4);\n}\n\n.table-wrapper { overflow-x: auto; border: 1px solid #e5e7eb; border-radius: 8px; }\n.proj-table { width: 100%; border-collapse: collapse; font-size: 0.875rem; }\n.proj-table th, .proj-table td { padding: 8px 12px; text-align: left; border-bottom: 1px solid #e5e7eb; }\n.proj-table th { background: #f9fafb; font-weight: 600; color: #374151; }\n.proj-table .positive { color: #059669; font-weight: 600; }\n.proj-table .negative { color: #dc2626; font-weight: 600; }\n.year-link { background: none; border: none; color: #3b82f6; cursor: pointer; text-decoration: underline; }\n.year-link:hover { color: #1d4ed8; }\n\n.year-editor {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  border: 1px solid #e5e7eb;\n  border-radius: 12px;\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  z-index: 1000;\n  min-width: 400px;\n  max-width: 90vw;\n}\n\n.ye-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 20px;\n  border-bottom: 1px solid #e5e7eb;\n}\n\n.ye-header h4 {\n  margin: 0;\n  font-size: 1.125rem;\n  color: #111827;\n}\n\n.ye-grid {\n  padding: 20px;\n  display: grid;\n  gap: 16px;\n}\n\n.ye-grid .row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n  align-items: center;\n}\n\n.ye-grid label {\n  font-size: 0.875rem;\n  color: #374151;\n  font-weight: 500;\n}\n\n.ye-grid input {\n  padding: 8px 12px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  font-size: 0.875rem;\n}\n\n.ye-actions {\n  display: flex;\n  gap: 12px;\n  justify-content: flex-end;\n  padding: 16px 20px;\n  border-top: 1px solid #e5e7eb;\n  background: #f9fafb;\n  border-radius: 0 0 12px 12px;\n}\n\n.charts-section {\n  background: #fff;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 0;\n}\n\n.embedded-planner {\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  padding: 16px;\n  background: #fafbff;\n}\n\n.flag-disabled {\n  padding: 16px;\n  background: #fef2f2;\n  border: 1px solid #fecaca;\n  border-radius: 8px;\n  color: #dc2626;\n  text-align: center;\n}\n\n.empty {\n  padding: 32px;\n  text-align: center;\n  color: #6b7280;\n  font-style: italic;\n}\n\n.growth-explanation {\n  background: #f0f9ff;\n  border: 1px solid #bae6fd;\n  border-radius: 8px;\n  padding: 12px 16px;\n  margin: 8px 0 12px 0;\n  font-size: 0.875rem;\n}\n\n.growth-explanation p {\n  margin: 0 0 8px 0;\n  color: #0c4a6e;\n  font-weight: 600;\n}\n\n.growth-explanation ul {\n  margin: 0;\n  padding-left: 16px;\n  color: #0369a1;\n}\n\n.growth-explanation li {\n  margin-bottom: 4px;\n}\n\n.help-icon {\n  font-size: 0.75rem;\n  color: #6b7280;\n  margin-left: 4px;\n  cursor: help;\n}\n</style>\n","import script from \"./MultiYearProjectionsPanel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MultiYearProjectionsPanel.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MultiYearProjectionsPanel.vue?vue&type=style&index=0&id=fd2e94a6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fd2e94a6\"]])\n\nexport default __exports__"],"names":["t","useI18n","i18nText","key","fallback","value","budget","useBudgetSimulatorStore","settingsStore","useMultiYearSettingsStore","showPlanner","ref","selectedPreset","showYearModal","selectedYear","yearLevel","yearGrowth","applyForward","growthFilter","filteredKeys","computed","q","trim","toLowerCase","keys","Object","spendingGrowth","filter","k","prettyKey","includes","normalize","planning","baseYear","horizonYears","economic","gdpReal","Math","max","min","Number","inflation","interestRate","rows","base","makeBaseSnapshotFromStore","settings","revenueElasticity","categoryUserDelta","spendingGlobal","yearOverrides","projectAll","applyPreset","presets","conservative","moderate","optimistic","preset","resetToDefaults","levelPct","growthDeltaPct","clampGlobal","openYearEditor","year","ov","spending","Boolean","closeYearEditor","applyYearOverrides","yr","cur","setYearSpendingOverride","resetYearOverrides","clearYearSpendingOverride","fmt","n","toFixed","replace","c","toUpperCase","onResetRow","resetSpendingGrowthKey","onResetAll","resetAllSpendingGrowth","__exports__"],"sourceRoot":""}