{"version":3,"file":"js/common-f3c177fd.378fe866.js","mappings":"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","sources":["webpack://my-new-project/./src/domains/calculator/composables/calculator.js","webpack://my-new-project/./src/domains/calculator/utils/taxCalculations.js","webpack://my-new-project/./src/domains/calculator/store/calculator.js","webpack://my-new-project/./src/domains/calculator/store/config.js","webpack://my-new-project/./src/domains/calculator/utils/chartUtils.js","webpack://my-new-project/./src/domains/calculator/utils/htmlLegendPlugin.js","webpack://my-new-project/./src/domains/calculator/components/PresetSelector.vue","webpack://my-new-project/./src/domains/calculator/components/PresetSelector.vue?2774"],"sourcesContent":["import { computed } from 'vue'\nimport { useCalculatorStore } from '@/domains/calculator/store/calculator.js'\nimport { storeToRefs } from 'pinia';\nimport { useVuelidate } from '@vuelidate/core'\nimport { numeric, minValue, maxValue, helpers } from '@vuelidate/validators'\n\nexport const useCalculator = () => {\n\n  const calculatorStore = useCalculatorStore();\n\n  const {\n    income,\n    selectedRegion,\n    selfEmploymentIncome,\n    capitalGainsBeforeJune25,\n    capitalGainsAfterJune25,\n    eligibleDividends,\n    ineligibleDividends,\n    otherIncome,\n    rrspDeduction,\n    maritalStatus,\n    numberOfDependents,\n    numberOfChildrenUnder18,\n    numberOfDependentsWithDisabilities\n  } = storeToRefs(calculatorStore);\n\n  // Helper function to sanitize numeric input\n  const sanitizeNumericInput = (value) => {\n    if (value === undefined || value === '') return undefined;\n    // Remove any non-numeric characters except decimal point\n    const sanitized = String(value).replace(/[^0-9.]/g, '');\n    // Ensure only one decimal point\n    const parts = sanitized.split('.');\n    if (parts.length > 2) {\n      return parseFloat(parts[0] + '.' + parts.slice(1).join(''));\n    }\n    return parseFloat(sanitized);\n  };\n\n  // Helper function to validate decimal places\n  const maxDecimalPlaces = (maxPlaces) => (value) => {\n    if (value === undefined || value === '') return true;\n    const decimalStr = String(value).split('.')[1];\n    return !decimalStr || decimalStr.length <= maxPlaces;\n  };\n\n  // Helper function to check correct type\n  const checkCorrectType = (value) => {\n    return value === undefined || typeof value === 'number';\n  };\n\n  // Maximum values for different inputs\n  const MAX_INCOME = 1000000000; // $1 billion\n  const MAX_DEPENDENTS = 20;\n  const MAX_RRSP = 29210; // 2024 RRSP limit\n\n  const rules = computed(() => ({\n    income: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_INCOME),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    selfEmploymentIncome: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_INCOME),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    capitalGainsBeforeJune25: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_INCOME),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    capitalGainsAfterJune25: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_INCOME),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    eligibleDividends: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_INCOME),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    ineligibleDividends: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_INCOME),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    otherIncome: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_INCOME),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    rrspDeduction: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_RRSP),\n      maxDecimalPlaces: helpers.withMessage(\n        'Maximum 2 decimal places allowed',\n        maxDecimalPlaces(2)\n      )\n    },\n    numberOfDependents: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_DEPENDENTS),\n      maxDecimalPlaces: helpers.withMessage(\n        'Must be a whole number',\n        maxDecimalPlaces(0)\n      )\n    },\n    numberOfChildrenUnder18: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_DEPENDENTS),\n      maxDecimalPlaces: helpers.withMessage(\n        'Must be a whole number',\n        maxDecimalPlaces(0)\n      )\n    },\n    numberOfDependentsWithDisabilities: {\n      numeric,\n      checkCorrectType,\n      minValue: minValue(0),\n      maxValue: maxValue(MAX_DEPENDENTS),\n      maxDecimalPlaces: helpers.withMessage(\n        'Must be a whole number',\n        maxDecimalPlaces(0)\n      )\n    }\n  }))\n\n  const v$ = useVuelidate(rules, {\n    income,\n    selfEmploymentIncome,\n    capitalGainsBeforeJune25,\n    capitalGainsAfterJune25,\n    eligibleDividends,\n    ineligibleDividends,\n    otherIncome,\n    rrspDeduction,\n    maritalStatus,\n    numberOfDependents,\n    numberOfChildrenUnder18,\n    numberOfDependentsWithDisabilities\n  })\n\n  const canCalculate = computed(() => {\n    return !!selectedRegion.value && !v$.value.$invalid && !v$.value.$error\n      /*(\n        (income.value && income.value > 0) ||\n        (selfEmploymentIncome.value && selfEmploymentIncome.value > 0) ||\n        (capitalGainsBeforeJune25.value && capitalGainsBeforeJune25.value > 0) ||\n        (capitalGainsAfterJune25.value && capitalGainsAfterJune25.value > 0) ||\n        (eligibleDividends.value && eligibleDividends.value > 0) ||\n        (ineligibleDividends.value && ineligibleDividends.value > 0) ||\n        (otherIncome.value && otherIncome.value > 0)\n      )*/\n  });\n\n  return {\n    v$,\n    sanitizeNumericInput,\n    canCalculate\n  }\n}","/**\n * Tax calculation utilities for the calculator domain\n */\n\n/**\n * Calculate tax based on progressive tax brackets\n * @param {number} taxable - The taxable amount\n * @param {Array<{rate: number, upTo: number}>} brackets - Array of tax brackets\n * @returns {number} The calculated tax amount\n */\nexport function calculateBracketTax(taxable, brackets) {\n  let tax = 0;\n  let previousUpTo = 0;\n  for (const bracket of brackets) {\n    if (taxable > bracket.upTo) {\n      const slice = bracket.upTo - previousUpTo;\n      tax += slice * bracket.rate;\n      previousUpTo = bracket.upTo;\n    } else {\n      const slice = taxable - previousUpTo;\n      tax += slice * bracket.rate;\n      break;\n    }\n  }\n  return Math.max(tax, 0);\n}\n\n/**\n * Calculate dividend tax credits\n * @param {number} eligibleDividends - Amount of eligible dividends\n * @param {number} ineligibleDividends - Amount of ineligible dividends\n * @returns {number} Total dividend tax credit\n */\nexport function calculateDividendTaxCredit(eligibleDividends, ineligibleDividends) {\n  const grossedUpEligible = eligibleDividends * 1.38;\n  const grossedUpIneligible = ineligibleDividends * 1.15;\n  const fedEligibleCredit = 0.150198 * grossedUpEligible;\n  const fedIneligibleCredit = 0.090301 * grossedUpIneligible;\n  return fedEligibleCredit + fedIneligibleCredit;\n}\n\n/**\n * Calculate CPP/QPP contributions\n * @param {number} income - Employment income\n * @param {boolean} isSelfEmployed - Whether the income is from self-employment\n * @returns {number} CPP/QPP contribution amount\n */\nexport function calculatePensionPlanContribution(income, isSelfEmployed) {\n  const annualCppMax = 3754.45;\n  const annualCppMaxSelfEmployed = 3754.45 * 2;\n  const rate = isSelfEmployed ? 0.114 : 0.057;\n  const maxContrib = isSelfEmployed ? annualCppMaxSelfEmployed : annualCppMax;\n  return Math.min(income * rate, maxContrib);\n}\n\n/**\n * Calculate EI premiums\n * @param {number} income - Employment income\n * @param {string} province - Province code (for Quebec-specific rate)\n * @returns {number} EI premium amount\n */\nexport function calculateEiPremium(income, province = null) {\n  // Quebec has a lower EI rate\n  if (province === 'QC') {\n    const annualEiMax = 834; // Quebec max\n    return Math.min(income * 0.0132, annualEiMax);\n  }\n  \n  // Federal rate for other provinces\n  const annualEiMax = 1002.45;\n  return Math.min(income * 0.0163, annualEiMax);\n}\n\n/**\n * Calculate child tax credit\n * @param {number} numberOfChildren - Number of children under 18\n * @returns {number} Child tax credit amount\n */\nexport function calculateChildCredit(numberOfChildren) {\n  return 2000 * (numberOfChildren || 0);\n}\n\n/**\n * Calculate effective basic personal amount based on marital status\n * @param {number} baseAmount - Base basic personal amount\n * @param {string} maritalStatus - Marital status\n * @returns {number} Effective basic personal amount\n */\nexport function calculateEffectiveBPA(baseAmount) {\n  return baseAmount;\n}\n\n/**\n * Calculate QPIP (Québec Parental Insurance Plan) contribution\n * @param {number} income - Employment income\n * @returns {number} QPIP contribution amount\n */\nexport function calculateQpipContribution(income) {\n  const qpipRate = 0.00494; // 0.494%\n  const maxContribution = 449; // 91000 * 0.00494\n  return Math.min(income * qpipRate, maxContribution);\n}\n\n/**\n * Calculate Quebec abatement (reduces federal tax)\n * @param {number} federalBasicTax - Federal basic tax before credits\n * @returns {number} Quebec abatement amount\n */\nexport function calculateQuebecAbatement(federalBasicTax) {\n  return federalBasicTax * 0.165; // 16.5% reduction\n}\n\n/**\n * Calculate QPP contribution (Quebec-specific)\n * @param {number} income - Employment income\n * @param {boolean} isSelfEmployed - Whether the income is from self-employment\n * @returns {number} QPP contribution amount\n */\nexport function calculateQppContribution(income, isSelfEmployed) {\n  const qppRate = 0.064; // 6.4%\n  const basicExemption = 3500;\n  const maxContribution = 4160; // (68500 - 3500) * 0.064\n  \n  if (isSelfEmployed) {\n    // Self-employed pays both employee and employer portions\n    return Math.min(income * qppRate * 2, maxContribution * 2);\n  }\n  \n  const pensionableIncome = Math.max(0, income - basicExemption);\n  return Math.min(pensionableIncome * qppRate, maxContribution);\n}\n\n// Year-aware contribution tables\nconst EI_TABLE = {\n  '2024': { \n    nonQC: { rate: 0.0166, mie: 63200, max: 1049.12 }, \n    QC: { rate: 0.0132, mie: 63200, max: 834.24 } \n  },\n  '2025': { \n    nonQC: { rate: 0.0164, mie: 65700, max: 1077.48 }, \n    QC: { rate: 0.0131, mie: 65700, max: 860.67 } \n  },\n};\n\nconst CPP_TABLE = {\n  '2024': { \n    ybe: 3500, \n    ympe: 68500, \n    yampe: 73200, \n    baseRate: 0.0595, \n    baseMax: 3867.50, \n    addRate: 0.04, \n    addMax: 188.00 \n  },\n  '2025': { \n    ybe: 3500, \n    ympe: 71300, \n    yampe: 81200, \n    baseRate: 0.0595, \n    baseMax: 4034.10, \n    addRate: 0.04, \n    addMax: 396.00 \n  },\n};\n\nconst QPP_TABLE = {\n  '2024': { \n    ybe: 3500, \n    mpe: 68500, \n    ampe: 73200, \n    baseRate: 0.064, \n    baseMax: 4160.00, \n    addRate: 0.04 \n  },\n  '2025': { \n    ybe: 3500, \n    mpe: 71300, \n    ampe: 81200, \n    baseRate: 0.064, \n    baseMax: 4339.20, \n    addRate: 0.04 \n  },\n};\n\nconst QPIP_TABLE = {\n  '2024': { rate: 0.00494, mie: 94000, max: 464.36 },\n  '2025': { rate: 0.00494, mie: 98000, max: 484.12 },\n};\n\n/**\n * Calculate EI premium with year-aware rates\n * @param {number} income - Employment income\n * @param {string} provinceCode - Province code (for Quebec-specific rate)\n * @param {string} year - Tax year\n * @returns {number} EI premium amount\n */\nexport function calculateEiPremiumYearAware(income, provinceCode, year) {\n  const y = EI_TABLE[String(year)] || EI_TABLE['2024'];\n  const isQC = provinceCode === 'QC';\n  const { rate, max } = isQC ? y.QC : y.nonQC;\n  return Math.min(income * rate, max);\n}\n\n/**\n * Calculate CPP contributions (base + additional) with year-aware rates\n * @param {number} income - Employment income\n * @param {boolean} isSelfEmployed - Whether the income is from self-employment\n * @param {string} year - Tax year\n * @returns {number} CPP contribution amount\n */\nexport function calculateCppContributions(income, isSelfEmployed, year) {\n  const y = CPP_TABLE[String(year)] || CPP_TABLE['2024'];\n  const basePensionable = Math.max(0, Math.min(income, y.ympe) - y.ybe);\n  const base = Math.min(basePensionable * y.baseRate, y.baseMax);\n  const addBase = Math.max(0, Math.min(income, y.yampe) - y.ympe);\n  const add = Math.min(addBase * y.addRate, y.addMax);\n  const employee = base + add;\n  return isSelfEmployed ? employee * 2 : employee;\n}\n\n/**\n * Calculate QPP contributions (base + additional) with year-aware rates\n * @param {number} income - Employment income\n * @param {boolean} isSelfEmployed - Whether the income is from self-employment\n * @param {string} year - Tax year\n * @returns {number} QPP contribution amount\n */\nexport function calculateQppContributions(income, isSelfEmployed, year) {\n  const y = QPP_TABLE[String(year)] || QPP_TABLE['2024'];\n  const basePensionable = Math.max(0, Math.min(income, y.mpe) - y.ybe);\n  const base = Math.min(basePensionable * y.baseRate, y.baseMax);\n  const addBase = Math.max(0, Math.min(income, y.ampe) - y.mpe);\n  const add = addBase * y.addRate;\n  const employee = base + add;\n  return isSelfEmployed ? employee * 2 : employee;\n}\n\n/**\n * Calculate QPIP contribution with year-aware rates\n * @param {number} income - Employment income\n * @param {string} year - Tax year\n * @returns {number} QPIP contribution amount\n */\nexport function calculateQpipContributionYearAware(income, year) {\n  const y = QPIP_TABLE[String(year)] || QPIP_TABLE['2024'];\n  return Math.min(income * y.rate, y.max);\n}\n\n/**\n * Calculate federal BPA with phase-out for high income\n * @param {number} baseEnhanced - Base BPA amount\n * @param {number} baseFloor - Minimum BPA after phase-out\n * @param {number} income - Income for phase-out calculation\n * @param {string} year - Tax year\n * @returns {number} Effective BPA amount\n */\nexport function computeFederalBPAForIncome(baseEnhanced, baseFloor, income, year) {\n  const ranges = {\n    '2024': { start: 173205, end: 246752 },\n    '2025': { start: 177882, end: 253414 },\n  };\n  const r = ranges[String(year)] || ranges['2024'];\n  if (income <= r.start) return baseEnhanced;\n  if (income >= r.end) return baseFloor;\n  const frac = (income - r.start) / (r.end - r.start);\n  return baseEnhanced - (baseEnhanced - baseFloor) * frac;\n} ","import { defineStore, storeToRefs } from \"pinia\";\nimport { ref, computed } from \"vue\";\nimport { useSalaryStore } from '@/domains/calculator/store/salary.js'\nimport { useYearStore } from '@/domains/calculator/store/year.js'\nimport { useConfigStore } from \"@/domains/calculator/store/config.js\";\nimport { createValidatedAction } from '@/utils/storeActionWrapper.js';\nimport { useI18n } from '@/i18n';\nimport {\n  calculateBracketTax,\n  calculateDividendTaxCredit,\n  calculateEffectiveBPA,\n  calculateQuebecAbatement,\n  calculateEiPremiumYearAware,\n  calculateCppContributions,\n  calculateQppContributions,\n  calculateQpipContributionYearAware,\n  computeFederalBPAForIncome,\n} from '../utils/taxCalculations.js';\nimport {\n  federalBasicPersonalAmount2022,\n  federalBasicPersonalAmount2023,\n  federalBasicPersonalAmount2024,\n  federalBasicPersonalAmount2025,\n  provincialBasicPersonalAmounts2022,\n  provincialBasicPersonalAmounts2023,\n  provincialBasicPersonalAmounts2024,\n  provincialBasicPersonalAmounts2025,\n  federalTaxBrackets2022,\n  federalTaxBrackets2023,\n  federalTaxBrackets2024,\n  federalTaxBrackets2025,\n  provincialTaxBrackets2022,\n  provincialTaxBrackets2023,\n  provincialTaxBrackets2024,\n  provincialTaxBrackets2025,\n  budgetCategories2022,\n  budgetCategories2024,\n  taxCredits2024,\n  taxCredits2025\n} from \"../constants/taxData.js\";\n\n// Province name to code mapping\nconst provinceCodeMap = {\n  'Alberta': 'AB',\n  'British Columbia': 'BC',\n  'Manitoba': 'MB',\n  'New Brunswick': 'NB',\n  'Newfoundland and Labrador': 'NL',\n  'Nova Scotia': 'NS',\n  'Ontario': 'ON',\n  'Prince Edward Island': 'PE',\n  'Quebec': 'QC',\n  'Saskatchewan': 'SK',\n  'Northwest Territories': 'NT',\n  'Nunavut': 'NU',\n  'Yukon': 'YT'\n};\n\nexport const useCalculatorStore = defineStore('calculator', () => {\n\n  const {\n      periodMultiplier\n    } = storeToRefs(useSalaryStore())\n\n  const {\n    selectedAllocationCategories,\n    sortOrder\n  } = storeToRefs(useConfigStore())\n  \n  const yearStore = useYearStore();\n  const { t } = useI18n();\n  \n  const translate = (key, fallback = '', params) => {\n    const value = t(key, params)\n    return value === key ? fallback : value\n  }\n\n  const selectedRegion = ref('')\n  const income = ref(undefined)\n  const selfEmploymentIncome = ref(undefined)\n  const capitalGainsBeforeJune25 = ref(undefined)\n  const capitalGainsAfterJune25 = ref(undefined)\n  const eligibleDividends = ref(undefined)\n  const ineligibleDividends = ref(undefined)\n  const otherIncome = ref(undefined)\n  const rrspDeduction = ref(undefined)\n  const maritalStatus = ref('')\n  const numberOfDependents = ref(undefined)\n  const numberOfChildrenUnder18 = ref(undefined)\n  const numberOfDependentsWithDisabilities = ref(undefined)\n\n  const federalDividendTaxCredit = computed(() => {\n    return calculateDividendTaxCredit(\n      grossedUpEligibleDividends.value,\n      grossedUpIneligibleDividends.value\n    );\n  });\n\n  const regularIncome = computed(() =>\n    (income.value || 0) +\n    (selfEmploymentIncome.value || 0) +\n    (otherIncome.value || 0)\n  );\n\n  const totalCapitalGains = computed(() =>\n    (capitalGainsBeforeJune25.value || 0) + (capitalGainsAfterJune25.value || 0)\n  );\n\n  const grossedUpEligibleDividends = computed(() =>\n    (eligibleDividends.value || 0) * 1.38\n  );\n  const grossedUpIneligibleDividends = computed(() =>\n    (ineligibleDividends.value || 0) * 1.15\n  );\n\n  const taxableCapitalGains = computed(() => 0.5 * totalCapitalGains.value);\n\n  const annualRegularIncome = computed(() => regularIncome.value * periodMultiplier.value);\n  const annualTaxableCapitalGains = computed(() => taxableCapitalGains.value * periodMultiplier.value);\n  const annualRrspDeduction = computed(() => (rrspDeduction.value || 0) * periodMultiplier.value);\n\n  // Get the appropriate tax brackets and basic personal amount based on selected year\n  const currentFederalTaxBrackets = computed(() => {\n    switch(yearStore.selectedTaxYear) {\n      case '2022': return federalTaxBrackets2022;\n      case '2023': return federalTaxBrackets2023;\n      case '2024': return federalTaxBrackets2024;\n      case '2025': return federalTaxBrackets2025;\n      default: return federalTaxBrackets2023;\n    }\n  });\n\n  const currentFederalBasicPersonalAmount = computed(() => {\n    switch(yearStore.selectedTaxYear) {\n      case '2022': return federalBasicPersonalAmount2022;\n      case '2023': return federalBasicPersonalAmount2023;\n      case '2024': return federalBasicPersonalAmount2024;\n      case '2025': return federalBasicPersonalAmount2025;\n      default: return federalBasicPersonalAmount2023;\n    }\n  });\n\n  const currentProvincialBasicPersonalAmounts = computed(() => {\n    switch(yearStore.selectedTaxYear) {\n      case '2022': return provincialBasicPersonalAmounts2022;\n      case '2023': return provincialBasicPersonalAmounts2023;\n      case '2024': return provincialBasicPersonalAmounts2024;\n      case '2025': return provincialBasicPersonalAmounts2025;\n      default: return provincialBasicPersonalAmounts2023;\n    }\n  });\n\n  const currentProvincialTaxBrackets = computed(() => {\n    switch(yearStore.selectedTaxYear) {\n      case '2022': return provincialTaxBrackets2022;\n      case '2023': return provincialTaxBrackets2023;\n      case '2024': return provincialTaxBrackets2024;\n      case '2025': return provincialTaxBrackets2025;\n      default: return provincialTaxBrackets2023;\n    }\n  });\n\n  // Provincial BPA (no marital status adjustment)\n  const effectiveProvincialBPA = computed(() => {\n    if (!selectedRegion.value) return 0;\n    const provinceCode = provinceCodeMap[selectedRegion.value];\n    if (!provinceCode) return 0;\n    const basePA = currentProvincialBasicPersonalAmounts.value[provinceCode] || 0;\n    return calculateEffectiveBPA(basePA);\n  });\n\n  // Full Fed Taxable\n  const totalFederalTaxableIncome = computed(() => {\n    let base = annualRegularIncome.value +\n      annualTaxableCapitalGains.value +\n      (grossedUpEligibleDividends.value * periodMultiplier.value) +\n      (grossedUpIneligibleDividends.value * periodMultiplier.value);\n    base -= annualRrspDeduction.value;\n    return Math.max(0, base);\n  });\n\n  // Get current year tax credits\n  const currentTaxCredits = computed(() => {\n    switch(yearStore.selectedTaxYear) {\n      case '2024': return taxCredits2024;\n      case '2025': return taxCredits2025;\n      default: return taxCredits2024;\n    }\n  });\n\n  // Federal BPA with phase-out for high income\n  const federalBpaCreditAnnual = computed(() => {\n    const year = yearStore.selectedTaxYear;\n    const baseEnhanced = currentFederalBasicPersonalAmount.value;\n    const floorByYear = { '2024': 14156, '2025': 14539 };\n    const incomeForPhase = totalFederalTaxableIncome.value; // proxy; ideally net income\n    const bpa = computeFederalBPAForIncome(baseEnhanced, floorByYear[year], incomeForPhase, year);\n    return bpa * 0.15; // Apply at lowest federal rate\n  });\n\n  // Canada Employment Amount credit (non-refundable) for employment income\n  const ceaCreditAnnual = computed(() => {\n    const cea = currentTaxCredits.value.employmentAmount || 0;\n    return (annualRegularIncome.value > 0) ? cea * 0.15 : 0;\n  });\n\n  // Dividend credit already computed as a tax credit amount\n  const federalDividendTaxCreditAnnual = computed(() => federalDividendTaxCredit.value * periodMultiplier.value);\n\n  // Basic federal tax before credits\n  const basicFederalTaxBeforeCreditsAnnual = computed(() => {\n    return calculateBracketTax(totalFederalTaxableIncome.value, currentFederalTaxBrackets.value);\n  });\n\n  // Basic federal tax after credits\n  const basicFederalTaxAfterCreditsAnnual = computed(() => {\n    const credits = federalBpaCreditAnnual.value + ceaCreditAnnual.value + federalDividendTaxCreditAnnual.value;\n    return Math.max(basicFederalTaxBeforeCreditsAnnual.value - credits, 0);\n  });\n\n  // Fed Tax (with Quebec abatement applied after credits)\n  const netFederalTaxAnnual = computed(() => {\n    let tax = basicFederalTaxAfterCreditsAnnual.value;\n    if (selectedRegion.value === 'Quebec') {\n      tax -= calculateQuebecAbatement(tax); // 16.5% of basic federal tax after credits\n    }\n    return Math.max(tax, 0);\n  });\n\n  // Provincial\n  const netProvincialTaxAnnual = computed(() => {\n    if (!selectedRegion.value || totalFederalTaxableIncome.value <= 0) return 0;\n    const provinceCode = provinceCodeMap[selectedRegion.value];\n    if (!provinceCode) return 0;\n    const brackets = currentProvincialTaxBrackets.value[provinceCode];\n    if (!brackets) return 0;\n    let provTaxable = totalFederalTaxableIncome.value - effectiveProvincialBPA.value;\n    provTaxable = Math.max(provTaxable, 0);\n    let provTax = calculateBracketTax(provTaxable, brackets);\n    return Math.max(provTax, 0);\n  });\n\n  // CPP/QPP (year-aware)\n  const pensionPlanContributionAnnual = computed(() => {\n    const baseIncome = annualRegularIncome.value;\n    const isSelfEmployed = (selfEmploymentIncome.value || 0) > 0;\n    const year = yearStore.selectedTaxYear;\n    \n    // Use Quebec-specific QPP calculation if Quebec is selected\n    if (selectedRegion.value === 'Quebec') {\n      return calculateQppContributions(baseIncome, isSelfEmployed, year);\n    }\n    \n    // Use federal CPP calculation for other provinces\n    return calculateCppContributions(baseIncome, isSelfEmployed, year);\n  });\n\n  // EI (year-aware)\n  const eiPremiumAnnual = computed(() => {\n    const provinceCode = selectedRegion.value === 'Quebec' ? 'QC' : null;\n    const year = yearStore.selectedTaxYear;\n    return calculateEiPremiumYearAware(annualRegularIncome.value, provinceCode, year);\n  });\n\n  // QPIP (Quebec only, year-aware)\n  const qpipContributionAnnual = computed(() => {\n    if (selectedRegion.value === 'Quebec') {\n      const year = yearStore.selectedTaxYear;\n      return calculateQpipContributionYearAware(annualRegularIncome.value, year);\n    }\n    return 0;\n  });\n\n  // Net Income\n  const netIncomeAfterCreditsAnnual = computed(() => {\n    const totalTax = netFederalTaxAnnual.value + netProvincialTaxAnnual.value\n      + pensionPlanContributionAnnual.value + eiPremiumAnnual.value + qpipContributionAnnual.value;\n    // For net, approximate using the sum of actual (non-grossed) dividends + half CG + T4.\n    const totalGrossAnnual =\n      annualRegularIncome.value +\n      annualTaxableCapitalGains.value +\n      (eligibleDividends.value || 0) * periodMultiplier.value +\n      (ineligibleDividends.value || 0) * periodMultiplier.value;\n    const net = totalGrossAnnual - totalTax;\n    return Math.max(net, 0);\n  });\n\n  // Per-period\n  const netFederalTaxPerPeriod = computed(() => netFederalTaxAnnual.value / periodMultiplier.value);\n  const netProvincialTaxPerPeriod = computed(() => netProvincialTaxAnnual.value / periodMultiplier.value);\n  const pensionPlanContributionPerPeriod = computed(() =>\n    pensionPlanContributionAnnual.value / periodMultiplier.value\n  );\n  const eiPremiumPerPeriod = computed(() => eiPremiumAnnual.value / periodMultiplier.value);\n  const qpipContributionPerPeriod = computed(() => qpipContributionAnnual.value / periodMultiplier.value);\n  const netIncomeAfterCreditsPerPeriod = computed(() =>\n    netIncomeAfterCreditsAnnual.value / periodMultiplier.value\n  );\n\n  const totalTaxPerPeriod = computed(() =>\n    netFederalTaxPerPeriod.value +\n    netProvincialTaxPerPeriod.value +\n    pensionPlanContributionPerPeriod.value +\n    eiPremiumPerPeriod.value +\n    qpipContributionPerPeriod.value\n  );\n\n  // % breakdown\n  const baseForPercent = computed(() => {\n    return (\n      annualRegularIncome.value +\n      annualTaxableCapitalGains.value +\n      (eligibleDividends.value || 0) * periodMultiplier.value +\n      (ineligibleDividends.value || 0) * periodMultiplier.value\n    );\n  });\n  const federalTaxPercentage = computed(() => {\n    if (baseForPercent.value <= 0) return '0.0';\n    return ((netFederalTaxAnnual.value / baseForPercent.value) * 100).toFixed(1);\n  });\n  const provincialTaxPercentage = computed(() => {\n    if (baseForPercent.value <= 0) return '0.0';\n    return ((netProvincialTaxAnnual.value / baseForPercent.value) * 100).toFixed(1);\n  });\n  const cppTaxPercentage = computed(() => {\n    if (baseForPercent.value <= 0) return '0.0';\n    return ((pensionPlanContributionAnnual.value / baseForPercent.value) * 100).toFixed(1);\n  });\n  const eiTaxPercentage = computed(() => {\n    if (baseForPercent.value <= 0) return '0.0';\n    return ((eiPremiumAnnual.value / baseForPercent.value) * 100).toFixed(1);\n  });\n  const qpipTaxPercentage = computed(() => {\n    if (baseForPercent.value <= 0) return '0.0';\n    return ((qpipContributionAnnual.value / baseForPercent.value) * 100).toFixed(1);\n  });\n\n  const totalBudget = computed(() => {\n    const budgetCats = yearStore.budgetYear === '2024' ? budgetCategories2024 : budgetCategories2022;\n    return budgetCats.reduce((sum, cat) => sum + cat.amount, 0);\n  });\n\n  const federalBudgetData = computed(() => {\n    const budgetCats = yearStore.budgetYear === '2024' ? budgetCategories2024 : budgetCategories2022;\n\n    if (netFederalTaxPerPeriod.value === 0) {\n      return budgetCats.map((cat) => ({\n        category: cat.name,\n        categoryKey: cat.key,\n        amount: 0,\n      }));\n    }\n    return budgetCats.map((cat) => ({\n      category: cat.name,\n      categoryKey: cat.key,\n      amount: (netFederalTaxPerPeriod.value * cat.amount) / totalBudget.value,\n    }));\n  });\n\n  const filteredBudgetData = computed(() => {\n    if (!selectedAllocationCategories.value.length) {\n      return federalBudgetData.value;\n    }\n    return federalBudgetData.value.filter(item =>\n      selectedAllocationCategories.value.includes(item.category)\n    );\n  });\n\n  // Sorted for \"Budget Categories\" display\n  const sortedBudgetData = computed(() => {\n    const data = [...filteredBudgetData.value];\n    data.sort((a, b) => {\n      return sortOrder.value === 'asc' ? a.amount - b.amount : b.amount - a.amount;\n    });\n    const budgetCats = yearStore.budgetYear === '2024' ? budgetCategories2024 : budgetCategories2022;\n    return data.map((item, index) => ({\n      ...item,\n      ...budgetCats.find((c) => c.name === item.category),\n      uniqueId: `${item.category}-${index}`,\n    }));\n  });\n\n  // Function to get translated category name\n  const getTranslatedCategoryName = (categoryId, year) => {\n    const categoryKey = `budgetCategories.y${year}.${getCategoryKeyById(categoryId)}.name`;\n    return translate(categoryKey, getCategoryNameById(categoryId));\n  };\n\n  // Helper function to get category key by ID\n  const getCategoryKeyById = (id) => {\n    const keyMap = {\n      1: 'healthcare',\n      2: 'childrenAndFamilies', \n      3: 'indigenousServices',\n      4: 'employmentInsuranceAndBenefits',\n      5: 'supportForSeniors',\n      6: 'defense',\n      7: 'publicSafetyAndEmergencyPreparedness',\n      8: 'internationalAffairsAndDevelopment',\n      9: 'publicDebtCharges',\n      10: 'loansInvestmentsAndAdvances',\n      11: 'otherGovernmentOperations'\n    };\n    return keyMap[id] || 'unknown';\n  };\n\n  // Helper function to get original category name by ID\n  const getCategoryNameById = (id) => {\n    const budgetCats = yearStore.budgetYear === '2024' ? budgetCategories2024 : budgetCategories2022;\n    const category = budgetCats.find(cat => cat.id === id);\n    return category ? category.name : 'Unknown Category';\n  };\n\n  const sortedBudgetCategories = computed(() => {\n    const budgetCats = yearStore.budgetYear === '2024' ? budgetCategories2024 : budgetCategories2022;\n    const year = yearStore.budgetYear === '2024' ? '2024' : '2022';\n    const categoriesCopy = budgetCats.map(cat => ({ ...cat }));\n    \n    categoriesCopy.forEach(cat => {\n      const allocated = (netFederalTaxPerPeriod.value * cat.amount) / totalBudget.value;\n      cat.allocatedAmount = allocated || 0;\n      cat.percentage = netFederalTaxPerPeriod.value\n        ? (allocated / netFederalTaxPerPeriod.value) * 100\n        : 0;\n      // Replace the name with translated version\n      cat.name = getTranslatedCategoryName(cat.id, year);\n    });\n    \n    return categoriesCopy.sort((a, b) =>\n      sortOrder.value === 'asc'\n        ? a.allocatedAmount - b.allocatedAmount\n        : b.allocatedAmount - a.allocatedAmount\n    );\n  });\n\n  // Validated actions\n  const actions = {\n    setIncome: createValidatedAction('calculator', 'income', function(value) {\n      income.value = value;\n    }),\n\n    setSelectedRegion: createValidatedAction('calculator', 'selectedRegion', function(region) {\n      selectedRegion.value = region;\n    }),\n\n    setSelfEmploymentIncome: createValidatedAction('calculator', 'selfEmploymentIncome', function(value) {\n      selfEmploymentIncome.value = value;\n    }),\n\n    setCapitalGainsBeforeJune25: createValidatedAction('calculator', 'capitalGainsBeforeJune25', function(value) {\n      capitalGainsBeforeJune25.value = value;\n    }),\n\n    setCapitalGainsAfterJune25: createValidatedAction('calculator', 'capitalGainsAfterJune25', function(value) {\n      capitalGainsAfterJune25.value = value;\n    }),\n\n    setEligibleDividends: createValidatedAction('calculator', 'eligibleDividends', function(value) {\n      eligibleDividends.value = value;\n    }),\n\n    setIneligibleDividends: createValidatedAction('calculator', 'ineligibleDividends', function(value) {\n      ineligibleDividends.value = value;\n    }),\n\n    setOtherIncome: createValidatedAction('calculator', 'otherIncome', function(value) {\n      otherIncome.value = value;\n    }),\n\n    setRrspDeduction: createValidatedAction('calculator', 'rrspDeduction', function(value) {\n      rrspDeduction.value = value;\n    }),\n\n    setMaritalStatus: createValidatedAction('calculator', 'maritalStatus', function(status) {\n      maritalStatus.value = status;\n    }),\n\n    setNumberOfDependents: createValidatedAction('calculator', 'numberOfDependents', function(value) {\n      numberOfDependents.value = value;\n    }),\n\n    setNumberOfChildrenUnder18: createValidatedAction('calculator', 'numberOfChildrenUnder18', function(value) {\n      numberOfChildrenUnder18.value = value;\n    }),\n\n    setNumberOfDependentsWithDisabilities: createValidatedAction('calculator', 'numberOfDependentsWithDisabilities', function(value) {\n      numberOfDependentsWithDisabilities.value = value;\n    }),\n\n    // Reset all calculator data\n    resetCalculator: function() {\n      selectedRegion.value = '';\n      income.value = undefined;\n      selfEmploymentIncome.value = undefined;\n      capitalGainsBeforeJune25.value = undefined;\n      capitalGainsAfterJune25.value = undefined;\n      eligibleDividends.value = undefined;\n      ineligibleDividends.value = undefined;\n      otherIncome.value = undefined;\n      rrspDeduction.value = undefined;\n      maritalStatus.value = '';\n      numberOfDependents.value = undefined;\n      numberOfChildrenUnder18.value = undefined;\n      numberOfDependentsWithDisabilities.value = undefined;\n    }\n  };\n\n  return {\n    // State\n    selectedRegion,\n    income,\n    selfEmploymentIncome,\n    capitalGainsBeforeJune25,\n    capitalGainsAfterJune25,\n    eligibleDividends,\n    ineligibleDividends,\n    otherIncome,\n    rrspDeduction,\n    maritalStatus,\n    numberOfDependents,\n    numberOfChildrenUnder18,\n    numberOfDependentsWithDisabilities,\n    \n    // Computed values\n    regularIncome,\n    totalCapitalGains,\n    grossedUpEligibleDividends,\n    grossedUpIneligibleDividends,\n    netFederalTaxAnnual,\n    netFederalTaxPerPeriod,\n    federalTaxPercentage,\n    netProvincialTaxPerPeriod,\n    provincialTaxPercentage,\n    pensionPlanContributionPerPeriod,\n    cppTaxPercentage,\n    eiPremiumPerPeriod,\n    eiTaxPercentage,\n    qpipContributionPerPeriod,\n    qpipTaxPercentage,\n    totalTaxPerPeriod,\n    netIncomeAfterCreditsPerPeriod,\n    totalBudget,\n    federalBudgetData,\n    sortedBudgetData,\n    sortedBudgetCategories,\n    \n    // Actions\n    ...actions\n  }\n})","import { defineStore } from \"pinia\";\nimport { ref } from \"vue\";\nimport { budgetCategories2022, budgetCategories2024 } from \"@/domains/calculator/constants/taxData.js\";\nimport { createValidatedAction } from '@/utils/storeActionWrapper.js';\n\nexport const useConfigStore = defineStore('config', () => {\n  const allExpanded = ref(false);\n  const sortOrder = ref(localStorage.getItem('sortOrder') || 'desc');\n  const selectedAllocationCategories = ref([]);\n  const visibleDescriptions = ref([])\n\n  const toggleDescription = function(categoryId) {\n    const cat = budgetCategories2022.find((c) => c.id === categoryId) || budgetCategories2024.find((c) => c.id === categoryId);\n    if (cat) {\n      const idIndex = visibleDescriptions.value.indexOf(cat.id)\n      if (idIndex === -1) {\n        visibleDescriptions.value.push(cat.id)\n      } else {\n        visibleDescriptions.value.splice(idIndex, 1)\n      }\n    }\n  }\n\n  const toggleAll = function() {\n    visibleDescriptions.value = []\n    if (!allExpanded.value) {\n      budgetCategories2022.forEach((cat) => {\n        visibleDescriptions.value.push(cat.id)\n      });\n      budgetCategories2024.forEach((cat) => {\n        visibleDescriptions.value.push(cat.id)\n      });\n    }\n    allExpanded.value = !allExpanded.value;\n  }\n\n  const toggleSortAmount = createValidatedAction('config', 'sortOrder', function() {\n    sortOrder.value = sortOrder.value === 'asc' ? 'desc' : 'asc';\n    localStorage.setItem('sortOrder', sortOrder.value);\n  });\n\n  const setAllExpanded = createValidatedAction('config', 'allExpanded', function(value) {\n    allExpanded.value = value;\n  });\n\n  return {\n    allExpanded,\n    sortOrder,\n    selectedAllocationCategories,\n    toggleDescription,\n    toggleAll,\n    toggleSortAmount,\n    setAllExpanded,\n    visibleDescriptions\n  }\n}) ","export const formatCurrency = (value) => {\n  return new Intl.NumberFormat('en-CA', {\n    style: 'currency',\n    currency: 'CAD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(value)\n}\n\nexport const generateColors = (count) => {\n  const colors = [\n    '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',\n    '#FF9F40', '#8AC24A', '#FF5722', '#2196F3', '#9C27B0',\n    '#E91E63', '#00BCD4', '#FFC107', '#795548', '#607D8B'\n  ]\n  \n  // If we need more colors than we have, generate them\n  if (count > colors.length) {\n    for (let i = colors.length; i < count; i++) {\n      const hue = (i * 137.508) % 360 // Golden angle approximation\n      colors.push(`hsl(${hue}, 70%, 60%)`)\n    }\n  }\n  \n  return colors.slice(0, count)\n} ","export const htmlLegendPlugin = {\n  id: 'htmlLegend',\n  afterUpdate(chart, args, options) {\n    const container = options.container?.value || document.getElementById(options.containerID)\n    if (!container) return\n\n    // Clear previous legend\n    container.innerHTML = ''\n\n    // Get chart data\n    const { data } = chart\n    if (!data || !data.datasets.length) return\n\n    const dataset = data.datasets[0]\n    const total = dataset.data.reduce((a, b) => a + b, 0)\n\n    // Create legend items\n    data.labels.forEach((label, i) => {\n      const value = dataset.data[i]\n      const percentage = total ? ((value / total) * 100).toFixed(2) : '0.00'\n      const color = dataset.backgroundColor[i]\n      const locale = (typeof navigator !== 'undefined' ? navigator.language : 'en-CA') || 'en-CA'\n      const formattedValue = new Intl.NumberFormat(locale, { style: 'currency', currency: 'CAD', minimumFractionDigits: 2, maximumFractionDigits: 2 }).format(value)\n\n      const legendItem = document.createElement('div')\n      legendItem.style.display = 'flex'\n      legendItem.style.alignItems = 'center'\n      legendItem.style.marginBottom = '4px'\n      legendItem.style.fontSize = '12px'\n\n      const colorBox = document.createElement('div')\n      colorBox.style.width = '12px'\n      colorBox.style.height = '12px'\n      colorBox.style.backgroundColor = color\n      colorBox.style.marginRight = '8px'\n      colorBox.style.borderRadius = '2px'\n\n      const text = document.createElement('span')\n      text.textContent = `${label}: ${formattedValue} (${percentage}%)`\n\n      legendItem.appendChild(colorBox)\n      legendItem.appendChild(text)\n      container.appendChild(legendItem)\n    })\n  }\n} ","<template>\n  <div class=\"preset-panel\">\n    <div class=\"preset-header\">\n      <h3>\n        <span class=\"material-icons icon\">auto_awesome</span>\n        {{ i18nText('simulator.presets.title', 'Budget Presets') }}\n      </h3>\n      <button \n        class=\"toggle-button\"\n        :aria-expanded=\"isExpanded\"\n        aria-controls=\"preset-grid\"\n        @click=\"isExpanded = !isExpanded\"\n      >\n        <span class=\"material-icons\">{{ isExpanded ? 'expand_less' : 'expand_more' }}</span>\n        <span class=\"sr-only\">{{ isExpanded ? i18nText('simulator.presets.hide', 'Hide') : i18nText('simulator.presets.show', 'Show') }} {{ i18nText('simulator.presets.label', 'Presets') }}</span>\n      </button>\n    </div>\n    \n    <transition name=\"slide\">\n      <div\n        v-if=\"isExpanded\"\n        id=\"preset-grid\"\n        class=\"preset-grid\"\n        role=\"group\"\n        :aria-label=\"i18nText('simulator.presets.ariaGroup', 'Budget presets')\"\n      >\n        <div \n          v-for=\"(preset, key) in budgetPresets\" \n          :key=\"key\"\n          class=\"preset-tile\"\n        >\n          <button \n            class=\"preset-button\" \n            :class=\"{ 'active': activePreset === key }\"\n            :aria-pressed=\"activePreset === key\"\n            :aria-label=\"formatPresetAria(preset.label)\"\n            @click=\"applyPreset(key)\"\n            @mouseenter=\"hoveredPreset = key\"\n            @mouseleave=\"hoveredPreset = null\"\n          >\n            <div class=\"preset-content\">\n              <div class=\"preset-label\">\n                {{ presetLabel(key, preset.label) }}\n              </div>\n              <div\n                :id=\"`preset-desc-${key}`\"\n                class=\"preset-description\"\n              >\n                {{ getShortDescription(preset.description) }}\n              </div>\n              \n              <div\n                v-if=\"preset.fiscalBalance\"\n                class=\"preset-fiscal-badge\"\n                :class=\"preset.fiscalBalance\"\n              >\n                {{ getFiscalBalanceLabel(preset.fiscalBalance) }}\n              </div>\n            </div>\n          </button>\n        </div>\n      </div>\n    </transition>\n    \n    <!-- Preset Information Panel -->\n    <div class=\"preset-info-panel\">\n      <div\n        v-if=\"hoveredPreset\"\n        class=\"preset-details\"\n      >\n        <h4 class=\"preset-details-title\">\n          {{ presetLabel(hoveredPreset, budgetPresets[hoveredPreset]?.label || '') }}\n        </h4>\n        <p class=\"preset-details-description\">\n          {{ presetDescription(hoveredPreset, budgetPresets[hoveredPreset]?.description || '') }}\n        </p>\n        <div\n          v-if=\"budgetPresets[hoveredPreset]?.fiscalBalance\"\n          class=\"preset-fiscal-badge-large\"\n          :class=\"budgetPresets[hoveredPreset]?.fiscalBalance\"\n        >\n          {{ getFiscalBalanceLabel(budgetPresets[hoveredPreset]?.fiscalBalance) }}\n        </div>\n      </div>\n      \n      <div\n        v-if=\"!hoveredPreset && activePreset\"\n        class=\"preset-details\"\n      >\n        <h4 class=\"preset-details-title\">\n          {{ presetLabel(activePreset, budgetPresets[activePreset]?.label || '') }}\n        </h4>\n        <p class=\"preset-details-description\">\n          {{ presetDescription(activePreset, budgetPresets[activePreset]?.description || '') }}\n        </p>\n        <div\n          v-if=\"budgetPresets[activePreset]?.fiscalBalance\"\n          class=\"preset-fiscal-badge-large\"\n          :class=\"budgetPresets[activePreset]?.fiscalBalance\"\n        >\n          {{ getFiscalBalanceLabel(budgetPresets[activePreset]?.fiscalBalance) }}\n        </div>\n      </div>\n      \n      <div\n        v-if=\"!hoveredPreset && !activePreset\"\n        class=\"preset-details preset-details-empty\"\n      >\n        <p>{{ i18nText('simulator.presets.hoverHint', 'Hover over a preset to see details or click to apply it to your budget.') }}</p>\n      </div>\n    </div>\n    \n    <!-- Active Preset Info -->\n    <div\n      v-if=\"activePreset\"\n      class=\"active-preset-info\"\n    >\n      <div class=\"active-preset-label\">\n        <span class=\"material-icons\">check_circle</span>\n        {{ i18nText('simulator.presets.activeLabel', 'Active Preset:') }} {{ presetLabel(activePreset, budgetPresets[activePreset]?.label || '') }}\n      </div>\n      <button \n        class=\"reset-button\" \n        :aria-label=\"i18nText('simulator.presets.resetAria', 'Reset active preset')\"\n        @click=\"resetPreset\"\n      >\n        <span class=\"material-icons\">restart_alt</span>\n        {{ i18nText('simulator.presets.reset', 'Reset') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapStores } from 'pinia';\nimport { useBudgetSimulatorStore } from '@/domains/budget/store/budgetSimulator';\nimport { budgetPresets, setPreset } from '@/presets';\n\nexport default {\n  name: 'PresetSelector',\n  \n  data() {\n    return {\n      budgetPresets,\n      isExpanded: true,\n      activePreset: null,\n      hoveredPreset: null\n    };\n  },\n  \n  watch: {\n    // Watch for changes in the store's activePreset value\n    'budgetSimulatorStore.activePreset': function(newValue) {\n      this.activePreset = newValue;\n    }\n  },\n  \n  mounted() {\n    // Initialize activePreset from store on component mount\n    this.activePreset = this.budgetSimulatorStore.activePreset;\n  },\n  \n  computed: {\n    ...mapStores(useBudgetSimulatorStore)\n  },\n  \n  methods: {\n    i18nText(key, fallback = '') {\n      const value = this.$t ? this.$t(key) : key\n      return value === key ? fallback : value\n    },\n    presetLabel(key, fallback = '') {\n      return this.i18nText(`simulator.presets.items.${key}`, fallback)\n    },\n    presetDescription(key, fallback = '') {\n      return this.i18nText(`simulator.presets.descriptions.${key}`, fallback)\n    },\n    formatPresetAria(label) {\n      return this.i18nText('simulator.presets.applyAria', 'Apply {label} preset').replace('{label}', label)\n    },\n    getFiscalBalanceLabel(balance) {\n      return this.i18nText(`simulator.presets.badge.${balance}`, balance.charAt(0).toUpperCase() + balance.slice(1))\n    },\n    applyPreset(presetKey) {\n      setPreset(presetKey, this.budgetSimulatorStore)\n      this.activePreset = presetKey\n      this.$emit('preset-applied', presetKey)\n    },\n    resetPreset() {\n      this.activePreset = null\n      this.budgetSimulatorStore.resetBudget()\n      this.$emit('preset-reset')\n    },\n    getShortDescription(description) {\n      return description.length > 60\n        ? description.substring(0, 57) + '...'\n        : description\n    }\n  }\n};\n</script>\n\n<style scoped>\n.preset-panel {\n  margin: 1rem 0 1.5rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.5rem;\n  background-color: #f8fafc;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.preset-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.75rem 1rem;\n  background-color: #f1f5f9;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.preset-header h3 {\n  margin: 0;\n  font-size: 1.1rem;\n  color: #334155;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.preset-header .icon {\n  font-size: 1.2rem;\n  color: #3b82f6;\n}\n\n.toggle-button {\n  background-color: transparent;\n  border: none;\n  border-radius: 0.25rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  color: #64748b;\n  padding: 0.25rem;\n  transition: all 0.2s;\n}\n\n.toggle-button:hover {\n  background-color: #e2e8f0;\n  color: #334155;\n}\n\n.toggle-button .material-icons {\n  font-size: 1.25rem;\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.preset-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n  gap: 0.75rem;\n  padding: 1rem;\n  background-color: #f8fafc;\n}\n\n.preset-tile {\n  position: relative;\n  width: 100%;\n}\n\n/* This creates a square aspect ratio using padding trick */\n.preset-tile::before {\n  content: \"\";\n  display: block;\n  padding-top: 100%; /* Creates a 1:1 aspect ratio */\n}\n\n.preset-button {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 0.5rem;\n  background-color: white;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-align: left;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.preset-button:hover {\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 1px #3b82f6, 0 2px 4px rgba(0, 0, 0, 0.1);\n  transform: translateY(-1px);\n}\n\n.preset-button:focus {\n  outline: none;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 2px #93c5fd;\n}\n\n.preset-button.active {\n  background-color: #eff6ff;\n  border-color: #3b82f6;\n  box-shadow: 0 0 0 1px #3b82f6, 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.preset-content {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  z-index: 2;\n  justify-content: space-between;\n}\n\n.preset-label {\n  font-size: 0.9rem;\n  font-weight: 600;\n  color: #1e40af;\n  margin-bottom: 0.25rem;\n  line-height: 1.2;\n}\n\n.preset-description {\n  font-size: 0.7rem;\n  color: #64748b;\n  flex-grow: 1;\n  line-height: 1.3;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  line-clamp: 4;\n  -webkit-box-orient: vertical;\n}\n\n.preset-fiscal-badge {\n  font-size: 0.7rem;\n  padding: 0.2rem 0.5rem;\n  border-radius: 9999px;\n  font-weight: 500;\n  align-self: flex-start;\n  margin-top: 0.5rem;\n}\n\n.preset-fiscal-badge.balanced {\n  background-color: #e6fffa;\n  color: #0d9488;\n  border: 1px solid #99f6e4;\n}\n\n.preset-fiscal-badge.surplus {\n  background-color: #ecfdf5;\n  color: #059669;\n  border: 1px solid #a7f3d0;\n}\n\n.preset-fiscal-badge.deficit {\n  background-color: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n}\n\n/* Preset Info Panel */\n.preset-info-panel {\n  background-color: #f8fafc;\n  border-top: 1px solid #e2e8f0;\n  padding: 1rem;\n  min-height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.preset-details {\n  max-width: 600px;\n  text-align: center;\n}\n\n.preset-details-empty {\n  color: #64748b;\n  font-style: italic;\n}\n\n.preset-details-title {\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: #1e40af;\n  margin: 0 0 0.5rem 0;\n}\n\n.preset-details-description {\n  font-size: 0.95rem;\n  color: #334155;\n  line-height: 1.5;\n  margin: 0 0 0.75rem 0;\n}\n\n.preset-fiscal-badge-large {\n  display: inline-block;\n  font-size: 0.8rem;\n  padding: 0.25rem 0.75rem;\n  border-radius: 9999px;\n  font-weight: 500;\n  margin-top: 0.5rem;\n}\n\n.preset-fiscal-badge-large.balanced {\n  background-color: #e6fffa;\n  color: #0d9488;\n  border: 1px solid #99f6e4;\n}\n\n.preset-fiscal-badge-large.surplus {\n  background-color: #ecfdf5;\n  color: #059669;\n  border: 1px solid #a7f3d0;\n}\n\n.preset-fiscal-badge-large.deficit {\n  background-color: #fef2f2;\n  color: #dc2626;\n  border: 1px solid #fecaca;\n}\n\n.active-preset-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.5rem 1rem;\n  background-color: #eff6ff;\n  border-top: 1px solid #dbeafe;\n}\n\n.active-preset-label {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.9rem;\n  color: #1e40af;\n}\n\n.active-preset-label .material-icons {\n  font-size: 1rem;\n  color: #3b82f6;\n}\n\n.reset-button {\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  background-color: #dbeafe;\n  border: none;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n  font-size: 0.8rem;\n  color: #1e40af;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-button:hover {\n  background-color: #bfdbfe;\n}\n\n.reset-button .material-icons {\n  font-size: 0.9rem;\n}\n\n/* Animation */\n.slide-enter-active,\n.slide-leave-active {\n  transition: max-height 0.3s ease-in-out, opacity 0.2s ease-in-out;\n  max-height: 1000px;\n  opacity: 1;\n  overflow: hidden;\n}\n\n.slide-enter-from,\n.slide-leave-to {\n  max-height: 0;\n  opacity: 0;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .preset-grid {\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  }\n  \n  .preset-button {\n    min-height: 90px;\n    padding: 0.75rem;\n  }\n  \n  .preset-label {\n    font-size: 0.9rem;\n  }\n  \n  .preset-description {\n    font-size: 0.75rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .preset-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .preset-button {\n    min-height: 80px;\n  }\n  \n  .active-preset-info {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n  \n  .reset-button {\n    align-self: flex-end;\n  }\n}\n</style>\n","import { render } from \"./PresetSelector.vue?vue&type=template&id=e61b0216&scoped=true\"\nimport script from \"./PresetSelector.vue?vue&type=script&lang=js\"\nexport * from \"./PresetSelector.vue?vue&type=script&lang=js\"\n\nimport \"./PresetSelector.vue?vue&type=style&index=0&id=e61b0216&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e61b0216\"]])\n\nexport default __exports__"],"names":["useCalculator","calculatorStore","useCalculatorStore","income","selectedRegion","selfEmploymentIncome","capitalGainsBeforeJune25","capitalGainsAfterJune25","eligibleDividends","ineligibleDividends","otherIncome","rrspDeduction","maritalStatus","numberOfDependents","numberOfChildrenUnder18","numberOfDependentsWithDisabilities","storeToRefs","sanitizeNumericInput","value","undefined","sanitized","String","replace","parts","split","length","parseFloat","slice","join","maxDecimalPlaces","maxPlaces","decimalStr","checkCorrectType","MAX_INCOME","MAX_DEPENDENTS","MAX_RRSP","rules","computed","numeric","minValue","maxValue","helpers","withMessage","v$","useVuelidate","canCalculate","$invalid","$error","calculateBracketTax","taxable","brackets","tax","previousUpTo","bracket","upTo","rate","Math","max","calculateDividendTaxCredit","grossedUpEligible","grossedUpIneligible","fedEligibleCredit","fedIneligibleCredit","calculateEffectiveBPA","baseAmount","calculateQuebecAbatement","federalBasicTax","EI_TABLE","nonQC","mie","QC","CPP_TABLE","ybe","ympe","yampe","baseRate","baseMax","addRate","addMax","QPP_TABLE","mpe","ampe","QPIP_TABLE","calculateEiPremiumYearAware","provinceCode","year","y","isQC","min","calculateCppContributions","isSelfEmployed","basePensionable","base","addBase","add","employee","calculateQppContributions","calculateQpipContributionYearAware","computeFederalBPAForIncome","baseEnhanced","baseFloor","ranges","start","end","r","frac","provinceCodeMap","defineStore","periodMultiplier","useSalaryStore","selectedAllocationCategories","sortOrder","useConfigStore","yearStore","useYearStore","t","useI18n","translate","key","fallback","params","ref","federalDividendTaxCredit","grossedUpEligibleDividends","grossedUpIneligibleDividends","regularIncome","totalCapitalGains","taxableCapitalGains","annualRegularIncome","annualTaxableCapitalGains","annualRrspDeduction","currentFederalTaxBrackets","selectedTaxYear","federalTaxBrackets2022","federalTaxBrackets2023","federalTaxBrackets2024","federalTaxBrackets2025","currentFederalBasicPersonalAmount","federalBasicPersonalAmount2022","federalBasicPersonalAmount2023","federalBasicPersonalAmount2024","federalBasicPersonalAmount2025","currentProvincialBasicPersonalAmounts","provincialBasicPersonalAmounts2022","provincialBasicPersonalAmounts2023","provincialBasicPersonalAmounts2024","provincialBasicPersonalAmounts2025","currentProvincialTaxBrackets","provincialTaxBrackets2022","provincialTaxBrackets2023","provincialTaxBrackets2024","provincialTaxBrackets2025","effectiveProvincialBPA","basePA","totalFederalTaxableIncome","currentTaxCredits","taxCredits2024","taxCredits2025","federalBpaCreditAnnual","floorByYear","incomeForPhase","bpa","ceaCreditAnnual","cea","employmentAmount","federalDividendTaxCreditAnnual","basicFederalTaxBeforeCreditsAnnual","basicFederalTaxAfterCreditsAnnual","credits","netFederalTaxAnnual","netProvincialTaxAnnual","provTaxable","provTax","pensionPlanContributionAnnual","baseIncome","eiPremiumAnnual","qpipContributionAnnual","netIncomeAfterCreditsAnnual","totalTax","totalGrossAnnual","net","netFederalTaxPerPeriod","netProvincialTaxPerPeriod","pensionPlanContributionPerPeriod","eiPremiumPerPeriod","qpipContributionPerPeriod","netIncomeAfterCreditsPerPeriod","totalTaxPerPeriod","baseForPercent","federalTaxPercentage","toFixed","provincialTaxPercentage","cppTaxPercentage","eiTaxPercentage","qpipTaxPercentage","totalBudget","budgetCats","budgetYear","budgetCategories2024","budgetCategories2022","reduce","sum","cat","amount","federalBudgetData","map","category","name","categoryKey","filteredBudgetData","filter","item","includes","sortedBudgetData","data","sort","a","b","index","find","c","uniqueId","getTranslatedCategoryName","categoryId","getCategoryKeyById","getCategoryNameById","id","keyMap","sortedBudgetCategories","categoriesCopy","forEach","allocated","allocatedAmount","percentage","actions","setIncome","createValidatedAction","setSelectedRegion","region","setSelfEmploymentIncome","setCapitalGainsBeforeJune25","setCapitalGainsAfterJune25","setEligibleDividends","setIneligibleDividends","setOtherIncome","setRrspDeduction","setMaritalStatus","status","setNumberOfDependents","setNumberOfChildrenUnder18","setNumberOfDependentsWithDisabilities","resetCalculator","allExpanded","localStorage","getItem","visibleDescriptions","toggleDescription","idIndex","indexOf","push","splice","toggleAll","toggleSortAmount","setItem","setAllExpanded","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","generateColors","count","colors","i","hue","htmlLegendPlugin","afterUpdate","chart","args","options","container","document","getElementById","containerID","innerHTML","datasets","dataset","total","labels","label","color","backgroundColor","locale","navigator","language","formattedValue","legendItem","createElement","display","alignItems","marginBottom","fontSize","colorBox","width","height","marginRight","borderRadius","text","textContent","appendChild","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createTextVNode","_toDisplayString","$options","i18nText","$data","isExpanded","onClick","_cache","$event","_hoisted_4","_hoisted_5","_hoisted_3","_createVNode","_Transition","default","_withCtx","role","_Fragment","_renderList","budgetPresets","preset","_normalizeClass","activePreset","formatPresetAria","applyPreset","onMouseenter","hoveredPreset","onMouseleave","_hoisted_8","_hoisted_9","presetLabel","getShortDescription","description","_hoisted_10","fiscalBalance","getFiscalBalanceLabel","_createCommentVNode","_hoisted_7","_hoisted_6","_","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","presetDescription","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","resetPreset","_hoisted_21","watch","newValue","this","mounted","budgetSimulatorStore","mapStores","useBudgetSimulatorStore","methods","$t","balance","charAt","toUpperCase","presetKey","setPreset","$emit","resetBudget","substring","__exports__","render"],"sourceRoot":""}