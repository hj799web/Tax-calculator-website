{"version":3,"file":"js/3480.682ad9b4.js","mappings":"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","sources":["webpack://my-new-project/./src/domains/budget/components/SpendingPanel.vue","webpack://my-new-project/./src/domains/budget/components/SpendingPanel.vue?6874"],"sourcesContent":["<template>\n  <div class=\"spending-panel\">\n    <SpendingControls\n      :main-categories=\"mainCategories\"\n      :other-categories-groups=\"otherCategoriesGroups\"\n      :sorted-gov-ops-children=\"sortedGovOpsChildren\"\n      :spending-factors=\"spendingFactors\"\n      :auto-balance-active=\"budget.autoBalanceActive\"\n      :expanded-groups=\"expandedGroups\"\n      :total-main-categories=\"budget.mainCategoriesSpending\"\n      :total-other-categories=\"budget.otherCategoriesTotal\"\n      :total-gov-ops=\"budget.governmentOperationsSpending\"\n      :total-spending=\"budget.totalSpending\"\n      :tax-expenditures=\"budget.taxExpenditures\"\n      :total-tax-expenditures=\"totalTaxExpenditures\"\n      :tax-expenditure-revenue-impact=\"budget.taxExpenditureRevenueImpact\"\n      :get-group-children=\"getGroupChildren\"\n      @update-spending-factor=\"onUpdateSpendingFactor\"\n      @update-group-spending-factor=\"onUpdateGroupSpendingFactor\"\n      @toggle-group-expansion=\"budget.toggleGroupExpansion\"\n      @reset-gov-ops=\"resetGovOpsSubcategories\"\n      @reset-other-categories=\"resetOtherCategoriesSubcategories\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useBudgetSimulatorStore } from '@/domains/budget/store/budgetSimulator';\nimport SpendingControls from '@/domains/budget/components/BudgetSpendingControls.vue';\n\nconst budget = useBudgetSimulatorStore();\n\n// Ensure key sections are visible by default inside the panel\nconst expandedGroups = computed(() => ({\n  ...budget.expandedGroups,\n  otherCategories: true,\n  governmentOperations: true,\n}));\n\nconst mainCategoryIds = ['healthcare','education','seniors','childrenFamilies','indigenousServices','employmentInsurance','defensePublicSafety'];\n\nconst mainCategories = computed(() => mainCategoryIds\n  .map(id => budget.spendingCategories[id])\n  .filter(Boolean)\n);\n\nconst otherCategoriesGroups = computed(() => {\n  const out = [];\n  const gov = budget.spendingCategories.governmentOperations;\n  const loans = budget.spendingCategories.loansInvestments;\n  if (gov?.isGroup) out.push({ id: gov.id, name: gov.name, description: gov.description, baseAmount: sumBase(gov) });\n  if (loans?.isGroup) out.push({ id: loans.id, name: loans.name, description: loans.description, baseAmount: sumBase(loans) });\n  return out;\n});\n\nconst sortedGovOpsChildren = computed(() => {\n  const g = budget.spendingCategories.governmentOperations;\n  if (!g || !g.children) return [];\n  return Object.values(g.children).slice().sort((a,b) => (a.name||'').localeCompare(b.name||''));\n});\n\nconst spendingFactors = computed(() => {\n  const map = {};\n  const pushCat = (c) => { map[c.id] = Number((c.adjustmentFactor || 1) * 100); };\n  for (const [, cat] of Object.entries(budget.spendingCategories)) {\n    if (cat?.isGroup && cat?.children) {\n      for (const child of Object.values(cat.children)) pushCat(child);\n    } else if (cat && !cat.isGroup) pushCat(cat);\n  }\n  return map;\n});\n\nfunction getGroupChildren(groupId) {\n  const g = budget.spendingCategories[groupId];\n  if (!g || !g.children) return [];\n  return Object.values(g.children);\n}\n\nfunction sumBase(group) {\n  if (!group?.children) return 0;\n  return Object.values(group.children).reduce((t,c)=> t + Number(c.baseAmount||0), 0);\n}\n\n// Total of Tax Expenditures (use netAmount if present)\nconst totalTaxExpenditures = computed(() => {\n  const exp = budget.taxExpenditures || {};\n  return Object.values(exp).reduce((t, e) => t + Number(e?.netAmount ?? e?.baseAmount ?? 0), 0);\n});\n\n// Event wrappers convert percent â†’ factor\nfunction onUpdateSpendingFactor(id, percent) {\n  const factor = Number(percent) / 100;\n  if (!isFinite(factor)) return;\n  budget.updateSpendingFactor(id, factor);\n}\n\nfunction onUpdateGroupSpendingFactor(groupId, percent) {\n  const factor = Number(percent) / 100;\n  if (!isFinite(factor)) return;\n  budget.updateGroupSpendingFactor(groupId, factor);\n}\n\nfunction resetGovOpsSubcategories() {\n  const gov = budget.spendingCategories.governmentOperations;\n  if (!gov?.children) return;\n  for (const child of Object.values(gov.children)) {\n    budget.updateSpendingFactor(child.id, 1);\n  }\n}\n\nfunction resetOtherCategoriesSubcategories() {\n  const loans = budget.spendingCategories.loansInvestments;\n  if (!loans?.children) return;\n  for (const child of Object.values(loans.children)) {\n    budget.updateSpendingFactor(child.id, 1);\n  }\n}\n</script>\n\n<style scoped>\n.spending-panel { display: block; }\n/* Ensure embedded simulator-card within panel doesn't force tall height */\n.spending-panel :deep(.simulator-card) { min-height: auto; }\n</style>\n","import script from \"./SpendingPanel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SpendingPanel.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SpendingPanel.vue?vue&type=style&index=0&id=2055a8fa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2055a8fa\"]])\n\nexport default __exports__"],"names":["budget","useBudgetSimulatorStore","expandedGroups","computed","otherCategories","governmentOperations","mainCategoryIds","mainCategories","map","id","spendingCategories","filter","Boolean","otherCategoriesGroups","out","gov","loans","loansInvestments","isGroup","push","name","description","baseAmount","sumBase","sortedGovOpsChildren","g","children","Object","values","slice","sort","a","b","localeCompare","spendingFactors","pushCat","c","Number","adjustmentFactor","cat","entries","child","getGroupChildren","groupId","group","reduce","t","totalTaxExpenditures","exp","taxExpenditures","e","netAmount","onUpdateSpendingFactor","percent","factor","isFinite","updateSpendingFactor","onUpdateGroupSpendingFactor","updateGroupSpendingFactor","resetGovOpsSubcategories","resetOtherCategoriesSubcategories","__exports__"],"sourceRoot":""}